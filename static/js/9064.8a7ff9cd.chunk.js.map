{"version":3,"file":"static/js/9064.8a7ff9cd.chunk.js","mappings":"2JAGO,MAAMA,E,SAAiBC,SAASC,gBAAgB,CACrDC,SAAU,CAAC,iBAAkB,cAC7BC,UAAYC,IAAO,CAEjBC,kBAAmBD,EAAQE,MAAM,CAC/BA,MAAOA,KAAA,CACLC,IAAI,gBACJC,OAAQ,QAEVC,aAAc,CAAC,oBAGjBC,sBAAuBN,EAAQE,MAAM,CACnCA,MAAQK,IAAE,CACRJ,IAAI,iBAADK,OAAmBD,GACtBH,OAAQ,QAEVC,aAAc,CAAC,gBAGjBI,mBAAoBT,EAAQU,SAAS,CACnCR,MAAQS,IAAI,CACVR,IAAI,gBACJC,OAAQ,OACRQ,KAAMD,IAERE,gBAAiB,CAAC,oBAIpBC,yBAA0Bd,EAAQU,SAAS,CACzCR,MAAOa,IAAA,IAAC,GAAER,EAAE,KAAES,GAAMD,EAAA,MAAM,CACxBZ,IAAI,iBAADK,OAAmBD,GACtBH,OAAQ,MACRQ,KAAMI,EACP,EACDH,gBAAiB,CAAC,iBAAkB,gBAItCI,yBAA0BjB,EAAQU,SAAS,CACzCR,MAAQK,IAAE,CACRJ,IAAI,iBAADK,OAAmBD,GACtBH,OAAQ,WAEVS,gBAAiB,CAAC,yBAKX,0BACXK,EAAyB,8BACzBC,EAA6B,8BAC7BC,EAA6B,oCAC7BC,EAAmC,oCACnCC,GACE3B,C,iKC/CJ,MAiDA,EAjDiCoB,IAA0B,IAAzB,MAAEQ,EAAK,SAAEC,GAAUT,EACnD,MAAOU,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAEzCV,GACEW,UAAWC,EAAeC,QAASC,EAAaC,MAAOC,EAAQ,UAAEC,KACjEZ,EAAAA,EAAAA,MAaJ,OANAa,EAAAA,EAAAA,YAAU,KACRC,EAAAA,GAAMC,UACNH,GAAaE,EAAAA,GAAME,QAAQ,sBAAuB,CAAE/B,GAAI,aACxDwB,GAAeK,EAAAA,GAAMJ,MAAM,gBAAiB,CAAEzB,GAAI,WAAY,GAC7D,CAAC2B,EAAWH,KAGbQ,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKH,SAAElB,EAAQ,KACvCmB,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKH,UAC3BC,EAAAA,EAAAA,KAAA,KAAAD,SAAI,IAAII,KAAa,OAARrB,QAAQ,IAARA,OAAQ,EAARA,EAAUsB,WAAWC,oBAEpCL,EAAAA,EAAAA,KAACM,EAAAA,GAAc,CAAAP,UACZC,EAAAA,EAAAA,KAAA,OAAKO,wBAAyB,CAAEC,OAAgB,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAU2B,kBAErDT,EAAAA,EAAAA,KAACM,EAAAA,GAAc,CAAAP,UACZC,EAAAA,EAAAA,KAAA,OAAKO,wBAAyB,CAAEC,OAAgB,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,wBAErDV,EAAAA,EAAAA,KAACM,EAAAA,GAAc,CAAAP,UACbF,EAAAA,EAAAA,MAAA,OAAKc,UAAU,GAAEZ,SAAA,EACfC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACC,GAAE,6BAAA/C,OAAuC,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUgC,KAAMf,UACrDC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,OAEbf,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,CAAChC,aAAcA,UAGhCgB,EAAAA,EAAAA,KAACiB,EAAAA,EAAW,CACVC,WA/BmBC,KACvB5C,EAAiC,OAARO,QAAQ,IAARA,OAAQ,EAARA,EAAUgC,IAAI,EA+BnC/B,UAAWA,EACXC,aAAcA,EACdnB,GAAY,OAARiB,QAAQ,IAARA,OAAQ,EAARA,EAAUgC,IACd3B,cAAeA,MAEP,ECShB,EApD2BiC,KAAO,IAADC,EAAAC,EAC/B,MAAM,KAAEhD,EAAI,UAAEY,EAAS,QAAEE,IAAYZ,EAAAA,EAAAA,MAErC,IAAI+C,EAAU,KAgBd,OAfIrC,IACFqC,GAAUvB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAEVb,GAAaE,IAChBmC,GAAUvB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BAEVb,GAAcE,GAAkC,KAAnB,OAAJd,QAAI,IAAJA,GAAU,QAAN+C,EAAJ/C,EAAMA,YAAI,IAAA+C,OAAN,EAAJA,EAAYG,UACxCD,GAAUvB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uCAEVb,IAAcE,IAAe,OAAJd,QAAI,IAAJA,GAAU,QAANgD,EAAJhD,EAAMA,YAAI,IAAAgD,OAAN,EAAJA,EAAYE,QAAS,IACjDD,EAAc,OAAJjD,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKmD,KAAI,CAAC3C,EAAUD,KAClCmB,EAAAA,EAAAA,KAAC0B,EAAwB,CAAqB5C,SAAUA,EAAUD,MAAOA,GAAlC,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUgC,SAK3CjB,EAAAA,EAAAA,MAAC8B,EAAAA,GAAK,CAAA5B,SAAA,EACJC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAgB,CAACC,MAAO,oBAAqBhB,GAAG,8BACjDb,EAAAA,EAAAA,KAAC8B,EAAAA,GAAS,CAAA/B,UACRF,EAAAA,EAAAA,MAACkC,EAAAA,GAAM,CAACC,MAAM,SAASrB,UAAU,cAAcsB,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAApC,SAAA,EACtEC,EAAAA,EAAAA,KAACoC,EAAAA,EAAU,CAACC,MAAM,QAAOtC,UACvBF,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAACa,UAAU,aAAYZ,SAAA,EAC/BC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAMoC,MAAO,CAAEC,MAAO,WAAYxC,SAAC,aAG3DC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAMoC,MAAO,CAAEC,MAAO,SAAUxC,SAAC,iBAGzDC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKH,SAAC,iBAC9BC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKH,SAAC,wBAC9BC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CACfC,MAAM,MACNoC,MAAO,CACLC,MAAO,QACPC,SAAU,SACVzC,SACH,kBAKLC,EAAAA,EAAAA,KAACyC,EAAAA,GAAU,CAAA1C,SAAEwB,WAGX,C","sources":["redux/deliveryInfo/deliveryInfoApi.js","views/deliveryInformation/DeleveryInfoTableRowData.jsx","views/deliveryInformation/ManageDeliveryInfo.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const deliverInfoApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllDeliverInfo\", 'singleInfo'],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllDeliverInfo: builder.query({\n      query: () => ({\n        url: `/deliveryInfo`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllDeliverInfo\"],\n    }),\n    // get blog offer discount for new user\n    getSingleDeliveryInfo: builder.query({\n      query: (id) => ({\n        url: `/deliveryInfo/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"singleInfo\"],\n    }),\n    // get blog offer discount for new user\n    addNewDeliveryInfo: builder.mutation({\n      query: (blog) => ({\n        url: `/deliveryInfo`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AllDeliverInfo\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleDeliveryInfo: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/deliveryInfo/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllDeliverInfo\", \"singleInfo\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleDeliveryInfo: builder.mutation({\n      query: (id) => ({\n        url: `/deliveryInfo/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllDeliverInfo\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllDeliverInfoQuery,\n  useGetSingleDeliveryInfoQuery,\n  useAddNewDeliveryInfoMutation,\n  useUpdateSingleDeliveryInfoMutation,\n  useDeleteSingleDeliveryInfoMutation,\n} = deliverInfoApi;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleDeliveryInfoMutation } from \"src/redux/deliveryInfo/deliveryInfoApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst DeliveryInfoTableRowData = ({ index, delivery }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleDeliveryInfo,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleDeliveryInfoMutation();\n\n  // delete blog\n  const handleDeleteBlog = () => {\n    deleteSingleDeliveryInfo(delivery?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{new Date(delivery?.createdAt).toDateString()}</p>\n      </CTableHeaderCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: delivery?.description }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: delivery?.banglaDescription }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/pages/delivery-info/edit/${delivery?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteBlog}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={delivery?._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default DeliveryInfoTableRowData;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllDeliverInfoQuery } from \"src/redux/deliveryInfo/deliveryInfoApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport DeliveryInfoTableRowData from \"./DeleveryInfoTableRowData\";\n\nconst ManageDeliveryInfo = () => {\n  const { data, isLoading, isError } = useGetAllDeliverInfoQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && data?.data?.length === 0) {\n    content = <p>There is no Delivery Information</p>;\n  }\n  if (!isLoading && !isError && data?.data?.length > 0) {\n    content = data?.data.map((delivery, index) => (\n      <DeliveryInfoTableRowData key={delivery?._id} delivery={delivery} index={index} />\n    ));\n  }\n\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Delivery Info\"} to=\"/pages/delivery-info/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ width: \"10rem\" }}>\n                Added Dated\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Bangla description</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageDeliveryInfo;\n"],"names":["deliverInfoApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllDeliverInfo","query","url","method","providesTags","getSingleDeliveryInfo","id","concat","addNewDeliveryInfo","mutation","blog","body","invalidatesTags","updateSingleDeliveryInfo","_ref","data","deleteSingleDeliveryInfo","useGetAllDeliverInfoQuery","useGetSingleDeliveryInfoQuery","useAddNewDeliveryInfoMutation","useUpdateSingleDeliveryInfoMutation","useDeleteSingleDeliveryInfoMutation","index","delivery","showModal","setShowModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","children","_jsx","CTableHeaderCell","scope","Date","createdAt","toDateString","CTableDataCell","dangerouslySetInnerHTML","__html","description","banglaDescription","className","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteBlog","ManageDeliveryInfo","_data$data","_data$data2","content","length","map","DeliveryInfoTableRowData","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","style","width","minWidth","CTableBody"],"sourceRoot":""}