{"version":3,"file":"static/js/7509.46e874b2.chunk.js","mappings":"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","sources":["redux/subCategory/subCategoryApi.js","views/subcategories/manage-subcategories/ManageSubcategories.jsx","views/subcategories/manage-subcategories/SubcategoryTableRow.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const subCategoryApi = apiSlice.injectEndpoints({\n  tagTypes: [\"SubCategory\", \"SingleSubCategory\"],\n  endpoints: (builder) => ({\n    // get all subcategory\n    getAllSubCategory: builder.query({\n      query: () => ({\n        url: `/subcategory`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n    // get all subcategory\n    getFilterSubCategory: builder.query({\n      query: (subCategory) => ({\n        url: `/subcategory/filter?parent=${subCategory}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n\n    // get single subcategory by id\n    getSingleSubCategory: builder.query({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"SubCategory\"],\n      providesTags: [\"SingleSubCategory\"],\n    }),\n\n    // add new subcategory\n    addSubCategory: builder.mutation({\n      query: (data) => ({\n        url: `/subcategory`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n\n    // update subcategory by id\n    updateSubCategory: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/subcategory/${id}`,\n        method: \"PUT\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\", \"SingleSubCategory\"],\n    }),\n\n    // delete subcategory by id\n    deleteSubCategory: builder.mutation({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllSubCategoryQuery,\n  useGetFilterSubCategoryQuery,\n  useDeleteSubCategoryMutation,\n  useAddSubCategoryMutation,\n  useUpdateSubCategoryMutation,\n  useGetSingleSubCategoryQuery,\n} = subCategoryApi;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllSubCategoryQuery } from \"src/redux/subCategory/subCategoryApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport SubcategoryTableRow from \"./SubcategoryTableRow\";\n\nconst ManageSubcategories = () => {\n  const {\n    data: subcategories,\n    isLoading: getSubCategoryLoading,\n    isError: getSubCategoryError,\n  } = useGetAllSubCategoryQuery();\n\n  let content = null;\n  if (getSubCategoryLoading) {\n    content = <p className=\"px-2 my-2 fs-5 text-primary\">Loading..</p>;\n  }\n  if (!getSubCategoryLoading && getSubCategoryError) {\n    content = <p className=\"text-danger\">There was an error</p>;\n  }\n  if (!getSubCategoryLoading && !getSubCategoryError && subcategories?.result?.length === 0) {\n    content = <p>There is no category</p>;\n  }\n  //\n  if (!getSubCategoryLoading && !getSubCategoryError && subcategories?.result?.length > 0) {\n    content = subcategories?.result?.map((subcategory, index) => (\n      <SubcategoryTableRow key={subcategory?._id} subcategory={subcategory} index={index} />\n    ));\n  }\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CardHeaderButton title={\"All Subcategories\"} to={\"/subcategory/add\"} />\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">Here is the list of all subcategories.</p>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-start\">\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"60px\" }}>\n                      Sl. No.\n                      {/* <Form.Check inline type=\"checkbox\" /> */}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Sub Category</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Parent Category</CTableHeaderCell>\n                    <CTableHeaderCell\n                      scope=\"col\"\n                      style={{\n                        width: \"100px\",\n                        minWidth: \"100px\",\n                      }}\n                    >\n                      Actions\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{content}</CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageSubcategories;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { cilPencil, cilPlus, cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSubCategoryMutation } from \"src/redux/subCategory/subCategoryApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst SubcategoryTableRow = ({ subcategory, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteSubCategory, { isLoading, isSuccess, isError }] = useDeleteSubCategoryMutation();\n  const handleDeleteSubcategory = (id) => {\n    deleteSubCategory(id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isError && toast.error(\"Delete failed\", { id: \"dError\" });\n    isSuccess && toast.success(\"Delete successfully\", { id: \"dSuccess\" });\n  }, [isError, isSuccess]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableDataCell>{subcategory?.title}</CTableDataCell>\n      <CTableDataCell>{subcategory?.parent?.title}</CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/subcategory/edit/${subcategory?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteSubcategory}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={subcategory._id}\n        deleteLoading={isLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default SubcategoryTableRow;\n"],"names":["subCategoryApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllSubCategory","query","url","method","providesTags","getFilterSubCategory","subCategory","concat","getSingleSubCategory","id","invalidatesTags","addSubCategory","mutation","data","body","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","updateSubCategory","_ref","deleteSubCategory","useGetAllSubCategoryQuery","useGetFilterSubCategoryQuery","useDeleteSubCategoryMutation","useAddSubCategoryMutation","useUpdateSubCategoryMutation","useGetSingleSubCategoryQuery","ManageSubcategories","_subcategories$result","_subcategories$result2","subcategories","isLoading","getSubCategoryLoading","isError","getSubCategoryError","content","_subcategories$result3","_jsx","className","children","result","length","map","subcategory","index","SubcategoryTableRow","_id","_Fragment","CRow","CCol","xs","_jsxs","CCard","CardHeaderButton","title","to","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","scope","style","width","minWidth","CTableBody","_subcategory$parent","showModal","setShowModal","useState","isSuccess","useEffect","toast","dismiss","error","success","CTableDataCell","parent","Link","EditButton","DeleteButton","DeleteModal","deleteThis","deleteLoading"],"sourceRoot":""}