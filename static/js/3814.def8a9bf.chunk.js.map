{"version":3,"file":"static/js/3814.def8a9bf.chunk.js","mappings":"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","sources":["redux/return/returnApi.js","utils/getReactQuilModel.js","views/return/AddReturn.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const returnApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllReturns\", \"SingleReturn\"],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllReturns: builder.query({\n      query: () => ({\n        url: `/return`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllReturns\"],\n    }),\n    // get blog offer discount for new user\n    getSingleReturn: builder.query({\n      query: (id) => ({\n        url: `/return/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleReturn\"],\n    }),\n    // get blog offer discount for new user\n    addNewReturn: builder.mutation({\n      query: (blog) => ({\n        url: `/return`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AllReturns\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleReturn: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/return/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllReturns\", \"SingleReturn\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleReturn: builder.mutation({\n      query: (id) => ({\n        url: `/return/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllReturns\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllReturnsQuery,\n  useGetSingleReturnQuery,\n  useAddNewReturnMutation,\n  useUpdateSingleReturnMutation,\n  useDeleteSingleReturnMutation,\n} = returnApi;\n","export const getModels = () => {\n  return {\n    toolbar: [\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n      [\"blockquote\", \"code-block\"],\n\n      // [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n      [{ direction: \"rtl\" }], // text direction\n\n      // [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n      [{ font: [] }],\n      [{ align: [] }],\n      [\"link\", \"image\", \"video\"],\n\n      [\"clean\"], // remove formatting button\n    ],\n  };\n};\n","/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CForm } from \"@coreui/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ReactQuill from \"react-quill\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  useAddNewReturnMutation,\n  useGetSingleReturnQuery,\n  useUpdateSingleReturnMutation,\n} from \"src/redux/return/returnApi\";\n\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\nimport Loading from \"src/ui/Loading\";\nimport { getModels } from \"src/utils/getReactQuilModel\";\n\nconst AddReturn = () => {\n  const modules = getModels();\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const { handleSubmit } = useForm();\n  const [blogDescription, setBlogDescription] = useState();\n  const [banglaDescription, setBanglaDescription] = useState();\n\n  const navigate = useNavigate();\n\n  const {\n    data: data,\n    isLoading: getLoading,\n    isError: termError,\n    error: termErrorMsg,\n  } = useGetSingleReturnQuery(id, { skip: haveId });\n\n  const [\n    addNewReturn,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddNewReturnMutation();\n\n  const [\n    updateSingleReturn,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleReturnMutation();\n\n  // update or add new term conditions\n  const onSubmit = () => {\n    const data  = {};\n    if(blogDescription)   data.description = blogDescription;\n    if(banglaDescription)   data.banglaDescription = banglaDescription;\n    \n    if (id) {\n      updateSingleReturn({ id, data });\n    } else {\n      addNewReturn(data);\n    }\n  };\n\n  //default data set\n  useMemo(() => {\n    if (id) {\n      setBlogDescription(data?.data?.description);\n      setBanglaDescription(data?.data?.banglaDescription);\n    }\n  }, [id, data?.data]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n\n  useEffect(() => {\n    addError && toast.error(addError?.data?.message);\n    updateError && toast.error(updateError?.data?.message);\n  }, [addError, updateError]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCard>\n      <HeaderBackButton title={id ? \"Update return policy\" : \"Add return policy\"} />\n\n        {getLoading ? (\n          <Loading />\n        ) : (\n          <CCardBody>\n            <CCol xs={12}>\n              <label className=\"w-100\">Return policy (English)</label>\n              <ReactQuill\n                className=\"mt-2\"\n                theme=\"snow\"\n                placeholder=\"Enter return policy\"\n                modules={modules}\n                value={blogDescription}\n                onChange={setBlogDescription}\n              />\n            </CCol>\n            <CCol className=\"mt-2\" xs={12}>\n              <label className=\"w-100\">Return policy (Bangla)</label>\n              <ReactQuill\n                className=\"mt-2\"\n                theme=\"snow\"\n                placeholder=\"Enter return policy\"\n                modules={modules}\n                value={banglaDescription}\n                onChange={setBanglaDescription}\n              />\n            </CCol>\n            <div className=\"text-end  \">\n              <CancelButton />\n              <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n                <CIcon icon={cilSave} className=\"me-2\" />\n                {updateLoading || addLoading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n              </CButton>\n            </div>\n          </CCardBody>\n        )}\n      </CCard>\n    </CForm>\n  );\n};\n\nexport default AddReturn;\n"],"names":["returnApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllReturns","query","url","method","providesTags","getSingleReturn","id","concat","addNewReturn","mutation","blog","body","invalidatesTags","updateSingleReturn","_ref","data","deleteSingleReturn","useGetAllReturnsQuery","useGetSingleReturnQuery","useAddNewReturnMutation","useUpdateSingleReturnMutation","useDeleteSingleReturnMutation","getModels","toolbar","list","script","indent","direction","header","color","background","font","align","AddReturn","modules","haveId","setHaveId","useState","useParams","handleSubmit","useForm","blogDescription","setBlogDescription","banglaDescription","setBanglaDescription","navigate","useNavigate","isLoading","getLoading","isError","termError","error","termErrorMsg","skip","addLoading","addError","isSuccess","addSuccess","addMsg","updateLoading","updateError","updateSuccess","updateMsg","useMemo","_data$data","_data$data2","description","useEffect","_addError$data","_updateError$data","toast","message","_jsx","CForm","onSubmit","children","_jsxs","CCard","HeaderBackButton","title","Loading","CCardBody","CCol","xs","className","ReactQuill","theme","placeholder","value","onChange","CancelButton","CButton","type","CIcon","icon","cilSave"],"sourceRoot":""}