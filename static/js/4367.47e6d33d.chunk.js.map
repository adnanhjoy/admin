{"version":3,"file":"static/js/4367.47e6d33d.chunk.js","mappings":"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","sources":["components/rules/AddRulesForm.js","views/admins/rules/add-rules/AddRules.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/prop-types */\n\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CFormTextarea, CRow } from \"@coreui/react\";\nimport PropTypes from \"prop-types\";\nimport { memo } from \"react\";\nimport { useEffect } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport CancelButton from \"src/ui/button/CancelButton\";\n\nconst AddRulesForm = ({ data, onSubmit, updateLoading, addLoading, error }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  useEffect(() => {\n    if (data) {\n      for (const key in data) {\n        setValue(key, data[key]);\n      }\n    }\n  }, [data, setValue]);\n\n  return (\n    <CForm encType=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\n      <CRow className=\"g-3\">\n        <CCol xs={12}>\n          <CFormInput\n            type=\"text\"\n            id=\"titleInputField\"\n            label=\"Title\"\n            placeholder=\"Enter Title\"\n            aria-describedby=\"titleInputField\"\n            {...register(\"title\", {\n              required: { value: true, message: \"Title is required\" },\n            })}\n          />\n          {errors?.title?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.title.message}</p>\n          )}\n        </CCol>\n        <CCol xs={12}>\n          <CFormTextarea\n            id=\"rulesDescriptionTextareaField\"\n            label=\"Description\"\n            placeholder=\"Enter Description\"\n            aria-describedby=\"rulesDescriptionTextareaField\"\n            rows=\"3\"\n            {...register(\"description\", {\n              required: {\n                value: false,\n                message: \"Rules description is required\",\n              },\n            })}\n          ></CFormTextarea>\n          {errors?.description?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.description.message}</p>\n          )}\n        </CCol>\n\n        <CCol xs={12}>\n          <CFormInput\n            type=\"file\"\n            id=\"fileInputField\"\n            name=\"image\"\n            label=\"Rules Image\"\n            placeholder=\"Enter image\"\n            aria-describedby=\"imageInputField\"\n            {...register(\"image\", {\n              required: { value: true, message: \"Image is required\" },\n            })}\n          />\n\n          {errors?.title?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.title.message}</p>\n          )}\n          {data?.image && (\n            <CCol className=\"mt-2\" md={3} xs={1}>\n              <Image src={data?.image} alt={`Rules Img`} fluid />\n            </CCol>\n          )}\n        </CCol>\n      </CRow>\n      {error && <p className=\"text-danger mt-2 text-end\">{error?.data?.message}</p>}\n      <div className=\"text-end\">\n        <CancelButton />\n        <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n          {updateLoading || addLoading ? (\n            \"Loading\"\n          ) : (\n            <>\n              <CIcon icon={cilSave} className=\"me-2\" />\n              {data ? \"Update\" : \"Save\"}\n            </>\n          )}\n        </CButton>\n      </div>\n    </CForm>\n  );\n};\n\nexport default memo(AddRulesForm);\n\nAddRulesForm.propTypes = {\n  data: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable prettier/prettier */\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport AddRulesForm from \"src/components/rules/AddRulesForm\";\n\nimport {\n  useAddRulesMutation,\n  useGetSingleRulesQuery,\n  useUpdateRulesMutation,\n} from \"src/redux/rules/rulesApi\";\nimport Loading from \"src/ui/Loading\";\n\nconst AddRules = () => {\n  const { id } = useParams();\n  const [haveId, setHveId] = useState(true);\n  const navigate = useNavigate();\n\n  // get hooks query\n  const {\n    data: rule,\n    isLoading: getLoading,\n    isError: getError,\n  } = useGetSingleRulesQuery(id, { skip: haveId });\n\n  // add mutation\n  const [addRule, { isLoading: addLoading, isSuccess: addSuccess, error: addError }] =\n    useAddRulesMutation();\n  // update mutation\n  const [\n    updateRules,\n    { isLoading: updateLoading, isSuccess: updateSuccess, isError: updateError },\n  ] = useUpdateRulesMutation();\n\n  useEffect(() => {\n    if (id) {\n      setHveId(false);\n    }\n  }, [id]);\n\n  const handleCreateRule = (data) => {\n    const formData = new FormData();\n    const image = data.image[0];\n    formData.append(\"image\", image);\n    formData.append(\"title\", data.title);\n    formData.append(\"description\", data.description);\n    // update\n    if (id) {\n      updateRules({ id, data: formData });\n    } else {\n      // create\n      addRule(formData);\n    }\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    addSuccess && toast.success(\"Added successfully\", { id: \"aSuccess\" });\n    updateSuccess && toast.success(\"Updated successfully\", { id: \"uSuccess\" });\n\n    updateError &&\n      toast.error(\"Update failed\", {\n        id: \"uError\",\n      });\n    addError &&\n      toast.error(\"Added failed\", {\n        id: \"aError\",\n      });\n  }, [updateError, updateSuccess, addSuccess, addError]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>{id ? \"Edit\" : \"Add\"} Rules</strong>\n            </CCardHeader>\n\n            <CCardBody>\n              {!getLoading ? (\n                <AddRulesForm\n                  addLoading={addLoading}\n                  updateLoading={updateLoading}\n                  data={rule?.result}\n                  onSubmit={handleCreateRule}\n                  error={addError}\n                />\n              ) : (\n                <Loading />\n              )}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default AddRules;\n"],"names":["AddRulesForm","_ref","_errors$title","_errors$description","_errors$title2","_error$data","data","onSubmit","updateLoading","addLoading","error","register","handleSubmit","setValue","formState","errors","useForm","useEffect","key","_jsxs","CForm","encType","children","CRow","className","CCol","xs","_jsx","CFormInput","type","id","label","placeholder","required","value","message","title","CFormTextarea","rows","description","name","image","md","Image","src","alt","fluid","CancelButton","CButton","color","_Fragment","CIcon","icon","cilSave","memo","AddRules","useParams","haveId","setHveId","useState","navigate","useNavigate","rule","isLoading","getLoading","isError","getError","useGetSingleRulesQuery","skip","addRule","isSuccess","addSuccess","addError","useAddRulesMutation","updateRules","updateSuccess","updateError","useUpdateRulesMutation","toast","dismiss","success","CCard","CCardHeader","CCardBody","Loading","result","formData","FormData","append"],"sourceRoot":""}