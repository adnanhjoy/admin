{"version":3,"file":"static/js/474.8c5ee923.chunk.js","mappings":"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","sources":["redux/order/orderApi.js","utils/getReactQuilModel.js","views/orders/manage-orders/AddressDetails.jsx","views/orders/manage-orders/OrderDetails.jsx","views/orders/manage-orders/OrderHistory.jsx","views/orders/manage-orders/CompanyInfo.jsx","views/orders/manage-orders/PrintMethod.jsx","redux/seller/sellerApi.js","views/orders/manage-orders/InvoiceQrCode.jsx","views/orders/manage-orders/ViewOrderDetails.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const orderApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\"],\n  endpoints: (builder) => ({\n    //get all orders\n    getAllOrders: builder.query({\n      query: (query) => ({\n        url: `/order${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllOrder\"],\n    }),\n\n    //get all orders\n    getAllOrdersByFilter: builder.query({\n      query: (query) => ({\n        url: `/order/filterOrder?${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllFilterOrder\"],\n    }),\n\n    //get recent orders\n    getRecentOrder: builder.query({\n      query: () => ({\n        url: `/order/recentOrder`,\n        method: \"GET\",\n      }),\n      providesTags: [\"RecentOrder\"],\n    }),\n\n    //get all sale by year\n    getTotalSaleByYear: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all orders by year\n    getTotalOrdersByYear: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by month\n    getTotalSaleByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get orders by day\n    getTotalOrderByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by day\n    getTotalSaleByDay: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all order by day\n    getTotalOrderByDay: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSales: builder.query({\n      query: () => ({\n        url: `/order/totalSales`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSalesByDate: builder.mutation({\n      query: ({ data }) => ({\n        url: `/order/totalSales/byDate`,\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n\n    //get all sale by day\n    getTotalOrders: builder.query({\n      query: () => ({\n        url: `/order/totalOrders`,\n        method: \"GET\",\n      }),\n    }),\n\n    // get single order by id\n    getSingleOrderById: builder.query({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"GET\",\n      }),\n      // invalidatesTags: [\"AllOrder\"],\n      providesTags: [\"SingleOrder\"],\n    }),\n\n    // update order by id\n    updateSingleOrderById: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/order/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\", \"Products\"],\n    }),\n\n    // delete order by id\n    deleteOrderById: builder.mutation({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n\n\n    // delete order by id\n    updatePaymentOrder: builder.mutation({\n      query: ({ orderId, productId, data }) => ({\n        url: `/order/${orderId}/products/${productId}/transaction`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllOrdersQuery,\n  useGetAllOrdersByFilterQuery,\n  useGetRecentOrderQuery,\n  useDeleteOrderByIdMutation,\n  useUpdateSingleOrderByIdMutation,\n  useGetSingleOrderByIdQuery,\n  useGetTotalSaleByYearQuery,\n  useGetTotalSaleByMonthQuery,\n  useGetTotalOrderByMonthQuery,\n  useGetTotalSaleByDayQuery,\n  useGetTotalOrderByDayQuery,\n  useGetTotalSalesQuery,\n  useGetTotalSalesByDateMutation,\n  useGetTotalOrdersQuery,\n  useGetTotalOrdersByYearQuery,\n  useUpdatePaymentOrderMutation\n} = orderApi;\n","export const getModels = () => {\n  return {\n    toolbar: [\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n      [\"blockquote\", \"code-block\"],\n\n      // [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n      [{ direction: \"rtl\" }], // text direction\n\n      // [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n      [{ font: [] }],\n      [{ align: [] }],\n      [\"link\", \"image\", \"video\"],\n\n      [\"clean\"], // remove formatting button\n    ],\n  };\n};\n","import {\n  cilCalendar,\n  cilCarAlt,\n  cilCart,\n  cilCheck,\n  cilCreditCard,\n  cilEnvelopeOpen,\n  cilGroup,\n  cilItalic,\n  cilMediaStop,\n  cilMoney,\n  cilPhone,\n  cilUser,\n} from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n} from \"@coreui/react\";\nimport { BsShop } from \"react-icons/bs\";\n\nconst AddressDetails = ({ orderData }) => {\n  const { shippingName, district, city, postCode, shippingEmail, shippingPhone, createdAt } =\n    orderData?.address || {};\n\n\n  return (\n    <CRow className=\"p-0 m-0\">\n      {/* order details */}\n      <CCol\n        className=\"p-0 mt-1\"\n        xs={orderData?.transactionId ? 4 : 6}\n        md={orderData?.transactionId ? 4 : 6}\n      >\n        <CCard className=\"\">\n          <CCardHeader\n            className=\"d-flex align-items-center justify-content-between\"\n            style={{ background: \"#1489bf\", color: \"white\", marginLeft: \"1rem\" }}\n          >\n            <strong className=\"d-flex align-items-center gap-2\">\n              {\" \"}\n              <CIcon icon={cilCart} className=\"nav-icon \" />\n              Order Details\n            </strong>\n          </CCardHeader>\n          <CCardBody className=\"pb-1 px-0\">\n            <CListGroup flush>\n              <div className=\"px-4 pb-1 d-flex align-items-center \">\n                <div className=\"  d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                  <BsShop\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"1.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n                Marcella\n              </div>\n              <div className=\"px-4  d-flex align-items-center pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                  <CIcon\n                    icon={cilCalendar}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n\n                {new Date(createdAt).toLocaleDateString()}\n              </div>\n              <div className=\"px-4 d-flex align-items-center pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                  <CIcon\n                    icon={cilCreditCard}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n\n                {orderData?.paymentType === \"COD\" ? \"Cash on Delivery\" : \"SSLCOMMERZ\"}\n              </div>\n              <div className=\"px-4 d-flex align-items-center  pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                  <CIcon\n                    icon={cilCarAlt}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n                {district}\n              </div>\n            </CListGroup>\n          </CCardBody>\n        </CCard>\n      </CCol>\n\n      {/* customer details */}\n      <CCol\n        className=\"p-0 mt-1\"\n        xs={orderData?.transactionId ? 4 : 6}\n        md={orderData?.transactionId ? 4 : 6}\n      >\n        <CCard className=\"\">\n          <CCardHeader\n            className=\"d-flex align-items-center justify-content-between\"\n            style={{ background: \"#1489bf\", color: \"white\", marginRight: \"1rem\" }}\n          >\n            <strong className=\"d-flex align-items-center gap-2\">\n              {\" \"}\n              <CIcon icon={cilUser} className=\"nav-icon\" />\n              Customer Details\n            </strong>\n          </CCardHeader>\n          <CCardBody className=\"pb-1 px-0 \">\n            <CListGroup flush>\n              <div className=\"px-4 d-flex align-items-center pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                  <CIcon\n                    icon={cilUser}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n                {shippingName}\n              </div>\n              <div className=\"px-4 d-flex align-items-center pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent icon_parent\">\n                  <CIcon\n                    icon={cilGroup}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n                {city}, {postCode}\n              </div>\n              <div className=\"px-4 d-flex align-items-center pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent icon_parent\">\n                  <CIcon\n                    icon={cilEnvelopeOpen}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n\n                {shippingEmail || \"No\"}\n              </div>\n              <div className=\"px-4 d-flex align-items-center pb-1\">\n                <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                  <CIcon\n                    icon={cilPhone}\n                    className=\"mx-1 text-white\"\n                    style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                  />\n                </div>\n                {shippingPhone}\n              </div>\n            </CListGroup>\n          </CCardBody>\n        </CCard>\n      </CCol>\n\n      {/* ssl details */}\n      {orderData?.transactionId && (\n        <CCol className=\"p-0 mt-1\" xs={12} md={4}>\n          <CCard className=\"h-100\">\n            <CCardHeader\n              className=\"d-flex align-items-center justify-content-between\"\n              style={{ background: \"#1489bf\", color: \"white\", marginRight: \"1rem\" }}\n            >\n              <strong className=\"d-flex align-items-center gap-2\">\n                {\" \"}\n                <CIcon icon={cilItalic} className=\"nav-icon\" />\n                Payment Information\n              </strong>\n            </CCardHeader>\n            <CCardBody className=\"pb-1 px-0\">\n              <CListGroup flush>\n                <div className=\"px-4 d-flex align-items-center pb-1\">\n                  <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                    <CIcon\n                      icon={cilMediaStop}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  TnxId: <span className=\"text-primary ms-1\">{orderData?.transactionId}</span>\n                </div>\n                <div className=\"px-4 d-flex align-items-center pb-1\">\n                  <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                    <CIcon\n                      icon={cilMoney}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  PayBy: <span className=\"text-primary ms-1\">{orderData?.paymentMethod}</span>\n                </div>\n                <div className=\"px-4 d-flex align-items-center pb-1\">\n                  <div className=\" d-flex justify-content-center align-items-center  me-1 rounded-small icon_parent\">\n                    <CIcon\n                      icon={cilCheck}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  Status: <span className=\"bg-success px-1 text-white ms-1\">Paid</span>\n                </div>\n              </CListGroup>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      )}\n    </CRow>\n  );\n};\n\nexport default AddressDetails;\n","import {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\n\nconst OrderDetails = ({ orderData }) => {\n  const { shippingName, shippingPhone, district, address, city, country, postCode } =\n    orderData?.address || {};\n\n  let numberWithCommas = (x) => {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return (\n    <CCol className=\"p-0 mt-1\" xs={12} md={12}>\n      <CCard className=\"h-100\">\n        <CCardHeader className=\"ms-2 fw-bold\">Order ID ({orderData?.orderId})</CCardHeader>\n        <CCardBody className=\"px-3 pt-0\">\n          <CTable bordered>\n            <CTableHead>\n              <CTableRow style={{ background: \"#1489bf\", color: \"white\", letterSpacing: \"0.1rem\" }}>\n                <CTableHeaderCell>\n                  <strong>Payment Address</strong>\n                </CTableHeaderCell>\n                <CTableHeaderCell>\n                  <strong>Shipping Address</strong>\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody className=\"fw-bold\">\n              <CTableRow>\n                <CTableDataCell>\n                  <div>{shippingName}</div>\n                  <div>{address}</div>\n                  <div>\n                    {city}, {postCode}\n                  </div>\n\n                  <div>\n                    {district}, {country}, {shippingPhone}\n                  </div>\n                </CTableDataCell>\n                <CTableDataCell>\n                  <div>{shippingName}</div>\n                  <div>{address}</div>\n                  <div>\n                    {city}, {postCode}\n                  </div>\n\n                  <div>\n                    {district}, {country}, {shippingPhone}\n                  </div>\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n\n          <CTable bordered>\n            <CTableHead>\n              <CTableRow style={{ background: \"#1489bf\", color: \"white\" }}>\n                <CTableHeaderCell style={{ width: \"40px\" }}>SL</CTableHeaderCell>\n                <CTableHeaderCell>Product</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\" style={{ width: \"80px\" }}>\n                  Size\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\" style={{ width: \"80px\" }}>\n                  Color\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\" style={{ width: \"20px\" }}>\n                  Qty\n                </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Unit Price</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Total</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody className=\"fw-bold\">\n              {orderData?.products?.map((item, index) => (\n                <CTableRow key={item?.product?._id}>\n                  <CTableDataCell>{index + 1}</CTableDataCell>\n                  <CTableDataCell>\n                    <Link\n                      className=\"text-decoration-none text-black\"\n                      to={`/product?search=${item?.product?.name}`}\n                    >\n                      {item?.product?.name}\n                    </Link>\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-center\">{item?.size || \"No\"}</CTableDataCell>\n                  <CTableDataCell className=\"text-center\">{item?.color || \"No\"}</CTableDataCell>\n                  <CTableDataCell className=\"text-center\">{item?.quantity}</CTableDataCell>\n                  <CTableDataCell className=\"text-end\">\n                    ৳{\" \"}\n                    {item?.product?.price > item?.offerPrice ? (\n                      <>\n                        <del>{numberWithCommas(item?.product?.price)}</del>\n                        <span className=\"ms-2\">{numberWithCommas(item?.offerPrice)}</span>\n                      </>\n                    ) : (\n                      numberWithCommas(item?.product?.price)\n                    )}\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-end\" style={{ paddingRight: \"1rem\" }}>\n                    ৳{numberWithCommas(item?.offerPrice * item?.quantity)}\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n              <CTableRow>\n                <CTableHeaderCell colSpan={\"6\"} className=\"text-end\">\n                  Sub-Total{\" \"}\n                  {orderData?.couponDiscount && (\n                    <span>{`(-${orderData?.couponDiscount?.discount}${\n                      orderData?.couponDiscount?.discountType === \"percentage\" ? \"%\" : \"৳\"\n                    } coupon)`}</span>\n                  )}\n                </CTableHeaderCell>\n                <CTableDataCell className=\"text-end\" style={{ paddingRight: \"1rem\" }}>\n                  ৳ {numberWithCommas(orderData?.totalAmount - orderData?.shippingCharge)}\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell colSpan={\"6\"} className=\"text-end\">\n                  Shipping: ({district})\n                </CTableHeaderCell>\n                <CTableDataCell className=\"text-end\" style={{ paddingRight: \"1rem\" }}>\n                  ৳ {numberWithCommas(orderData?.shippingCharge)}\n                </CTableDataCell>\n              </CTableRow>\n              <CTableRow>\n                <CTableHeaderCell style={{ minWidth: \"200px\" }} colSpan={\"6\"} className=\"text-end\">\n                  Total\n                </CTableHeaderCell>\n                <CTableDataCell className=\"text-end\" style={{ paddingRight: \"1rem\" }}>\n                  {orderData?.transactionId && (\n                    <span className=\"bg-success text-white px-1 me-1\">Paid</span>\n                  )}\n                  ৳ {numberWithCommas(orderData?.totalAmount)}{\" \"}\n                </CTableDataCell>\n              </CTableRow>\n            </CTableBody>\n          </CTable>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  );\n};\n\nexport default OrderDetails;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-lone-blocks */\nimport { cilHistory, cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormSelect,\n  CFormTextarea,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { memo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ReactQuill from \"react-quill\";\nimport { toast } from \"react-toastify\";\nimport { useUpdateSingleOrderByIdMutation } from \"src/redux/order/orderApi\";\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport { getModels } from \"src/utils/getReactQuilModel\";\n\nconst orderStatusOptions = [\n  { value: \"pending\", label: \"Pending\" },\n  { value: \"processing\", label: \"Processing\" },\n  { value: \"shipped\", label: \"shipped\" },\n  { value: \"cancelled\", label: \"Cancelled\" },\n  { value: \"returned\", label: \"Returned\" },\n  { value: \"delivered\", label: \"Delivered\" },\n  { value: \"expired\", label: \"Expired\" },\n];\n\nconst OrderHistory = ({ orderData }) => {\n  const [selectedValue, setSelectedValue] = useState();\n  const modules = getModels();\n  const [emailBody, setEmailBody] = useState(\"\");\n\n  const [\n    updateSingleOrderById,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess },\n  ] = useUpdateSingleOrderByIdMutation();\n\n  useEffect(() => {\n    setSelectedValue(orderData?.status);\n  }, [orderData]);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const handleAddOrderHistory = (data) => {\n    // if data.notify true then call a function which are send a mail from backend\n    if (data.notify) {\n      if (emailBody.length <= 20) {\n        toast.warning(\"Comment box isn't empty or less than 20 character for mail send\");\n      } else {\n        const id = orderData._id;\n        const status = {\n          status: selectedValue,\n          html: emailBody,\n          name: orderData.user?.name,\n          to: orderData.user?.email,\n          notify: true,\n        };\n        updateSingleOrderById({ id, data: status });\n      }\n    } else {\n      const id = orderData._id;\n      const status = { status: selectedValue, notify: false };\n      updateSingleOrderById({ id, data: status });\n    }\n  };\n\n  useEffect(() => {\n    updateSuccess && toast.success(\"Order status updated successfully\");\n    updateError && toast.error(\"Order status updated failed\");\n  }, [updateSuccess, updateError]);\n  return (\n    <CRow className=\"my-4\">\n      <CCol className=\"p-0\" md={12}>\n        <CCard>\n          <CCardHeader>\n            <CIcon icon={cilHistory} className=\"nav-icon me-2\" />\n            <strong>Order History</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CTable bordered>\n              <CTableHead>\n                <CTableRow>\n                  <CTableHeaderCell>Date Added</CTableHeaderCell>\n                  {/* <CTableHeaderCell>Comment</CTableHeaderCell> */}\n                  <CTableHeaderCell>Status</CTableHeaderCell>\n                  <CTableHeaderCell>Customer Notified</CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                <CTableRow>\n                  <CTableDataCell>\n                    {new Date(orderData?.address?.createdAt).toLocaleDateString()}\n                  </CTableDataCell>\n                  {/* <CTableDataCell></CTableDataCell> */}\n                  <CTableDataCell>{orderData?.status}</CTableDataCell>\n                  <CTableDataCell>{orderData?.notify ? \"yes\" : \"No\"}</CTableDataCell>\n                </CTableRow>\n              </CTableBody>\n            </CTable>\n\n            <div className=\"mt-5\">\n              <h2 className=\"h6 pb-2 border-bottom\">\n                <strong>Add Order History</strong>\n              </h2>\n\n              <CForm onSubmit={handleSubmit(handleAddOrderHistory)}>\n                <CRow className=\"g-3\">\n                  <CCol md={12}>\n                    <CFormSelect\n                      label=\"Order Status\"\n                      style={{ backgroundColor: \"#f9f9f9\" }}\n                      aria-label=\"Order Status\"\n                      className=\"form-control\"\n                      options={orderStatusOptions}\n                      value={selectedValue}\n                      onChange={(e) => setSelectedValue(e.target.value)}\n                      // {...register(\"orderStatus\", { required: true })}\n                    />\n                  </CCol>\n                  <CCol xs={12}>\n                    <label className=\"w-100\">Body</label>\n                    <ReactQuill\n                      className=\"mt-2\"\n                      theme=\"snow\"\n                      placeholder=\"Enter your text here...\"\n                      modules={modules}\n                      value={emailBody}\n                      onChange={setEmailBody}\n                    />\n                  </CCol>\n                  <CCol md={12}>\n                    <CFormCheck\n                      id=\"flexCheckChecked\"\n                      label=\"Notify Customer\"\n                      {...register(\"notify\")}\n                    />\n                  </CCol>\n                </CRow>\n\n                <div className=\"text-end\">\n                  <CancelButton />\n                  <CButton\n                    type=\"submit\"\n                    onSubmit={\"handleSaveUpdateOrder\"}\n                    color=\"success\"\n                    className=\"mt-3 text-white\"\n                  >\n                    <CIcon icon={cilSave} className=\"me-2\" />\n                    {updateLoading ? \"Loading...\" : \"Save\"}\n                  </CButton>\n                </div>\n              </CForm>\n            </div>\n          </CCardBody>\n        </CCard>{\" \"}\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default memo(OrderHistory);\n","import React from \"react\";\nimport logo from \"../../../assets/brand/logo.png\";\nimport { Col, Image, Row } from \"react-bootstrap\";\nimport { CCard, CCardBody } from \"@coreui/react\";\n\nconst CompanyInfo = ({ orderData }) => {\n  return (\n    <CCard className=\"\">\n      {/* <h1 style={{ fontWeight: \"bold\", color: \"#0B0B0B\" }}>Marcella</h1> */}\n      <CCardBody className=\"p-o\" style={{ paddingBottom: \"0px\" }}>\n        <Row className=\"pb-0\">\n          <div className=\"d-flex justify-content-between\">\n            <Image src={logo} width={200} />\n            <h1 style={{ fontWeight: \"900\", color: \"#1489bf\", fontSize: \"4rem\" }}>Invoice</h1>\n          </div>\n          <Col xs={8} className=\"mt-2\">\n            <p className=\"fw-bold \">\n              Road No: 04, Baridhara DOHS, Dhaka. <br />\n              Dhaka-1206, Bangladesh. <br />\n              Phone: +88 01894-961361\n            </p>\n          </Col>\n          <Col xs={4} className=\"mt-2 text-end\">\n            <p className=\"mb-0\">\n              <span className=\"fw-bold\"> Invoice number :</span> {orderData?.orderId}\n            </p>\n\n            {/* <p className=\"mb-0\">\n              <span className=\"fw-bold\"> Customer number:</span> marcella-521312\n            </p>\n            <p className=\"mb-0\">\n              <span className=\"fw-bold\"> Invoice number:</span> marcella-521312\n            </p> */}\n            <p className=\"mb-0\">\n              <span className=\"fw-bold\"> Invoice date :</span> {new Date().toLocaleDateString()}\n            </p>\n          </Col>\n        </Row>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default CompanyInfo;\n","import { CFormSelect, CTableDataCell } from '@coreui/react';\nimport React from 'react';\n\nconst PrintMethod = ({ selectedValue, setSelectedValue }) => {\n    \n    const reportOptions = [\n        { value: \"\", label: \"Select One\" },\n        { value: \"qr\", label: \"Print QR Code\" },\n        { value: \"invoice\", label: \"Print Invoice\" },\n    ];\n\n\n    const handleSelectChange = (e) => {\n        const value = e.target.value;\n        setSelectedValue(value);\n        console.log(\"Selected Value:\", value);\n    };\n\n    return (\n        <div>\n            <CTableDataCell>\n                <CFormSelect\n                    aria-label=\"Order Status\"\n                    className={`form-control  `}\n                    style={{ backgroundColor: \"#f9f9f9\" }}\n                    options={reportOptions}\n                    value={selectedValue}\n                    onChange={handleSelectChange}\n                />\n            </CTableDataCell>\n        </div>\n    );\n};\n\nexport default PrintMethod;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const sellerApi = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        //get single seller by id\n        getSingleSellerById: builder.query({\n            query: (id) => ({\n                url: `/auth/client-seller/${id}`,\n                method: \"POST\",\n            }),\n        }),\n\n    }),\n});\n\nexport const {\n    useGetSingleSellerByIdQuery\n} = sellerApi;\n","import JsBarcode from 'jsbarcode';\nimport QRCode from 'qrcode.react';\nimport React, { useEffect, useRef } from 'react';\nimport { useGetSingleSellerByIdQuery } from 'src/redux/seller/sellerApi';\nimport './OrderDetails.scss'\n\nconst InvoiceQrCode = ({ orderData, componentRef }) => {\n    const { address, createdAt, orderId } = orderData || {};\n    const barcodeRef = useRef()\n\n    const sellerId = orderData?.products?.map(item => item?.product?.sellerId)\n    const { data: sellerAddress } = useGetSingleSellerByIdQuery(...sellerId)\n\n\n    useEffect(() => {\n        if (barcodeRef.current) {\n            JsBarcode(barcodeRef.current, orderId, {\n                format: 'CODE128',\n                displayValue: true,\n                fontSize: 12,\n                width: 3,\n                height: 120\n            });\n        }\n    }, [orderId]);\n\n\n    return (\n        <div ref={componentRef} className=\"container border border-black w-50 mt-10 bg-white\">\n            <div className=\"qr-header\">\n                <div className=\"\" style={{ borderRight: '1px solid #000' }}>\n                    <h1 className=\"uppercase text-primary text-3xl font-semibold text-center w-100\">Veendeshi</h1>\n                </div>\n                <div className=\"qr-header-text\" style={{ borderRight: '1px solid #000' }}>\n                    <p>Order Id</p>\n                    <p>{orderId}</p>\n                </div>\n                <div className='qr-header-text'>\n                    <p>Date</p>\n                    <p>{new Date(createdAt).toDateString()}</p>\n                </div>\n            </div>\n            <div className=\"row flex justify-center items-center border-top border-bottom border-black\">\n                <svg ref={barcodeRef}></svg>\n            </div>\n            <div className=\"qr-container\">\n                <div className=\"qr-code\">\n                    <QRCode value={sellerAddress ? sellerAddress?.data?.address : 'Baridhara DOHS, Dhaka. Dhaka-1206, Bangladesh.'} />\n                </div>\n                <div className=\"qr-add-cont\">\n                    <div className='qr-add'>\n                        <p>Recipient: {address?.shippingName}</p>\n                        <p>{address?.address}</p>\n                        <p>{address?.shippingPhone}</p>\n                    </div>\n                    {\n                        sellerAddress ?\n                            <div className='qr-add'>\n                                <p>Seller: {sellerAddress?.data?.name}</p>\n                                <p>{sellerAddress?.data?.address}</p>\n                            </div>\n                            :\n                            <div className='qr-add'>\n                                <p>Veendeshi</p>\n                                <p>Baridhara DOHS, Dhaka. Dhaka-1206, Bangladesh.</p>\n                                <p>Phone: +88 01894-961361</p>\n                            </div>\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InvoiceQrCode;","/* eslint-disable react/prop-types */\nimport { cilPrint } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CRow, CTooltip } from \"@coreui/react\";\nimport { useRef, useState } from \"react\";\nimport { Button, Image } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { useGetSingleOrderByIdQuery } from \"src/redux/order/orderApi\";\nimport AddressDetails from \"./AddressDetails\";\nimport OrderDetails from \"./OrderDetails\";\nimport \"./OrderDetails.scss\";\nimport OrderHistory from \"./OrderHistory\";\nimport CompanyInfo from \"./CompanyInfo\";\nimport Loading from \"src/ui/Loading\";\nimport back from \"../../../assets/brand/back.png\";\nimport PrintMethod from \"./PrintMethod\";\nimport InvoiceQrCode from \"./InvoiceQrCode\";\n\nconst ViewOrderDetails = () => {\n  const [selectedValue, setSelectedValue] = useState(\"\");\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { data: orderData, isLoading } = useGetSingleOrderByIdQuery(id);\n  const componentRef = useRef(null);\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n  });\n\n  return (\n    <CRow className=\"g-4\">\n      <div className=\"d-flex justify-content-end\">\n        <PrintMethod\n          selectedValue={selectedValue}\n          setSelectedValue={setSelectedValue}\n        />\n        <CTooltip content=\"Print Invoice\">\n          <CButton\n            color=\"primary\"\n            style={{ marginRight: \"2rem\" }}\n            className=\"ms-2 mb-1 \"\n            onClick={handlePrint}\n          >\n            Print\n            <CIcon className=\"ms-2\" icon={cilPrint} />\n          </CButton>\n        </CTooltip>\n        <CTooltip content=\"Back\">\n          <div\n            style={{ cursor: \"pointer\" }}\n            className=\"d-flex border py-1 px-2\"\n            onClick={() => navigate(-1)}\n          >\n            <Image src={back} style={{ width: \"30px\" }} />\n          </div>\n        </CTooltip>\n      </div>\n\n      {!isLoading ? (\n        <>\n          {\n            selectedValue === 'qr' ?\n              <InvoiceQrCode\n                orderData={orderData?.result}\n                componentRef={componentRef} /> :\n              <CRow ref={componentRef} className=\"g-4 px-2\">\n                <CompanyInfo orderData={orderData?.result} />\n                <AddressDetails orderData={orderData?.result} />\n                <OrderDetails orderData={orderData?.result} />\n              </CRow>\n\n          }\n        </>\n      ) : (\n        <Loading />\n      )}\n      <OrderHistory orderData={orderData?.result} />\n    </CRow>\n  );\n};\n\nexport default ViewOrderDetails;\n"],"names":["orderApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllOrders","query","url","concat","method","providesTags","getAllOrdersByFilter","getRecentOrder","getTotalSaleByYear","getTotalOrdersByYear","getTotalSaleByMonth","getTotalOrderByMonth","getTotalSaleByDay","getTotalOrderByDay","getTotalSales","getTotalSalesByDate","mutation","_ref","data","body","getTotalOrders","getSingleOrderById","id","updateSingleOrderById","_ref2","invalidatesTags","deleteOrderById","updatePaymentOrder","_ref3","orderId","productId","useGetAllOrdersQuery","useGetAllOrdersByFilterQuery","useGetRecentOrderQuery","useDeleteOrderByIdMutation","useUpdateSingleOrderByIdMutation","useGetSingleOrderByIdQuery","useGetTotalSaleByYearQuery","useGetTotalSaleByMonthQuery","useGetTotalOrderByMonthQuery","useGetTotalSaleByDayQuery","useGetTotalOrderByDayQuery","useGetTotalSalesQuery","useGetTotalSalesByDateMutation","useGetTotalOrdersQuery","useGetTotalOrdersByYearQuery","useUpdatePaymentOrderMutation","getModels","toolbar","list","script","indent","direction","header","color","background","font","align","orderData","shippingName","district","city","postCode","shippingEmail","shippingPhone","createdAt","address","_jsxs","CRow","className","children","_jsx","CCol","xs","transactionId","md","CCard","CCardHeader","style","marginLeft","CIcon","icon","cilCart","CCardBody","CListGroup","flush","BsShop","width","lineHeight","cilCalendar","Date","toLocaleDateString","cilCreditCard","paymentType","cilCarAlt","marginRight","cilUser","cilGroup","cilEnvelopeOpen","cilPhone","cilItalic","cilMediaStop","cilMoney","paymentMethod","cilCheck","_orderData$products","_orderData$couponDisc","_orderData$couponDisc2","country","numberWithCommas","x","toString","replace","CTable","bordered","CTableHead","CTableRow","letterSpacing","CTableHeaderCell","CTableBody","CTableDataCell","products","map","item","index","_item$product","_item$product2","_item$product3","_item$product4","_item$product5","_item$product6","Link","to","product","name","size","quantity","price","offerPrice","_Fragment","paddingRight","_id","colSpan","couponDiscount","discount","discountType","totalAmount","shippingCharge","minWidth","orderStatusOptions","value","label","OrderHistory","_orderData$address","selectedValue","setSelectedValue","useState","modules","emailBody","setEmailBody","isLoading","updateLoading","isError","updateError","isSuccess","updateSuccess","useEffect","status","register","handleSubmit","setValue","formState","errors","useForm","toast","success","error","cilHistory","notify","CForm","onSubmit","length","warning","_orderData$user","_orderData$user2","html","user","email","CFormSelect","backgroundColor","options","onChange","e","target","ReactQuill","theme","placeholder","CFormCheck","CancelButton","CButton","type","cilSave","memo","paddingBottom","Row","Image","src","logo","fontWeight","fontSize","Col","console","log","sellerApi","getSingleSellerById","useGetSingleSellerByIdQuery","_sellerAddress$data","_sellerAddress$data2","_sellerAddress$data3","componentRef","barcodeRef","useRef","sellerId","sellerAddress","current","JsBarcode","format","displayValue","height","ref","borderRight","toDateString","QRCode","ViewOrderDetails","useParams","navigate","useNavigate","handlePrint","useReactToPrint","content","PrintMethod","CTooltip","onClick","cilPrint","cursor","back","Loading","InvoiceQrCode","result","CompanyInfo","AddressDetails","OrderDetails"],"sourceRoot":""}