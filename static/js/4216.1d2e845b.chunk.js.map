{"version":3,"file":"static/js/4216.1d2e845b.chunk.js","mappings":"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","sources":["redux/order/orderApi.js","redux/reviews/reviewsApi.js","ui/button/DeleteButton.jsx","ui/button/EyeButton.jsx","utils/chartDataGenerator.js","utils/dataLoadStaging.js","views/dashboard/TableRowDashboardOrder.jsx","views/dashboard/OrderHeading.jsx","views/dashboard/LowQuantityProductHeading.jsx","ui/order&salesModal/OrderAndSalesModal.jsx","views/dashboard/ChartData.jsx","views/dashboard/Dashboard.jsx","views/orders/manage-orders/TableRowData.jsx","views/products/manage-products/ProductTableRow.jsx","../node_modules/@coreui/icons/js/free/cil-options.js","utils/moneyFormat.js","ui/chartLine/ChartLine.jsx","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/utils/dist/coreui-utils.common.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const orderApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\"],\n  endpoints: (builder) => ({\n    //get all orders\n    getAllOrders: builder.query({\n      query: (query) => ({\n        url: `/order${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllOrder\"],\n    }),\n\n    //get all orders\n    getAllOrdersByFilter: builder.query({\n      query: (query) => ({\n        url: `/order/filterOrder?${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllFilterOrder\"],\n    }),\n\n    //get recent orders\n    getRecentOrder: builder.query({\n      query: () => ({\n        url: `/order/recentOrder`,\n        method: \"GET\",\n      }),\n      providesTags: [\"RecentOrder\"],\n    }),\n\n    //get all sale by year\n    getTotalSaleByYear: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all orders by year\n    getTotalOrdersByYear: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by month\n    getTotalSaleByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get orders by day\n    getTotalOrderByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by day\n    getTotalSaleByDay: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all order by day\n    getTotalOrderByDay: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSales: builder.query({\n      query: () => ({\n        url: `/order/totalSales`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSalesByDate: builder.mutation({\n      query: ({ data }) => ({\n        url: `/order/totalSales/byDate`,\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n\n    //get all sale by day\n    getTotalOrders: builder.query({\n      query: () => ({\n        url: `/order/totalOrders`,\n        method: \"GET\",\n      }),\n    }),\n\n    // get single order by id\n    getSingleOrderById: builder.query({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"GET\",\n      }),\n      // invalidatesTags: [\"AllOrder\"],\n      providesTags: [\"SingleOrder\"],\n    }),\n\n    // update order by id\n    updateSingleOrderById: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/order/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\", \"Products\"],\n    }),\n\n    // delete order by id\n    deleteOrderById: builder.mutation({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n\n\n    // delete order by id\n    updatePaymentOrder: builder.mutation({\n      query: ({ orderId, productId, data }) => ({\n        url: `/order/${orderId}/products/${productId}/transaction`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllOrdersQuery,\n  useGetAllOrdersByFilterQuery,\n  useGetRecentOrderQuery,\n  useDeleteOrderByIdMutation,\n  useUpdateSingleOrderByIdMutation,\n  useGetSingleOrderByIdQuery,\n  useGetTotalSaleByYearQuery,\n  useGetTotalSaleByMonthQuery,\n  useGetTotalOrderByMonthQuery,\n  useGetTotalSaleByDayQuery,\n  useGetTotalOrderByDayQuery,\n  useGetTotalSalesQuery,\n  useGetTotalSalesByDateMutation,\n  useGetTotalOrdersQuery,\n  useGetTotalOrdersByYearQuery,\n  useUpdatePaymentOrderMutation\n} = orderApi;\n","const { apiSlice } = require(\"../api/apiSlice\");\n\nconst reviewsApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllReview\"],\n  endpoints: (builder) => ({\n    // get all reviews hook\n    getAllReviews: builder.query({\n      query: (query) => ({\n        url: `review${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllReview\"],\n    }),\n\n    // get total reviews hook\n    getTotalReviews: builder.query({\n      query: () => ({\n        url: \"review/totalReviews\",\n        method: \"GET\",\n      }),\n    }),\n\n    // get total reviews by month\n    getTotalReviewsByMonth: builder.query({\n      query: () => ({\n        url: \"review/totalReviewsByMonth\",\n        method: \"GET\",\n      }),\n    }),\n\n    // get all reviews hook\n    deleteSingleReview: builder.mutation({\n      query: (id) => ({\n        url: `review/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllReview\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllReviewsQuery,\n  useDeleteSingleReviewMutation,\n  useGetTotalReviewsQuery,\n  useGetTotalReviewsByMonthQuery,\n} = reviewsApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","import { CButton, CTooltip } from \"@coreui/react\";\nimport { BsEye } from \"react-icons/bs\";\n\nconst EyeButton = ({ handleClick }) => {\n  return (\n    <CTooltip content=\"View\">\n      <CButton\n        onClick={handleClick}\n        className=\"mb-1  ms-2\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        color=\"info\"\n        variant=\"outline\"\n      >\n        <BsEye style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default EyeButton;\n","export function getDaysArray(month) {\n  let numDaysInMonth, i, j, daysArray;\n  numDaysInMonth = [];\n  if (new Date().getFullYear() % 4 === 0) {\n    numDaysInMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  } else {\n    numDaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  }\n  daysArray = [];\n  for (i = 0, j = numDaysInMonth[month - 1]; i < j; i++) {\n    daysArray.push(i + 1);\n  }\n  return daysArray;\n}\n\n// export function getYearsArray(currentYear) {\n//   const startYear = 2015;\n//   const difference = currentYear - startYear + 1;\n//   let years = [];\n//   for (let i = 0; i < difference; i++) {\n//     years.push(startYear + i);\n//   }\n//   return years;\n// }\n\nexport function findDaysData(day, orderDays) {\n  const days = [...day];\n  for (let i = 0; i < days?.length; i++) {\n    let found = false;\n    for (let j = 0; j < orderDays?.length; j++) {\n      if (days[i] === orderDays[j]._id.day) {\n        days[i] = orderDays[j].total;\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      days[i] = 0;\n    }\n  }\n  return days;\n}\n\nexport function findMonthsData(months, monthsData) {\n  let copyMonths = [...months];\n  for (let i = 0; i < copyMonths.length; i++) {\n    let found = false;\n    for (let j = 0; j < monthsData?.length; j++) {\n      if (copyMonths[i] === monthsData[j].month) {\n        copyMonths[i] = monthsData[j].total;\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      copyMonths[i] = 0;\n    }\n  }\n  return copyMonths;\n}\n\nexport const monthsLabel = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"July\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n","export function stagingContent(isLoading, isError, data) {\n  let content = null;\n  if (isLoading) {\n    content = <p className=\"text-center  my-2 fs-5 text-primary\">Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p className=\"text-danger\">There was an error</p>;\n  }\n  if (!isLoading && !isError && data?.length === 0) {\n    content = <p>There is no result</p>;\n  }\n\n  return content;\n}\n","import { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport EyeButton from \"src/ui/button/EyeButton\";\n\nconst TableRowDashboardOrder = ({ order, index }) => {\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableDataCell>{order?.address?.shippingName}</CTableDataCell>\n      <CTableDataCell>{order?.totalAmount}</CTableDataCell>\n      <CTableDataCell>{order?.paymentType}</CTableDataCell>\n      <CTableDataCell>{new Date(order?.createdAt).toLocaleDateString()}</CTableDataCell>\n      <CTableDataCell>{new Date(order?.updatedAt).toLocaleDateString()}</CTableDataCell>\n      <CTableDataCell>{order?.status}</CTableDataCell>\n      <div className=\"\">\n        <Link to={`/order/details/${order?._id}`}>\n          <EyeButton />\n        </Link>\n        <Link to={`/order/details/${order?._id}`}>\n          <EditButton />\n        </Link>\n        {/* <DeleteButton setShowModal={setShowModal}/> */}\n        <DeleteButton />\n      </div>\n    </CTableRow>\n  );\n};\n\nexport default TableRowDashboardOrder;\n","/* eslint-disable prettier/prettier */\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CRow,\n    CTable,\n    CTableBody,\n    CTableHead,\n    CTableHeaderCell,\n    CTableRow,\n} from \"@coreui/react\";\nimport { stagingContent } from \"src/utils/dataLoadStaging\";\nimport { useGetRecentOrderQuery } from \"src/redux/order/orderApi\";\nimport TableRowDashboardOrder from \"./TableRowDashboardOrder\";\n\nconst OrderHeading = () => {\n    const { data, isLoading, isError } = useGetRecentOrderQuery();\n    let content = stagingContent(isLoading, isError, data);\n    if (!isLoading && !isError && data?.length > 0) {\n        content = data?.map((order, index) => (\n            <TableRowDashboardOrder key={order?._id} order={order} index={index} />\n        ));\n    }\n\n    return (\n        <CRow>\n            <CCol xs>\n                <CCard className=\"mb-4\">\n                    <CCardHeader>Recent Five Orders</CCardHeader>\n                    <CCardBody>\n                        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n                            <CTableHead color=\"light\">\n                                <CTableRow className=\"text-start\">\n                                    <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                                        Sl. No.\n                                    </CTableHeaderCell>\n                                    <CTableHeaderCell scope=\"col\">Customer</CTableHeaderCell>\n                                    <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                                    <CTableHeaderCell scope=\"col\">Payment Method</CTableHeaderCell>\n                                    <CTableHeaderCell scope=\"col\">Order Date</CTableHeaderCell>\n                                    <CTableHeaderCell scope=\"col\">Modify Date</CTableHeaderCell>\n\n                                    <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                                    <CTableHeaderCell\n                                        scope=\"col\"\n                                        style={{\n                                            width: \"150px\",\n                                            minWidth: \"150px\",\n                                        }}\n                                    >\n                                        Actions\n                                    </CTableHeaderCell>\n                                </CTableRow>\n                            </CTableHead>\n                            <CTableBody>{content}</CTableBody>\n                        </CTable>\n                    </CCardBody>\n                </CCard>\n            </CCol>\n        </CRow>\n    );\n};\n\nexport default OrderHeading;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllLowQuantityProductQuery } from \"src/redux/products/productsApi\";\nimport { stagingContent } from \"src/utils/dataLoadStaging\";\nimport ProductTableRow from \"../products/manage-products/ProductTableRow\";\n\nconst LowQuantityProductHeading = () => {\n  const { data, isLoading, isError } = useGetAllLowQuantityProductQuery();\n\n  let content = stagingContent(isLoading, isError, data?.data);\n  if (!isLoading && !isError && data?.data?.length > 0) {\n    content = data?.data?.map((product, index) => (\n      <ProductTableRow\n        key={product?._id}\n        // handleDeleteProduct={handleDeleteProduct}\n        product={product}\n        index={index}\n        // deleteLoading={deleteLoading}\n      />\n    ));\n  }\n\n  return (\n    <CRow>\n      <CCol xs>\n        <CCard className=\"mb-4\">\n          <CCardHeader>Low Quantity Products</CCardHeader>\n          <CCardBody style={{ maxHeight: \"350px\", overflowY: \"scroll\" }}>\n            <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n              <CTableHead color=\"light\">\n                <CTableRow className=\"text-center\">\n                  <CTableHeaderCell\n                    scope=\"col\"\n                    style={{\n                      paddingLeft: 0,\n                      paddingRight: 0,\n                    }}\n                  >\n                    Sl. No.\n                    {/* <Form.Check inline type=\"checkbox\" /> */}\n                  </CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Photo</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Discount</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Stock Status</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Quantity</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Price</CTableHeaderCell>\n                  <CTableHeaderCell\n                    scope=\"col\"\n                    style={{\n                      width: \"100px\",\n                      minWidth: \"100px\",\n                    }}\n                  >\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>{content}</CTableBody>\n            </CTable>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default LowQuantityProductHeading;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableDataCell,\n} from \"@coreui/react\";\nimport { useState } from \"react\";\nimport \"./salsesModal.scss\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  useDeleteOrderByIdMutation,\n  useGetTotalSalesByDateMutation,\n} from \"src/redux/order/orderApi\";\nimport TableRowData from \"src/views/orders/manage-orders/TableRowData\";\nimport Loading from \"../Loading\";\n\nconst OrderAndSalesModal = ({ showModal, setShowModal }) => {\n  const { register, errors, handleSubmit, reset } = useForm();\n\n  const [getTotalSalesByDae, { data, isLoading: getLoading, isError: getError }] =\n    useGetTotalSalesByDateMutation();\n\n  const handleSearch = (data) => {\n    const data2 = {\n      fromDate: data.fromDate,\n      toDate: data.toDate,\n    };\n    getTotalSalesByDae({ data: data2 });\n    // reset();\n  };\n\n  const [\n    deleteOrderById,\n    { isLoading: deleteLoading, isSuccess: deleteSuccess, isError: deleteError },\n  ] = useDeleteOrderByIdMutation();\n\n  const handleDeleteOrder = (id) => {\n    deleteOrderById(id);\n  };\n\n  let content = null;\n  if (getLoading) {\n    content = <Loading />;\n  }\n  if (!getLoading && getError) {\n    content = (\n      <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n        There was an error, try again.\n      </CTableDataCell>\n    );\n  }\n  if (!getLoading && !getError && data?.orders?.length === 0) {\n    content = (\n      <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n        No data found\n      </CTableDataCell>\n    );\n  }\n  if (!getLoading && !getError && data?.orders?.length > 0) {\n    content = (\n      <CTable\n        style={{ overflowY: \"scroll\" }}\n        align=\"middle\"\n        className=\"my-3 border\"\n        bordered\n        hover\n        responsive\n      >\n        <CTableHead color=\"light\">\n          <CTableRow className=\"text-start\">\n            <CTableHeaderCell scope=\"col\" style={{ width: \"60px\" }}>\n              Sl. No.\n            </CTableHeaderCell>\n            <CTableHeaderCell\n              scope=\"col\"\n              style={{\n                width: \"200px\",\n              }}\n            >\n              Customer\n            </CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Phone</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Payment Method</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Order Date</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Modify Date</CTableHeaderCell>\n            <CTableHeaderCell scope=\"col\">Order Status</CTableHeaderCell>\n            <CTableHeaderCell\n              scope=\"col\"\n              style={{\n                width: \"150px\",\n                minWidth: \"150px\",\n              }}\n            >\n              Actions\n            </CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        {data?.orders?.map((order, index) => (\n          <CTableBody key={order?._id}>\n            <TableRowData\n              handleDeleteOrder={handleDeleteOrder}\n              deleteLoading={deleteLoading}\n              index={index}\n              order={order}\n            />\n          </CTableBody>\n        ))}\n      </CTable>\n    );\n  }\n  let numberWithCommas = (x) => {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  return (\n    <CModal\n      visible={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      className=\"salesModal\"\n    >\n      <CModalHeader closeButton>Search Here</CModalHeader>\n      <CModalBody>\n        <CForm id=\"filter\" onSubmit={handleSubmit(handleSearch)}>\n          <div className=\"d-flex gap-2 justify-content-between\">\n            <div style={{ width: \"45%\" }}>\n              <label htmlFor=\"\">From</label>\n              <div>\n                <CFormInput\n                  type=\"date\"\n                  {...register(\"fromDate\", {\n                    required: {\n                      value: true,\n                    },\n                  })}\n                />\n                {errors?.fromDate && <p className=\"text-danger\">From date required</p>}\n              </div>\n            </div>\n            <div style={{ width: \"45%\" }}>\n              <label htmlFor=\"\">To</label>\n              <div>\n                <CFormInput\n                  type=\"date\"\n                  {...register(\"toDate\", {\n                    required: {\n                      value: true,\n                      message: \"To date required\",\n                    },\n                  })}\n                />\n                {errors?.toDate && <p className=\"text-danger\">To date required</p>}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"d-flex justify-content-end mt-3\">\n            <CButton type=\"submit\" form=\"filter\" color=\"success\">\n              {getLoading ? \"Loading..\" : \"Search\"}\n            </CButton>\n          </div>\n        </CForm>\n        {data && (\n          <div className=\"d-flex justify-content-between my-4\">\n            <div className=\"salesCard sales\">\n              <p className=\"fs-5 fw-bold\">{numberWithCommas(data?.totalSales)}</p>\n              <p>Total sales</p>\n            </div>\n            <div className=\"salesCard shipping\">\n              <p className=\"fs-5 fw-bold\">{numberWithCommas(data?.totalShipping)}</p>\n              <p>Total shipping</p>\n            </div>\n            <div className=\"salesCard orders\">\n              <p className=\"fs-5 fw-bold\">{numberWithCommas(data?.totalOrders)}</p>\n              <p>Total orders</p>\n            </div>\n          </div>\n        )}\n\n        {content}\n        {/* <PaginationButton searchUrl={location.search} totalPageNumber={pages} /> */}\n      </CModalBody>\n      <CModalFooter></CModalFooter>\n    </CModal>\n  );\n};\n\nexport default OrderAndSalesModal;\n","import { CButton, CButtonGroup, CCard, CCardBody, CCol, CRow } from \"@coreui/react\";\nimport { CChart } from \"@coreui/react-chartjs\";\nimport { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport OrderAndSalesModal from \"src/ui/order&salesModal/OrderAndSalesModal\";\n\nconst ChartData = ({\n  selectedSalesData,\n  selectedOrderData,\n  selectedLabel,\n  selectValue,\n  handleButtonValueChanges,\n}) => {\n  const [showOrderFilterModal, setShowOrderFilter] = useState(false);\n\n  return (\n    <Row>\n      <Col>\n        <CCard className=\"mb-4\">\n          <CCardBody>\n            <CRow>\n              <CCol sm={5}>\n                <h4 id=\"traffic\" className=\"card-title mb-0\">\n                  Orders & Sales\n                </h4>\n                <div className=\"small text-medium-emphasis\">{new Date().toDateString()}</div>\n              </CCol>\n              <CCol sm={7} className=\"d-none d-md-block\">\n                <CButtonGroup className=\"float-end me-3\">\n                  {[\"Day\", \"Month\", \"Year\"].map((value) => (\n                    <CButton\n                      color=\"outline-info\"\n                      key={value}\n                      onClick={() => handleButtonValueChanges(value)}\n                      className=\"mx-0 shadow-none\"\n                      active={value === selectValue}\n                    >\n                      {value}\n                    </CButton>\n                  ))}\n                  <CButton\n                    color=\"outline-info\"\n                    onClick={() => setShowOrderFilter(true)}\n                    className=\"mx-0 shadow-none\"\n                    // active={value === selectValue}\n                  >\n                    Custom\n                  </CButton>\n                </CButtonGroup>\n              </CCol>\n            </CRow>\n\n            <CChart\n              style={{ maxHeight: \"300px\", marginTop: \"40px\" }}\n              type=\"bar\"\n              data={{\n                labels: selectedLabel,\n                datasets: [\n                  {\n                    label: \"Total Orders\",\n                    backgroundColor: \"red\",\n                    data: selectedOrderData,\n                  },\n                  {\n                    label: \"Total Sales\",\n                    backgroundColor: \"#9FC1ED\",\n                    data: selectedSalesData,\n                  },\n                ],\n              }}\n              labels=\"months\"\n            />\n          </CCardBody>\n        </CCard>\n      </Col>\n\n      <OrderAndSalesModal showModal={showOrderFilterModal} setShowModal={setShowOrderFilter} />\n    </Row>\n  );\n};\n\nexport default ChartData;\n","/* eslint-disable prettier/prettier */\nimport { useState } from \"react\";\nimport {\n  useGetTotalSaleByYearQuery,\n  useGetTotalSaleByMonthQuery,\n  useGetTotalSaleByDayQuery,\n  useGetTotalOrderByDayQuery,\n  useGetTotalOrderByMonthQuery,\n  useGetTotalOrdersByYearQuery,\n} from \"src/redux/order/orderApi\";\n\nimport WidgetsDropdown from \"../widgets/WidgetsDropdown\";\nimport { memo } from \"react\";\nimport {\n  findDaysData,\n  findMonthsData,\n  getDaysArray,\n  monthsLabel,\n} from \"src/utils/chartDataGenerator\";\nimport OrderHeading from \"./OrderHeading\";\nimport LowQuantityProductHeading from \"./LowQuantityProductHeading\";\nimport ChartData from \"./ChartData\";\nimport { useEffect } from \"react\";\n\nconst Dashboard = () => {\n  // year hooks\n  const { data: totalYearSale } = useGetTotalSaleByYearQuery();\n  const { data: totalYearOrders } = useGetTotalOrdersByYearQuery();\n\n  //month hooks\n  const { data: totalMonthSale } = useGetTotalSaleByMonthQuery();\n  const { data: totalMonthOrder } = useGetTotalOrderByMonthQuery();\n\n  //day hooks\n  const { data: totalDaySale } = useGetTotalSaleByDayQuery(); // 1, 2, 3, 4, 5, 6, 7, 8....\n  const { data: totalDayOrder } = useGetTotalOrderByDayQuery(); // 1, 2, 3, 4, 5, 6, 7, 8....\n\n  //day\n  const daysLabel = getDaysArray(new Date().getMonth() + 1);\n  const daySalesData = findDaysData(daysLabel, totalDaySale);\n  const dayOrderData = findDaysData(daysLabel, totalDayOrder);\n\n  //year\n  const yearLabel = totalYearSale?.map((data) => data?._id.year);\n  const yearSalesData = totalYearSale?.map((data) => data.total);\n  const yearOrdersData = totalYearOrders?.map((data) => data.total);\n\n  //month\n  const monthSalesData = findMonthsData(monthsLabel, totalMonthSale);\n  const monthOrdersData = findMonthsData(monthsLabel, totalMonthOrder);\n\n  const [selectValue, setSelectValue] = useState(\"Day\");\n  const [selectedLabel, setSelectedLabel] = useState(daysLabel); // initially day labels\n  const [selectedSalesDayData, setSelectedSalesDayData] = useState(\"\");\n  const [selectedOrderDayData, setSelectedOrderDayData] = useState(\"\");\n\n  useEffect(() => {\n    if (totalDaySale) {\n      setSelectedSalesDayData(daySalesData);\n      setSelectedOrderDayData(dayOrderData);\n    }\n\n    return () => { };\n  }, [totalDaySale, totalDayOrder]);\n\n  const handleButtonValueChanges = (value) => {\n    setSelectValue(value);\n\n    if (value === \"Day\") {\n      setSelectedLabel(daysLabel);\n\n      setSelectedSalesDayData(daySalesData);\n      setSelectedOrderDayData(dayOrderData);\n    }\n    if (value === \"Month\") {\n      setSelectedLabel(monthsLabel);\n\n      setSelectedSalesDayData(monthSalesData);\n      setSelectedOrderDayData(monthOrdersData);\n    }\n    if (value === \"Year\") {\n      setSelectedLabel(yearLabel);\n\n      setSelectedSalesDayData(yearSalesData);\n      setSelectedOrderDayData(yearOrdersData);\n    }\n  };\n\n  return (\n    <>\n      <WidgetsDropdown monthOrdersData={monthOrdersData} monthSalesData={monthSalesData} />\n      <ChartData\n        handleButtonValueChanges={handleButtonValueChanges}\n        selectValue={selectValue}\n        selectedLabel={selectedLabel}\n        selectedSalesData={selectedSalesDayData}\n        selectedOrderData={selectedOrderDayData}\n      />\n      <OrderHeading />\n      <LowQuantityProductHeading />\n    </>\n  );\n};\n\nexport default memo(Dashboard);\n","/* eslint-disable no-lone-blocks */\n/* eslint-disable react/prop-types */\nimport { CFormSelect, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useUpdateSingleOrderByIdMutation } from \"src/redux/order/orderApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport EyeButton from \"src/ui/button/EyeButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\n// eslint-disable-next-line react/prop-types\nconst TableRowData = ({ index, order, handleDeleteOrder, deleteLoading }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const { totalAmount, createdAt, updatedAt, paymentType, status, userName, userPhone, orderId, report } =\n    order || {};\n  const [selectedStatus, setSelectedStatus] = useState(status);\n\n  const [updateSingleOrderById, { isLoading: updateLoading, updateError }] =\n    useUpdateSingleOrderByIdMutation();\n\n  const orderStatus = [\n    { value: \"pending\", label: \"Pending\" },\n    { value: \"processing\", label: \"Processing\" },\n    { value: \"shipped\", label: \"shipped\" },\n    { value: \"cancelled\", label: \"Cancelled\" },\n    { value: \"returned\", label: \"Returned\" },\n    { value: \"delivered\", label: \"Delivered\" },\n    { value: \"expired\", label: \"Expired\" },\n  ];\n  const handleUpdate = (e, id) => {\n    const value = e.target.value;\n    setSelectedStatus(value);\n    const data = { status: value };\n\n    updateSingleOrderById({ id, data });\n  };\n  return (\n    <>\n      <DeleteModal\n        deleteThis={handleDeleteOrder}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={order?._id}\n        deleteLoading={deleteLoading}\n      />\n      <CTableRow>\n        <CTableHeaderCell scope=\"row\">\n          {index + 1}\n          {/* <Form.Check inline type=\"checkbox\" id={index + 1} /> */}\n        </CTableHeaderCell>\n        <CTableDataCell>{userName}</CTableDataCell>\n        <CTableDataCell>{orderId}</CTableDataCell>\n        <CTableDataCell>{userPhone}</CTableDataCell>\n        <CTableDataCell>{totalAmount}</CTableDataCell>\n        <CTableDataCell>{paymentType} {report && <span className=\"text-danger text-uppercase\">REQ: {report?.requestedFor}</span>}</CTableDataCell>\n        <CTableDataCell>{new Date(createdAt).toLocaleDateString()}</CTableDataCell>\n        <CTableDataCell>{new Date(updatedAt).toLocaleDateString()}</CTableDataCell>\n        <CTableDataCell>\n          {updateLoading && <small>Loading..</small>}\n          {updateError && <small className=\"text-danger\">Error occured</small>}\n          <CFormSelect\n            style={{ width: \"150px\" }}\n            aria-label=\"Product Select Selection Field\"\n            options={orderStatus}\n            value={selectedStatus}\n            disabled={updateLoading}\n            onChange={(e) => {\n              // setSelectedStatus(e.target.value);\n              handleUpdate(e, order?._id);\n              // eslint-disable-next-line prettier/prettier\n            }}\n          />\n        </CTableDataCell>\n        <CTableDataCell>\n          <div className=\"\">\n            <Link to={`/order/details/${order?._id}`}>\n              <EyeButton />\n            </Link>\n            <Link to={`/order/details/${order?._id}`}>\n              <EditButton />\n            </Link>\n            {/* <Link to={`/order/edit/${order?._id}`}>\n              <EditButton />\n            </Link> */}\n            <DeleteButton setShowModal={setShowModal} />\n          </div>\n        </CTableDataCell>\n      </CTableRow>\n    </>\n  );\n};\n\nexport default TableRowData;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleProductMutation } from \"src/redux/products/productsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\nconst ProductTableRow = ({ product, index }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const [\n    deleteSingleProduct,\n    { isLoading: deleteLoading, isSuccess: deleteSuccess, isError: deleteError },\n  ] = useDeleteSingleProductMutation();\n\n  const handleDeleteProduct = (id) => {\n    deleteSingleProduct(id);\n  };\n\n  useEffect(() => {\n    deleteSuccess && toast.success(\"Product deleted successfully\");\n    deleteError && toast.error(\"Product deleted failed\");\n  }, [deleteSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableDataCell>\n        <img\n          src={product?.images?.[0]}\n          alt={product?.model}\n          style={{\n            height: \"2.5rem\",\n            width: \"2.5rem\",\n            borderRadius: \"0.25rem\",\n            objectFit: \"cover\",\n          }}\n          className=\"border\"\n        />\n      </CTableDataCell>\n      <CTableDataCell>{product?.name}</CTableDataCell>\n      {/* <CTableDataCell>{product?.model}</CTableDataCell> */}\n      <CTableDataCell>{product?.discountPercentage} %</CTableDataCell>\n      <CTableDataCell>{product.status}</CTableDataCell>\n      <CTableDataCell\n        className={`${\n          product.quantity <= 15 &&\n            \"text-danger\"\n        }`}\n      >\n        {product.quantity}\n      </CTableDataCell>\n      <CTableDataCell>৳{product.price}</CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/product/edit/${product?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteProduct}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={product._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default ProductTableRow;\n","export const cilOptions = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,144a64,64,0,1,0-64-64A64.072,64.072,0,0,0,256,144Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,256,48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,368a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,368Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,464Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z' class='ci-primary'/>\"]","export const moneyConvert = function moneyConvert(labelValue) {\n  // Nine Zeroes for Billions\n  return Math.abs(Number(labelValue)) >= 1.0e9\n    ? (Math.abs(Number(labelValue)) / 1.0e9).toFixed(2) + \"B\"\n    : // Six Zeroes for Millions\n    Math.abs(Number(labelValue)) >= 1.0e6\n    ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(2) + \"M\"\n    : // Three Zeroes for Thousands\n    Math.abs(Number(labelValue)) >= 1.0e3\n    ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(2) + \"K\"\n    : Math.abs(Number(labelValue));\n};\n","import { CChartLine } from \"@coreui/react-chartjs\";\nimport { getStyle } from \"@coreui/utils\";\nimport { monthsLabel } from \"src/utils/chartDataGenerator\";\n\nconst ChartLine = ({ data, title, color }) => {\n  return (\n    <CChartLine\n      className=\"mt-3 mx-3\"\n      style={{ height: \"70px\" }}\n      data={{\n        labels: monthsLabel,\n        datasets: [\n          {\n            label: title,\n            backgroundColor: \"transparent\",\n            borderColor: \"rgba(255,255,255,.55)\",\n            pointBackgroundColor: getStyle(`--cui-${color}`),\n            data: data,\n          },\n        ],\n      }}\n      options={{\n        plugins: {\n          legend: {\n            display: false,\n          },\n        },\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawBorder: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n          y: {\n            min: 0,\n            // max: 12,\n            display: false,\n            grid: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        },\n        elements: {\n          line: {\n            borderWidth: 1,\n            tension: 0.4,\n          },\n          point: {\n            radius: 4,\n            hitRadius: 10,\n            hoverRadius: 4,\n          },\n        },\n      }}\n    />\n  );\n};\n\nexport default ChartLine;\n","import { cilArrowBottom, cilOptions } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CCol,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CRow,\n  CWidgetStatsA,\n} from \"@coreui/react\";\nimport { useGetTotalOrdersQuery, useGetTotalSalesQuery } from \"src/redux/order/orderApi\";\nimport {\n  useGetTotalReviewsByMonthQuery,\n  useGetTotalReviewsQuery,\n} from \"src/redux/reviews/reviewsApi\";\nimport { useGetTotalCustomersQuery, useGetTotalUsersByMonthQuery } from \"src/redux/users/usersApi\";\nimport { moneyConvert } from \"src/utils/moneyFormat\";\nimport { Link } from \"react-router-dom\";\nimport ChartLine from \"src/ui/chartLine/ChartLine\";\nimport { findMonthsData, monthsLabel } from \"src/utils/chartDataGenerator\";\n\nconst WidgetsDropdown = ({ monthSalesData, monthOrdersData }) => {\n  const { data: totalSale } = useGetTotalSalesQuery();\n  const { data: totalOrder } = useGetTotalOrdersQuery();\n  const { data: totalUser } = useGetTotalCustomersQuery();\n  const { data: totalReview } = useGetTotalReviewsQuery();\n  const { data: totalUserByMonth } = useGetTotalUsersByMonthQuery();\n  const { data: totalReviewByMonth } = useGetTotalReviewsByMonthQuery();\n  const totalUserByMonthData = findMonthsData(monthsLabel, totalUserByMonth);\n  const totalReviewByMonthData = findMonthsData(monthsLabel, totalReviewByMonth);\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          style={{ height: \"150px\" }}\n          value={\n            <>\n              {moneyConvert(totalOrder?.totalOrders ? totalOrder?.totalOrders : 0)}\n              {/* <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Total Orders\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu className=\"p-0 overflow-hidden\">\n                <Link to=\"/order\" className=\"text-decoration-none d-block \">\n                  <CDropdownItem style={{ cursor: \"pointer\" }}>See Details</CDropdownItem>\n                </Link>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={<ChartLine data={monthOrdersData} title={\"order\"} color={\"primary\"} />}\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          style={{ height: \"150px\" }}\n          value={<>৳ {moneyConvert(totalSale?.totalSales ? totalSale?.totalSales : 0)} </>}\n          title=\"Total Sales\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu className=\"p-0 overflow-hidden\">\n                <Link to=\"/order\" className=\"text-decoration-none \">\n                  <CDropdownItem style={{ cursor: \"pointer\" }}> See Details</CDropdownItem>\n                </Link>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={<ChartLine data={monthSalesData} title={\"Sales\"} color={\"info\"} />}\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          style={{ height: \"150px\" }}\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              {moneyConvert(totalUser?.totalUsers ? totalUser?.totalUsers : 0)}\n              {/* <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span> */}\n            </>\n          }\n          title=\"Total Customers\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <Link to=\"/customer\" className=\"text-decoration-none \">\n                <CDropdownMenu className=\"p-0 overflow-hidden\">\n                  <CDropdownItem style={{ cursor: \"pointer\" }}> See Details</CDropdownItem>\n                </CDropdownMenu>\n              </Link>\n            </CDropdown>\n          }\n          chart={<ChartLine data={totalUserByMonthData} title={\"Customers\"} color={\"warning\"} />}\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          style={{ height: \"150px\" }}\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              {moneyConvert(totalReview?.totalReviews ? totalReview?.totalReviews : 0)}\n              {/* <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span> */}\n            </>\n          }\n          title=\"Total Reviews\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu className=\"p-0 overflow-hidden\">\n                <Link to=\"/all-reviews\" className=\"text-decoration-none \">\n                  <CDropdownItem style={{ cursor: \"pointer\" }}> See Details</CDropdownItem>\n                </Link>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={<ChartLine data={totalReviewByMonthData} title={\"Reviews\"} color={\"danger\"} />}\n        />\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default WidgetsDropdown;\n","!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t),n.d(t,\"deepObjectsMerge\",(function(){return r})),n.d(t,\"getColor\",(function(){return u})),n.d(t,\"getStyle\",(function(){return a})),n.d(t,\"hexToRgb\",(function(){return s})),n.d(t,\"hexToRgba\",(function(){return l})),n.d(t,\"makeUid\",(function(){return f})),n.d(t,\"omitByKeys\",(function(){return d})),n.d(t,\"pickByKeys\",(function(){return p})),n.d(t,\"rgbToHex\",(function(){return g}));var r=function e(t,n){for(var r=0,o=Object.keys(n);r<o.length;r++){var c=o[r];n[c]instanceof Object&&Object.assign(n[c],e(t[c],n[c]))}return Object.assign(t||{},n),t},o=function(){for(var e={},t=document.styleSheets,n=\"\",r=t.length-1;r>-1;r--){for(var o=t[r].cssRules,c=o.length-1;c>-1;c--)if(\".ie-custom-properties\"===o[c].selectorText){n=o[c].cssText;break}if(n)break}return(n=n.substring(n.lastIndexOf(\"{\")+1,n.lastIndexOf(\"}\"))).split(\";\").forEach((function(t){if(t){var n=t.split(\": \")[0],r=t.split(\": \")[1];n&&r&&(e[\"--\".concat(n.trim())]=r.trim())}})),e},c=function(){return Boolean(document.documentMode)&&document.documentMode>=10},i=function(e){return e.match(/^--.*/i)},a=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body;if(i(e)&&c()){var r=o();t=r[e]}else t=window.getComputedStyle(n,null).getPropertyValue(e).replace(/^\\s/,\"\");return t},u=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document.body,n=\"--\".concat(e),r=a(n,t);return r||e},s=function(e){if(void 0===e)throw new TypeError(\"Hex color is not defined\");var t,n,r;if(!e.match(/^#(?:[0-9a-f]{3}){1,2}$/i))throw new Error(\"\".concat(e,\" is not a valid hex color\"));return 7===e.length?(t=parseInt(e.slice(1,3),16),n=parseInt(e.slice(3,5),16),r=parseInt(e.slice(5,7),16)):(t=parseInt(e.slice(1,2),16),n=parseInt(e.slice(2,3),16),r=parseInt(e.slice(3,5),16)),\"rgba(\".concat(t,\", \").concat(n,\", \").concat(r,\")\")},l=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100;if(void 0===e)throw new TypeError(\"Hex color is not defined\");var n,r,o,c=e.match(/^#(?:[0-9a-f]{3}){1,2}$/i);if(!c)throw new Error(\"\".concat(e,\" is not a valid hex color\"));return 7===e.length?(n=parseInt(e.slice(1,3),16),r=parseInt(e.slice(3,5),16),o=parseInt(e.slice(5,7),16)):(n=parseInt(e.slice(1,2),16),r=parseInt(e.slice(2,3),16),o=parseInt(e.slice(3,5),16)),\"rgba(\".concat(n,\", \").concat(r,\", \").concat(o,\", \").concat(t/100,\")\")},f=function(){return\"uid-\"+Math.random().toString(36).substr(2)},d=function(e,t){for(var n={},r=Object.keys(e),o=0;o<r.length;o++)!t.includes(r[o])&&(n[r[o]]=e[r[o]]);return n},p=function(e,t){for(var n={},r=0;r<t.length;r++)n[t[r]]=e[t[r]];return n},g=function(e){if(void 0===e)throw new TypeError(\"Hex color is not defined\");if(\"transparent\"===e)return\"#00000000\";var t=e.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);if(!t)throw new Error(\"\".concat(e,\" is not a valid rgb color\"));var n=\"0\".concat(parseInt(t[1],10).toString(16)),r=\"0\".concat(parseInt(t[2],10).toString(16)),o=\"0\".concat(parseInt(t[3],10).toString(16));return\"#\".concat(n.slice(-2)).concat(r.slice(-2)).concat(o.slice(-2))},b={deepObjectsMerge:r,getColor:u,getStyle:a,hexToRgb:s,hexToRgba:l,makeUid:f,omitByKeys:d,pickByKeys:p,rgbToHex:g};t.default=b}]));"],"names":["orderApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllOrders","query","url","concat","method","providesTags","getAllOrdersByFilter","getRecentOrder","getTotalSaleByYear","getTotalOrdersByYear","getTotalSaleByMonth","getTotalOrderByMonth","getTotalSaleByDay","getTotalOrderByDay","getTotalSales","getTotalSalesByDate","mutation","_ref","data","body","getTotalOrders","getSingleOrderById","id","updateSingleOrderById","_ref2","invalidatesTags","deleteOrderById","updatePaymentOrder","_ref3","orderId","productId","useGetAllOrdersQuery","useGetAllOrdersByFilterQuery","useGetRecentOrderQuery","useDeleteOrderByIdMutation","useUpdateSingleOrderByIdMutation","useGetSingleOrderByIdQuery","useGetTotalSaleByYearQuery","useGetTotalSaleByMonthQuery","useGetTotalOrderByMonthQuery","useGetTotalSaleByDayQuery","useGetTotalOrderByDayQuery","useGetTotalSalesQuery","useGetTotalSalesByDateMutation","useGetTotalOrdersQuery","useGetTotalOrdersByYearQuery","useUpdatePaymentOrderMutation","require","reviewsApi","getAllReviews","getTotalReviews","getTotalReviewsByMonth","deleteSingleReview","useGetAllReviewsQuery","useDeleteSingleReviewMutation","useGetTotalReviewsQuery","useGetTotalReviewsByMonthQuery","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","handleClick","BsEye","getDaysArray","month","numDaysInMonth","i","j","daysArray","Date","getFullYear","push","findDaysData","day","orderDays","days","length","found","_id","total","findMonthsData","months","monthsData","copyMonths","monthsLabel","stagingContent","isLoading","isError","_order$address","order","index","_jsxs","CTableRow","CTableHeaderCell","scope","CTableDataCell","address","shippingName","totalAmount","paymentType","createdAt","toLocaleDateString","updatedAt","status","Link","to","EyeButton","EditButton","DeleteButton","OrderHeading","map","TableRowDashboardOrder","CRow","CCol","xs","CCard","CCardHeader","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody","LowQuantityProductHeading","_data$data","useGetAllLowQuantityProductQuery","_data$data2","product","ProductTableRow","maxHeight","overflowY","paddingLeft","paddingRight","_data$orders","_data$orders2","showModal","register","errors","handleSubmit","reset","useForm","getTotalSalesByDae","getLoading","getError","deleteLoading","isSuccess","deleteSuccess","deleteError","handleDeleteOrder","_data$orders3","Loading","colSpan","orders","TableRowData","numberWithCommas","x","toString","replace","CModal","visible","onClose","CModalHeader","closeButton","CModalBody","CForm","onSubmit","data2","fromDate","toDate","htmlFor","CFormInput","type","required","value","message","form","totalSales","totalShipping","totalOrders","CModalFooter","selectedSalesData","selectedOrderData","selectedLabel","selectValue","handleButtonValueChanges","showOrderFilterModal","setShowOrderFilter","useState","Row","Col","sm","toDateString","CButtonGroup","active","CChart","marginTop","labels","datasets","label","backgroundColor","OrderAndSalesModal","Dashboard","totalYearSale","totalYearOrders","totalMonthSale","totalMonthOrder","totalDaySale","totalDayOrder","daysLabel","getMonth","daySalesData","dayOrderData","yearLabel","year","yearSalesData","yearOrdersData","monthSalesData","monthOrdersData","setSelectValue","setSelectedLabel","selectedSalesDayData","setSelectedSalesDayData","selectedOrderDayData","setSelectedOrderDayData","useEffect","_Fragment","WidgetsDropdown","ChartData","memo","userName","userPhone","report","selectedStatus","setSelectedStatus","updateLoading","updateError","DeleteModal","deleteThis","requestedFor","CFormSelect","options","disabled","onChange","e","handleUpdate","target","_product$images","deleteSingleProduct","useDeleteSingleProductMutation","toast","success","error","src","images","alt","model","borderRadius","objectFit","name","discountPercentage","quantity","price","cilOptions","moneyConvert","labelValue","Math","abs","Number","toFixed","title","CChartLine","borderColor","pointBackgroundColor","getStyle","plugins","legend","display","maintainAspectRatio","scales","grid","drawBorder","ticks","y","min","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","totalSale","totalOrder","totalUser","useGetTotalCustomersQuery","totalReview","totalUserByMonth","useGetTotalUsersByMonthQuery","totalReviewByMonth","totalUserByMonthData","totalReviewByMonthData","lg","CWidgetStatsA","action","CDropdown","alignment","CDropdownToggle","caret","CDropdownMenu","CDropdownItem","cursor","chart","ChartLine","totalUsers","totalReviews","t","n","exports","r","o","l","call","m","c","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","u","a","f","g","keys","assign","arguments","document","match","Boolean","documentMode","styleSheets","cssRules","selectorText","cssText","substring","lastIndexOf","split","forEach","trim","window","getComputedStyle","getPropertyValue","TypeError","Error","parseInt","slice","random","substr","includes","b","deepObjectsMerge","getColor","hexToRgb","hexToRgba","makeUid","omitByKeys","pickByKeys","rgbToHex"],"sourceRoot":""}