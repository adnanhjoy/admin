{"version":3,"file":"static/js/9123.5538a0cf.chunk.js","mappings":"mNAaA,MAsEA,EAtEwBA,KACtB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,GAAiB,UAAEC,EAAS,QAAEC,EAAO,UAAEC,KAAeC,EAAAA,EAAAA,OACvD,KAAEC,EAAMJ,UAAWK,EAAYJ,QAASK,IAAaC,EAAAA,EAAAA,IAA8BV,GACnFW,GAAWC,EAAAA,EAAAA,OACVC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KAIzCC,GACEb,UAAWc,EAAeb,QAASc,EAAab,UAAWc,KAC3DC,EAAAA,EAAAA,MAwCJ,OAdAC,EAAAA,EAAAA,YAAU,KACRjB,GAAWkB,EAAAA,GAAMC,MAAM,8BACvBL,GAAeI,EAAAA,GAAMC,MAAM,8BAA8B,GACxD,CAACnB,EAASc,KAEbG,EAAAA,EAAAA,YAAU,KACRhB,GAAaM,GAAU,GACvBQ,GAAiBR,GAAU,EAAE,GAC5B,CAACN,EAAWc,KAEfE,EAAAA,EAAAA,YAAU,KAAO,IAADG,EACdV,EAAiB,OAAJP,QAAI,IAAJA,GAAU,QAANiB,EAAJjB,EAAMA,YAAI,IAAAiB,OAAN,EAAJA,EAAYC,KAAK,GAC7B,CAAClB,KAGFmB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACIpB,GAWAkB,EAAAA,EAAAA,KAACG,EAAAA,EAAO,KAVRH,EAAAA,EAAAA,KAACI,EAAAA,EAAe,CACdC,SA1CuBxB,IAAU,IAADyB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtC,MAAMC,EAAQ/B,EAAK+B,MAAM,GACnBC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASH,GACN,QAAnBN,EAAIzB,EAAKmC,kBAAU,IAAAV,GAAfA,EAAiBW,OACnBJ,EAASE,OAAO,aAAcG,KAAKC,UAAyB,QAAhBZ,EAAC1B,EAAKmC,kBAAU,IAAAT,OAAA,EAAfA,EAAiBU,QAC1C,QAAtBT,EAAI3B,EAAKuC,qBAAa,IAAAZ,GAAlBA,EAAoBS,OACtBJ,EAASE,OAAO,gBAAiBG,KAAKC,UAA4B,QAAnBV,EAAC5B,EAAKuC,qBAAa,IAAAX,OAAA,EAAlBA,EAAoBQ,QAC1C,QAA5BP,EAAI7B,EAAKwC,2BAAmB,IAAAX,GAAxBA,EAA0BO,OAC5BJ,EAASE,OAAO,sBAAuBG,KAAKC,UAAkC,QAAzBR,EAAC9B,EAAKwC,2BAAmB,IAAAV,OAAA,EAAxBA,EAA0BM,QAE9EpC,EAAKyC,MAAMT,EAASE,OAAO,OAAQlC,EAAKyC,MACxCzC,EAAK0C,SAASV,EAASE,OAAO,UAAWlC,EAAK0C,SAC9C1C,EAAK2C,SAASX,EAASE,OAAO,UAAWlC,EAAK2C,SAC9CrC,GAAW0B,EAASE,OAAO,OAAQ5B,GAGnCb,EACFgB,EAAmB,CAAEhB,GAAIA,EAAIuC,SAAUA,IAEvCrC,EAAgBqC,EAClB,EAsBMY,WAAYhD,GAAac,EACzBmC,MAAO,oBACPC,WAAgB,OAAJ9C,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAClB+C,WAAY,aACZzC,UAAWA,EACXC,aAAcA,KAKjB,C","sources":["views/bottom-banner/add-bottom-banner/AddBottomBanner.jsx"],"sourcesContent":["/* eslint-disable no-lone-blocks */\n/* eslint-disable prettier/prettier */\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  useAddBottomBannerMutation,\n  useGetSingleBottomBannerQuery,\n  useUpdateBottomBannerMutation,\n} from \"src/redux/banner/bannerApi\";\nimport AddBannerParent from \"src/ui/banner/AddBannerParentForm\";\nimport Loading from \"src/ui/Loading\";\n\nconst AddBottomBanner = () => {\n  const { id } = useParams();\n  const [addBottomBanner, { isLoading, isError, isSuccess }] = useAddBottomBannerMutation();\n  const { data, isLoading: getLoading, isError: getError } = useGetSingleBottomBannerQuery(id);\n  const navigate = useNavigate();\n  const [slugValue, setSlugValue] = useState(\"\");\n\n\n  const [\n    updateBottomBanner,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess },\n  ] = useUpdateBottomBannerMutation();\n\n  const handleAddBottomBanner = (data) => {\n    const image = data.image[0];\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    if (data.categories?.value)\n      formData.append(\"categories\", JSON.stringify(data.categories?.value));\n    if (data.subCategories?.value)\n      formData.append(\"subCategories\", JSON.stringify(data.subCategories?.value));\n    if (data.subCategoryChildren?.value)\n      formData.append(\"subCategoryChildren\", JSON.stringify(data.subCategoryChildren?.value));\n\n    if (data.name) formData.append(\"name\", data.name);\n    if (data.product) formData.append(\"product\", data.product);\n    if (data.related) formData.append(\"related\", data.related);\n    if (slugValue) formData.append(\"slug\", slugValue);\n\n\n    if (id) {\n      updateBottomBanner({ id: id, formData: formData });\n    } else {\n      addBottomBanner(formData);\n    }\n  };\n\n  useEffect(() => {\n    isError && toast.error(\"Bottom banner added failed\");\n    updateError && toast.error(\"Bottom banner update failed\");\n  }, [isError, updateError]);\n\n  useEffect(() => {\n    isSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [isSuccess, updateSuccess]);\n\n  useEffect(() => {\n    setSlugValue(data?.data?.slug)\n  }, [data]);\n\n  return (\n    <>\n      {!getLoading ? (\n        <AddBannerParent\n          onSubmit={handleAddBottomBanner}\n          addLoading={isLoading || updateLoading}\n          title={\"Add bottom banner\"}\n          bannerData={data?.data}\n          bannerSize={\"1200 x 120\"}\n          slugValue={slugValue}\n          setSlugValue={setSlugValue}\n        />\n      ) : (\n        <Loading />\n      )}\n    </>\n  );\n};\n\nexport default AddBottomBanner;\n"],"names":["AddBottomBanner","id","useParams","addBottomBanner","isLoading","isError","isSuccess","useAddBottomBannerMutation","data","getLoading","getError","useGetSingleBottomBannerQuery","navigate","useNavigate","slugValue","setSlugValue","useState","updateBottomBanner","updateLoading","updateError","updateSuccess","useUpdateBottomBannerMutation","useEffect","toast","error","_data$data","slug","_jsx","_Fragment","children","Loading","AddBannerParent","onSubmit","_data$categories","_data$categories2","_data$subCategories","_data$subCategories2","_data$subCategoryChil","_data$subCategoryChil2","image","formData","FormData","append","categories","value","JSON","stringify","subCategories","subCategoryChildren","name","product","related","addLoading","title","bannerData","bannerSize"],"sourceRoot":""}