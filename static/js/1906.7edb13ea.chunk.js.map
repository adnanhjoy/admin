{"version":3,"file":"static/js/1906.7edb13ea.chunk.js","mappings":"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","sources":["redux/reviews/reviewsApi.js","ui/pagination/Pagination.js","utils/setUrlParam.js","redux/all-newsletter/newsLetterApi.js","views/all-newsletter-subscriber/NewsLetterTableRow.jsx","views/all-newsletter-subscriber/AllNewsLetter.jsx"],"sourcesContent":["const { apiSlice } = require(\"../api/apiSlice\");\n\nconst reviewsApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllReview\"],\n  endpoints: (builder) => ({\n    // get all reviews hook\n    getAllReviews: builder.query({\n      query: (query) => ({\n        url: `review${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllReview\"],\n    }),\n\n    // get total reviews hook\n    getTotalReviews: builder.query({\n      query: () => ({\n        url: \"review/totalReviews\",\n        method: \"GET\",\n      }),\n    }),\n\n    // get total reviews by month\n    getTotalReviewsByMonth: builder.query({\n      query: () => ({\n        url: \"review/totalReviewsByMonth\",\n        method: \"GET\",\n      }),\n    }),\n\n    // get all reviews hook\n    deleteSingleReview: builder.mutation({\n      query: (id) => ({\n        url: `review/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllReview\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllReviewsQuery,\n  useDeleteSingleReviewMutation,\n  useGetTotalReviewsQuery,\n  useGetTotalReviewsByMonthQuery,\n} = reviewsApi;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-loop-func */\nimport { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\n\nconst PaginationButton = ({ totalPageNumber, searchUrl }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n\n  const handlePage = (page) => {\n    setCurrentPage(page);\n    navigate(setUrlParams(searchUrl || \"?\", \"page\", page.toString()));\n  };\n  // calculate page number\n  let pageNumber = !totalPageNumber ? [] : Array.from({ length: totalPageNumber }, (v, k) => k + 1);\n\n  let items = [];\n\n  for (let number = 1; number <= pageNumber.length; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === currentPage}\n        onClick={() => handlePage(number)}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <div className=\"d-flex justify-content-end mt-4\">\n      <Pagination size=\"sm\">\n        {currentPage > 1 && <Pagination.Prev onClick={() => handlePage(currentPage - 1)} />}\n        {items}\n        {currentPage < totalPageNumber && (\n          <Pagination.Next onClick={() => handlePage(currentPage + 1)} />\n        )}\n        {totalPageNumber > 1 && <Pagination.Last onClick={() => handlePage(totalPageNumber)} />}\n      </Pagination>\n    </div>\n  );\n};\n\nexport default PaginationButton;\n","export const setUrlParams = (searchUrl, paramName, valueOfParam) => {\n  const queryParams = searchUrl.split(\"&\");\n  let paramUpdated = false;\n  for (let i = 0; i < queryParams.length; i++) {\n    const param = queryParams[i].split(\"=\");\n    if (param[0] === paramName) {\n      param[1] = valueOfParam;\n      queryParams[i] = param.join(\"=\");\n      paramUpdated = true;\n      break;\n    }\n  }\n  if (!paramUpdated) {\n    queryParams.push(`${paramName}=${valueOfParam}`); // replace\n  }\n  const abc = [...new Set(queryParams)];\n\n  const finalUrl = abc.join(\"&\");\n  return finalUrl;\n};\n","const { apiSlice } = require(\"../api/apiSlice\");\n\nconst NewsLetterApi = apiSlice.injectEndpoints({\n  tagTypes: [\"NewsLetter\"],\n  endpoints: (builder) => ({\n    // get all NewsLetter hook\n    getAllNewsLetter: builder.query({\n      query: (query) => ({\n        url: `newsletter${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"NewsLetter\"],\n    }),\n\n    // get all NewsLetter hook\n    deleteSingleNewsLetter: builder.mutation({\n      query: (id) => ({\n        url: `newsletter/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"NewsLetter\"],\n    }),\n  }),\n});\n\nexport const { useGetAllNewsLetterQuery, useDeleteSingleNewsLetterMutation } = NewsLetterApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTableDataCell, CTableHeaderCell, CTableRow, CTooltip } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleNewsLetterMutation } from \"src/redux/all-newsletter/newsLetterApi\";\nimport { useDeleteSingleReviewMutation } from \"src/redux/reviews/reviewsApi\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst NewsLetterTableRow = ({ review, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteSingleNewsLetter, { isLoading, isError, isSuccess }] =\n    useDeleteSingleNewsLetterMutation();\n\n  useEffect(() => {\n    isSuccess && toast.success(\"Delete  Success\");\n    isError && toast.error(\"Delete  Failed\");\n  }, [isSuccess, isError]);\n\n  return (\n    <CTableRow key={review?._id}>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n\n      <CTableDataCell>{review?.email}</CTableDataCell>\n\n      <CTableDataCell>{new Date(review?.createdAt).toLocaleDateString()}</CTableDataCell>\n\n      <CTableDataCell>\n        <CTooltip content=\"Delete\">\n          <CButton\n            color=\"danger\"\n            variant=\"outline\"\n            style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n            className=\"ms-2\"\n            onClick={() => setShowModal(true)}\n          >\n            <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n          </CButton>\n        </CTooltip>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={deleteSingleNewsLetter}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={review?._id}\n        deleteLoading={isLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default NewsLetterTableRow;\n","import {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useLocation } from \"react-router-dom\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport PaginationButton from \"src/ui/pagination/Pagination\";\nimport NewsLetterTableRow from \"./NewsLetterTableRow\";\nimport { useGetAllNewsLetterQuery } from \"src/redux/all-newsletter/newsLetterApi\";\n\nconst AllNewsLetter = () => {\n  // get all reviews hook -> admin\n  const location = useLocation();\n  const { data: AllNewsLetter, isLoading, isError } = useGetAllNewsLetterQuery(location.search);\n  // checking loading/error/data\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p className=\"text-danger\">There is something wrong</p>;\n  }\n  if (!isLoading && !isError && AllNewsLetter?.result?.data?.length === 0) {\n    content = <p className=\"fw-4\">There is no reviews</p>;\n  }\n  if (!isLoading && !isError && AllNewsLetter?.result?.data?.length > 0) {\n    content = AllNewsLetter?.result?.data?.map((review, index) => (\n      <NewsLetterTableRow key={review?._id} review={review} index={index} />\n    ));\n  }\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CardHeaderButton title={\"All subscriber\"} />\n          <CCardBody>\n            <span>Here is all subscribers</span>\n            <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n              <CTableHead color=\"light\">\n                <CTableRow className=\"text-start\">\n                  <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                    Sl. No.\n                  </CTableHeaderCell>\n\n                  <CTableHeaderCell scope=\"col\">email</CTableHeaderCell>\n\n                  <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                  <CTableHeaderCell\n                    scope=\"col\"\n                    style={{\n                      width: \"50px\",\n                      minWidth: \"50px\",\n                    }}\n                  >\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>{content}</CTableBody>\n            </CTable>\n            <PaginationButton\n              searchUrl={location.search}\n              totalPageNumber={AllNewsLetter?.result?.totalPageNumber}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default AllNewsLetter;\n"],"names":["apiSlice","require","reviewsApi","injectEndpoints","tagTypes","endpoints","builder","getAllReviews","query","url","concat","method","providesTags","getTotalReviews","getTotalReviewsByMonth","deleteSingleReview","mutation","id","invalidatesTags","useGetAllReviewsQuery","useDeleteSingleReviewMutation","useGetTotalReviewsQuery","useGetTotalReviewsByMonthQuery","_ref","totalPageNumber","searchUrl","currentPage","setCurrentPage","useState","navigate","useNavigate","handlePage","page","setUrlParams","toString","pageNumber","Array","from","length","v","k","items","number","push","_jsx","Pagination","Item","active","onClick","children","className","_jsxs","size","Prev","Next","Last","paramName","valueOfParam","queryParams","split","paramUpdated","i","param","join","Set","NewsLetterApi","getAllNewsLetter","deleteSingleNewsLetter","useGetAllNewsLetterQuery","useDeleteSingleNewsLetterMutation","review","index","showModal","setShowModal","isLoading","isError","isSuccess","useEffect","toast","success","error","CTableRow","CTableHeaderCell","scope","CTableDataCell","email","Date","createdAt","toLocaleDateString","CTooltip","content","CButton","color","variant","style","height","width","position","CIcon","icon","cilTrash","top","left","DeleteModal","deleteThis","_id","deleteLoading","AllNewsLetter","_AllNewsLetter$result","_AllNewsLetter$result2","_AllNewsLetter$result3","_AllNewsLetter$result4","_AllNewsLetter$result7","location","useLocation","data","search","_AllNewsLetter$result5","_AllNewsLetter$result6","result","map","NewsLetterTableRow","CRow","CCol","xs","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody","PaginationButton"],"sourceRoot":""}