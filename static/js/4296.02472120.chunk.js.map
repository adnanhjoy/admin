{"version":3,"file":"static/js/4296.02472120.chunk.js","mappings":"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","sources":["components/products/data.js","redux/banner/bannerApi.js","redux/subCategoryChildren/subCategoryChildrenApi.js","redux/subCategory/subCategoryApi.js","ui/ImageLabel.jsx","ui/banner/AddBannerParentForm.jsx","utils/spaceToDash.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nexport const getModifiedCategories = (categories) => {\n  return categories?.map((item) => {\n    // this field for related products and manufacturer\n\n    if (item?.subcategory?.parent?.title) {\n      // this filed for subCategoriesChildren\n      return {\n        value: {\n          _id: item?._id,\n          name: item?.title,\n        },\n        label: item?.title,\n      };\n    }\n    if (item?.parent?.title) {\n      // this filed for subCategories\n\n      return {\n        value: { _id: item?._id, name: item?.title },\n        label: item?.title,\n      };\n    }\n    if (item?.title) {\n      // this filed for categories\n\n      return {\n        value: { _id: item?._id, name: item?.title ? item?.title : item?.name },\n        label: item?.title ? item?.title : item?.name,\n      };\n    }\n    if (item?.price) {\n      // this filed for size, colors\n      return {\n        value: item?._id,\n        label: item?.name,\n      };\n    }\n\n    \n    if (item?.name) {\n      // this filed for size, colors\n      return {\n        value: { _id: item?._id, name: item?.name },\n        label: item?.name,\n      };\n    }\n\n    return {\n      value: { _id: item?._id, name: item?.title ? item?.title : item?.name },\n      label: item?.title ? item?.title : item?.name,\n    };\n  });\n};\n\nexport const getDefaultData = (data) => {\n  const categoriesDefaultData = [];\n  data?.forEach((d) => {\n    categoriesDefaultData.push({ value: d, label: d.name });\n  });\n  return categoriesDefaultData;\n};\n\nexport const getModifiedManufactures = (categories) => {\n  const options = [{ label: \"Pick one\", value: null }];\n  categories?.forEach((item) => {\n    options.push({\n      value: item?._id,\n      label: item?.title ? item?.title : item?.name,\n    });\n  });\n\n  return options;\n};\n","/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const bannerApi = apiSlice.injectEndpoints({\n  tagTypes: [\n    \"AllDesktopBanner\",\n    \"AllRelatedBanner\",\n    \"SingleRelatedBanner\",\n    \"AllTopBanner\",\n    \"SingleDesktopBanner\",\n    \"BottomBanner\",\n    \"SingleTopBanner\",\n    \"SingleBottomBanner\",\n  ],\n  endpoints: (builder) => ({\n    //get all  desktopBanner\n    getDesktopAllBanner: builder.query({\n      query: () => ({\n        url: `/desktopBanner`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllDesktopBanner\"],\n    }),\n\n    //get all  desktopBanner\n    getAllBannerName: builder.query({\n      query: () => ({\n        url: `/desktopBanner/allBannerName`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all  desktopBanner\n    getSingleDesktopBanner: builder.query({\n      query: (id) => ({\n        url: `/desktopBanner/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleDesktopBanner\"],\n    }),\n    //delete desktop banner\n    deleteDesktopBanner: builder.mutation({\n      query: (id) => ({\n        url: `/desktopBanner/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllDesktopBanner\"],\n    }),\n\n    //add  desktop banner\n    addDesktopBanner: builder.mutation({\n      query: (formData) => ({\n        url: `/desktopBanner`,\n        method: \"POST\",\n        body: formData,\n      }),\n      invalidatesTags: [\"AllDesktopBanner\"],\n    }),\n\n    //add  desktop banner\n    updateDesktopBanner: builder.mutation({\n      query: ({ formData, id }) => ({\n        url: `/desktopBanner/${id}`,\n        method: \"PUT\",\n        body: formData,\n      }),\n      invalidatesTags: [\"SingleDesktopBanner\", \"AllDesktopBanner\"],\n    }),\n\n    //:::::::::::::::::::::: Related banner ::::::::::::::::::::::::::\n\n    //get category by id\n    getRelatedAllBanner: builder.query({\n      query: () => ({\n        url: `/relatedBanner`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllRelatedBanner\"],\n    }),\n\n    //get single top banner\n    getRelatedBanner: builder.query({\n      query: (id) => ({\n        url: `/relatedBanner/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleRelatedBanner\"],\n    }),\n\n    //delete desktop banner\n    deleteRelatedBanner: builder.mutation({\n      query: (id) => ({\n        url: `/relatedBanner/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllRelatedBanner\"],\n    }),\n\n    //add  Related banner\n    addRelatedBanner: builder.mutation({\n      query: (formData) => ({\n        url: `/relatedBanner`,\n        method: \"POST\",\n        body: formData,\n      }),\n      invalidatesTags: [\"AllRelatedBanner\"],\n    }),\n\n    //update  related banner\n    updateRelatedBanner: builder.mutation({\n      query: ({ formData, id }) => ({\n        url: `/relatedBanner/${id}`,\n        method: \"PUT\",\n        body: formData,\n      }),\n      invalidatesTags: [\"SingleRelatedBanner\", \"AllRelatedBanner\"],\n    }),\n    //:::::::::::::::::::::: top banner ::::::::::::::::::::::::::\n\n    //get all top banner\n    getSideAllBanner: builder.query({\n      query: () => ({\n        url: `/sideBanner`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllTopBanner\"],\n    }),\n\n    //get single top banner\n    getSideBanner: builder.query({\n      query: (id) => ({\n        url: `/sideBanner/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleTopBanner\"],\n    }),\n\n    //update  top banner\n    updateSideBanner: builder.mutation({\n      query: ({ formData, id }) => ({\n        url: `/sideBanner/${id}`,\n        method: \"PUT\",\n        body: formData,\n      }),\n      invalidatesTags: [\"SingleTopBanner\", \"AllTopBanner\"],\n    }),\n\n    //delete top banner\n    deleteSideBanner: builder.mutation({\n      query: (id) => ({\n        url: `/sideBanner/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllTopBanner\"],\n    }),\n\n    //add  top banner\n    addSideBanner: builder.mutation({\n      query: (formData) => ({\n        url: `/sideBanner`,\n        method: \"POST\",\n        body: formData,\n      }),\n      invalidatesTags: [\"AllTopBanner\"],\n    }),\n\n    //:::::::::::::::::::::: bottom banner ::::::::::::::::::::::::::\n\n    //get all bottom banner\n    getBottomAllBanner: builder.query({\n      query: () => ({\n        url: `/bottomBanner`,\n        method: \"GET\",\n      }),\n      providesTags: [\"BottomBanner\"],\n    }),\n\n    //get single bottom banner\n    getSingleBottomBanner: builder.query({\n      query: (id) => ({\n        url: `/bottomBanner/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleBottomBanner\"],\n    }),\n\n    //delete bottom banner\n    deleteBottomBanner: builder.mutation({\n      query: (id) => ({\n        url: `/bottomBanner/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"BottomBanner\"],\n    }),\n\n    //add  bottom banner\n    addBottomBanner: builder.mutation({\n      query: (formData) => ({\n        url: `/bottomBanner`,\n        method: \"POST\",\n        body: formData,\n      }),\n      invalidatesTags: [\"BottomBanner\"],\n    }),\n\n    //update  bottom banner\n    updateBottomBanner: builder.mutation({\n      query: ({ formData, id }) => ({\n        url: `/bottomBanner/${id}`,\n        method: \"PUT\",\n        body: formData,\n      }),\n      invalidatesTags: [\"SingleBottomBanner\", \"BottomBanner\"],\n    }),\n  }),\n});\n\nexport const {\n  // Desktop Banner :::::::::::::::\n  useGetDesktopAllBannerQuery,\n  useGetSingleDesktopBannerQuery,\n  useDeleteDesktopBannerMutation,\n  useAddDesktopBannerMutation,\n  useUpdateDesktopBannerMutation,\n  useGetAllBannerNameQuery,\n\n  // Related banner ::::::::::::::::\n  useGetRelatedAllBannerQuery,\n  useGetRelatedBannerQuery,\n  useDeleteRelatedBannerMutation,\n  useUpdateRelatedBannerMutation,\n  useAddRelatedBannerMutation,\n\n  // top banner :::::::::::::::::\n  useDeleteSideBannerMutation,\n  useGetSideBannerQuery,\n  useGetSideAllBannerQuery,\n  useAddSideBannerMutation,\n  useUpdateSideBannerMutation,\n\n  // bottom banner :::::::::::::::\n  useGetBottomAllBannerQuery,\n  useGetSingleBottomBannerQuery,\n  useDeleteBottomBannerMutation,\n  useAddBottomBannerMutation,\n  useUpdateBottomBannerMutation,\n} = bannerApi;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const subCategoryChildrenApi = apiSlice.injectEndpoints({\n  tagTypes: [\"SubCategoryChildren\", \"SingleSubCategoryChildren\", \"SubCategoryChildLimit\"],\n  endpoints: (builder) => ({\n    // get all subcategory children\n    getAllSubCategoryChildren: builder.query({\n      query: () => ({\n        url: `/subcategory-children`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategoryChildren\"],\n    }),\n\n    // get all subcategory children\n    getFilterSubCategoryChildren: builder.query({\n      query: (selectedSubCategory) => ({\n        url: `/subcategory-children/filter?${selectedSubCategory}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategoryChildren\"],\n    }),\n\n    // get all subcategory children\n    getAllSubCategoryChildrenByPage: builder.query({\n      query: (page) => ({\n        url: `/subcategory-children/limit${page}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategoryChildLimit\"],\n    }),\n\n    // get single subcategory children by id\n    getSingleSubCategoryChildren: builder.query({\n      query: (id) => ({\n        url: `/subcategory-children/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleSubCategoryChildren\"],\n    }),\n\n    // add new subcategory child\n    addSubCategoryChildren: builder.mutation({\n      query: (data) => ({\n        url: `/subcategory-children`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategoryChildLimit\"],\n    }),\n\n    // update subcategory child by id\n    updateSubCategoryChildren: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/subcategory-children/${id}`,\n        method: \"PUT\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\n        \"SubCategoryChildren\",\n        \"SingleSubCategoryChildren\",\n        \"SubCategoryChildLimit\",\n      ],\n    }),\n\n    // delete subcategory child by id\n    deleteSubCategoryChildren: builder.mutation({\n      query: (id) => ({\n        url: `/subcategory-children/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategoryChildLimit\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllSubCategoryChildrenQuery,\n  useGetFilterSubCategoryChildrenQuery,\n  useGetAllSubCategoryChildrenByPageQuery,\n  useDeleteSubCategoryChildrenMutation,\n  useAddSubCategoryChildrenMutation,\n  useUpdateSubCategoryChildrenMutation,\n  useGetSingleSubCategoryChildrenQuery,\n} = subCategoryChildrenApi;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const subCategoryApi = apiSlice.injectEndpoints({\n  tagTypes: [\"SubCategory\", \"SingleSubCategory\"],\n  endpoints: (builder) => ({\n    // get all subcategory\n    getAllSubCategory: builder.query({\n      query: () => ({\n        url: `/subcategory`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n    // get all subcategory\n    getFilterSubCategory: builder.query({\n      query: (subCategory) => ({\n        url: `/subcategory/filter?${subCategory}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n\n    // get single subcategory by id\n    getSingleSubCategory: builder.query({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"SubCategory\"],\n      providesTags: [\"SingleSubCategory\"],\n    }),\n\n    // add new subcategory\n    addSubCategory: builder.mutation({\n      query: (data) => ({\n        url: `/subcategory`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n\n    // update subcategory by id\n    updateSubCategory: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/subcategory/${id}`,\n        method: \"PUT\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\", \"SingleSubCategory\"],\n    }),\n\n    // delete subcategory by id\n    deleteSubCategory: builder.mutation({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllSubCategoryQuery,\n  useGetFilterSubCategoryQuery,\n  useDeleteSubCategoryMutation,\n  useAddSubCategoryMutation,\n  useUpdateSubCategoryMutation,\n  useGetSingleSubCategoryQuery,\n} = subCategoryApi;\n","import React from \"react\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\n\nconst ImageLabel = ({ sizes }) => {\n  return (\n    <div className=\"d-flex mt-4 justify-content-center\">\n      <label\n        htmlFor=\"file-upload\"\n        className=\"d-flex flex-column align-items-center border justify-content-center\"\n        style={{ height: \"180px\", width: \"360px\", display: \"block\", cursor: \"pointer\" }}\n      >\n        <FaCloudUploadAlt size={35} style={{ color: \"green\" }} />\n        <p\n          style={{\n            color: \"#0CB363\",\n            fontWeight: \"bold\",\n            marginBottom: \"0px\",\n            fontSize: \"1rem\",\n          }}\n        >\n          Choose file to upload\n        </p>\n        <span style={{ color: \"#ccc\" }}>Allowed JPG, JPEG, PNG and GIF</span>\n        <span style={{ color: \"#ccc\" }}>\n          File must be less than <span style={{ color: \"#afafaf\" }}>2 MB</span>\n        </span>\n        <span style={{ color: \"#0CB363\" }}>Size: {sizes}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default ImageLabel;\n","/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CRow,\n} from \"@coreui/react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { getDefaultData, getModifiedCategories } from \"src/components/products/data\";\nimport Select from \"react-select\";\nimport { useGetAllCategoryQuery } from \"src/redux/category/categoryApi\";\nimport Loading from \"../Loading\";\nimport { Button, Form, Image } from \"react-bootstrap\";\nimport CancelButton from \"../button/CancelButton\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useGetFilterSubCategoryQuery,\n} from \"src/redux/subCategory/subCategoryApi\";\nimport {\n  useGetFilterSubCategoryChildrenQuery,\n} from \"src/redux/subCategoryChildren/subCategoryChildrenApi\";\nimport { useGetAllBannerNameQuery } from \"src/redux/banner/bannerApi\";\nimport ImageLabel from \"../ImageLabel\";\nimport { SketchPicker } from \"react-color\";\nimport HeaderBackButton from \"../button/HeaderBackButton\";\nimport { spaceToDash } from \"src/utils/spaceToDash\";\nimport { useGetAllProductQuery } from \"src/redux/products/productsApi\";\nimport { useLocation } from \"react-router-dom\";\n\nconst AddBannerParent = ({\n  bannerData,\n  addLoading,\n  onSubmit,\n  title,\n  isRelatedBanner,\n  selectedOption,\n  setSelectedOption,\n  bannerSize,\n  desktopBanner,\n  color,\n  setColor,\n  slugValue,\n  setSlugValue\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedSubCategory, setSelectedSubCategory] = useState(\"\");\n  const [defaultSlug, setDefaultSlug] = useState(\"\");\n  const location = useLocation()\n\n  const { data: categories, isLoading } = useGetAllCategoryQuery();\n  const { data: subcategories } = useGetFilterSubCategoryQuery(selectedCategory);\n  const { data: subcategoriesChildren } = useGetFilterSubCategoryChildrenQuery(selectedSubCategory);\n  const { data: allProducts } = useGetAllProductQuery(location.search);\n  const { data: allBannerName } = useGetAllBannerNameQuery();\n\n  const { handleSubmit, register, control, errors } = useForm();\n  const [selectedField, setSelectedFiled] = useState(bannerData?.related || \"category\");\n\n  const [imagePreview, setImagePreview] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (bannerData) {\n      setSelectedFiled(bannerData.related);\n      setColor && setColor(bannerData?.bannerColor);\n    }\n    if (isRelatedBanner) {\n      setSelectedOption(bannerData?.relatedBannerName);\n    }\n    setDefaultSlug(bannerData?.name)\n  }, [bannerData?.related]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  const modifiedCategories = getModifiedCategories(categories?.result);\n  const modifiedSubCategories = getModifiedCategories(subcategories?.result);\n  const modifiedSubCategoryChildren = getModifiedCategories(subcategoriesChildren?.result);\n  const productOptions = getModifiedCategories(allProducts?.result?.data);\n\n  // banner data\n  const relatedOptions = [];\n  allBannerName?.data?.forEach((t) => {\n    relatedOptions.push({ label: t.name, value: t.name });\n  });\n\n  function handleFileChange(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      setError(\"File size should be less than 2MB\");\n      setImagePreview(null);\n    } else {\n      setImagePreview(URL.createObjectURL(file));\n      setError(null);\n    }\n  }\n\n  const handleChangeComplete = (newColor) => {\n    setColor(newColor.hex);\n  };\n\n  const handleCategoryChange = (selectedOptions) => {\n    setSelectedCategory(selectedOptions);\n    setSelectedSubCategory(\"\");\n  };\n\n  const handleSubCategoryChange = (selectedOptions) => {\n    setSelectedSubCategory(selectedOptions);\n  };\n\n  \nconsole.log('allProducts',productOptions)\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <HeaderBackButton title={title} />\n          <CCardBody>\n            <CForm encType=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\n              <CCol xs={12}>\n                <label className=\"mb-2\">\n                  Banner Title <span className=\"text-danger\">*</span>\n                </label>\n                <CFormInput\n                  defaultValue={bannerData?.name}\n                  placeholder=\"Enter banner title\"\n                  type=\"text\"\n                  {...register(\"name\", { required: bannerData ? false : true })}\n                  onFocus={(e) => setDefaultSlug(e.target.value)}\n                  onChange={(e) => setDefaultSlug(e.target.value)}\n                />\n                {errors?.name && <p className=\"text-danger\">Name is required</p>}\n              </CCol>\n              <CRow className=\"mt-2\">\n                <CCol md={11}>\n                  <label className=\"mb-2\">\n                    URL Slug <span className=\"text-danger\">*</span>\n                  </label>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"nameInputField\"\n                    placeholder=\"Enter Url slug\"\n                    aria-describedby=\"nameInputField\"\n                    required\n                    value={slugValue}\n                    onChange={(e) => setSlugValue(e.target.value)}\n                  />\n                </CCol>\n                <CCol style={{ marginTop: \"1.8rem\" }} md={1}>\n                  <Button\n                    className=\"p-1\"\n                    onClick={() => setSlugValue(spaceToDash(defaultSlug.toLocaleLowerCase()))}\n                  >\n                    Generate\n                  </Button>\n                </CCol>\n              </CRow>\n              <CCol xs={12}>\n                <label className=\"w-100\">Products</label>\n                <Controller\n                  control={control}\n                  name={\"campaignProducts\"}\n                  render={({ field: { onChange, value, name, ref } }) => (\n                    <Select\n                      className=\"mt-2\"\n                      // defaultValue={getDefaultData(size)}\n                      inputRef={ref}\n                      options={productOptions}\n                      value={productOptions?.find((option) => option.value === value)}\n                      onChange={(val) => onChange(val?.map((opt) => opt.value))}\n                      isMulti\n                    />\n                  )}\n                />\n              </CCol>\n              <CRow>\n                {isRelatedBanner && (\n                  <CCol xs={12}>\n                    <label className=\"mb-2\">\n                      Select Related Banner <span className=\"text-danger\">*</span>\n                    </label>\n                    <CFormSelect\n                      aria-label=\"Selection Field\"\n                      value={selectedOption}\n                      onChange={(e) => setSelectedOption(e.target.value)}\n                      required\n                      options={relatedOptions}\n                    />\n                  </CCol>\n                )}\n                <CCol xs={12}>\n                  <label>Banner Image</label>\n                  <ImageLabel sizes={bannerSize} />\n                  <CFormInput\n                    type=\"file\"\n                    id=\"file-upload\"\n                    accept=\".jpg, .png, .jpeg, .gif\"\n                    aria-describedby=\"file-upload\"\n                    style={{\n                      border: \"none\",\n                      outline: \"none\",\n                      backgroundColor: \"transparent\",\n                      color: \"transparent\",\n                      width: \"0.1px\",\n                      height: \"0.1px\",\n                      overflow: \"hidden\",\n                      position: \"absolute\",\n                      zIndex: \"-1\",\n                    }}\n                    {...register(\"image\", {\n                      required: {\n                        value: bannerData ? false : true,\n                        // value: false,\n                        message: \"Image is required\",\n                      },\n                    })}\n                    onChange={(e) => handleFileChange(e)}\n                  />\n                  {error && <p style={{ color: \"red\" }}>{error}</p>}\n                  {imagePreview && (\n                    <Image\n                      fluid\n                      className=\"my-2\"\n                      height={300}\n                      src={imagePreview}\n                      alt=\"Preview Image\"\n                    />\n                  )}\n                  <br />\n                  {bannerData?.image && (\n                    <Image fluid className=\"my-2\" height={300} src={bannerData?.image} />\n                  )}\n                </CCol>\n\n                {/* if need then putting the comment code below */}\n\n\n              </CRow>\n              <div className=\"text-end\">\n                <CancelButton />\n                <CButton\n                  type={error ? \"button\" : \"submit\"}\n                  color=\"success\"\n                  className=\"mt-3 text-white\"\n                >\n                  {addLoading ? (\n                    \"Loading\"\n                  ) : (\n                    <>\n                      <CIcon icon={cilSave} className=\"me-2\" />\n                      Save\n                    </>\n                  )}\n                </CButton>\n              </div>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default AddBannerParent;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// {desktopBanner && (\n//   <CCol className=\"mt-2\" xs={12}>\n//     <label className=\"mb-2\">\n//       Banner Color <span className=\"text-danger\">*</span>\n//     </label>\n//     <SketchPicker\n//       width=\"350px\"\n//       color={color}\n//       onChangeComplete={handleChangeComplete}\n\n//     />\n//     <p className=\"mt-2\" style={{ color: `${color}` }}>\n//       Selected color: {color}\n//     </p>\n//   </CCol>\n// )}\n// <CCol className=\"mb-4\" xs={12}>\n//   <label className=\"w-100 mt-2\">\n//     Select Filed To Make Dynamic Link <span className=\"text-danger\">*</span>\n//   </label>\n//   <Form.Check\n//     inline\n//     label=\"Category\"\n//     name=\"group1\"\n//     value={\"category\"}\n//     type={\"radio\"}\n//     onClick={() => setSelectedFiled(\"category\")}\n//     checked={selectedField === \"category\"}\n//     id={`inline-1`}\n//     {...register(\"related\", {})}\n//   />\n//   <Form.Check\n//     inline\n//     label=\"Products\"\n//     name=\"group1\"\n//     value={\"product\"}\n//     onClick={() => setSelectedFiled(\"product\")}\n//     checked={selectedField === \"product\"}\n//     type={\"radio\"}\n//     id={`inline-2`}\n//     {...register(\"related\", {})}\n//   />\n// </CCol>\n// <CCol xs={12}>\n//   {selectedField === \"category\" && (\n//     <div>\n//       <label>Category </label>\n//       <Controller\n//         control={control}\n//         name={\"categories\"}\n//         rules={{\n//           required: bannerData ? false : true,\n//         }}\n//         render={({ field: { onChange, value, name, ref } }) => (\n//           <Select\n//             className=\"mt-2\"\n//             defaultValue={getDefaultData(bannerData?.categories)}\n//             inputRef={ref}\n//             options={modifiedCategories}\n//             value={modifiedCategories?.find((option) => option.value === value)}\n//             onChange={(selectedOptions) => {\n//               onChange(selectedOptions);\n//               handleCategoryChange(selectedOptions.value._id);\n//             }}\n//           />\n//         )}\n//       />\n//     </div>\n//   )}\n//   {selectedField === \"category\" && (\n//     <>\n//       <label>Sub Category</label>\n\n//       <Controller\n//         control={control}\n//         name={\"subCategories\"}\n//         // rules={{\n//         //   required: bannerData ? false : true,\n//         // }}\n//         render={({ field: { onChange, value, name, ref } }) => (\n//           <Select\n//             className=\"mt-2\"\n//             defaultValue={getDefaultData(bannerData?.subCategories)}\n//             inputRef={ref}\n//             isDisabled={!selectedCategory}\n//             options={modifiedSubCategories}\n//             value={modifiedSubCategories?.find((option) => option.value === value)}\n//             onChange={(selectedOptions) => {\n//               onChange(selectedOptions);\n//               handleSubCategoryChange(selectedOptions.value._id);\n//             }}\n//           />\n//         )}\n//       />\n//     </>\n//   )}\n//   {selectedField === \"category\" && (\n//     <>\n//       <label>Sub Category Children</label>\n\n//       <Controller\n//         control={control}\n//         name={\"subCategoryChildren\"}\n//         // rules={{\n//         //   required: bannerData ? false : true,\n//         // }}\n//         render={({ field: { onChange, value, name, ref } }) => (\n//           <Select\n//             className=\"mt-2\"\n//             defaultValue={getDefaultData(bannerData?.subCategoryChildren)}\n//             inputRef={ref}\n//             isDisabled={!selectedSubCategory}\n//             options={modifiedSubCategoryChildren}\n//             value={modifiedSubCategoryChildren?.find(\n//               (option) => option.value === value,\n//             )}\n//             onChange={(selectedOptions) => {\n//               onChange(selectedOptions);\n//             }}\n//           />\n//         )}\n//       />\n//     </>\n//   )}\n//   {selectedField === \"product\" && (\n//     <>\n//       <label className=\"mb-2\">\n//         Product URL Slug <span className=\"text-danger\">*</span>\n//       </label>\n//       <CFormInput\n//         placeholder=\"Enter product url slug\"\n//         defaultValue={bannerData?.product}\n//         type=\"text\"\n//         {...register(\"product\", {})}\n//       />\n//     </>\n//   )}\n// </CCol>\n","export const spaceToDash = (productName) => {\n  // Replace \"%20\" with \"-\"\n  const formattedProductName = productName\n    .replace(/'/g, '')\n    .replace(/&/g, 'and')\n    .replace(/\"/g, '')\n    .replace(/,/g, '')\n    .replace(/:/g, '')\n    ?.replace(/\\s/g, \"-\");\n\n  return formattedProductName;\n};\n"],"names":["getModifiedCategories","categories","map","item","_item$subcategory","_item$subcategory$par","_item$parent","subcategory","parent","title","value","_id","name","label","price","getDefaultData","data","categoriesDefaultData","forEach","d","push","getModifiedManufactures","options","bannerApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getDesktopAllBanner","query","url","method","providesTags","getAllBannerName","getSingleDesktopBanner","id","concat","deleteDesktopBanner","mutation","invalidatesTags","addDesktopBanner","formData","body","updateDesktopBanner","_ref","getRelatedAllBanner","getRelatedBanner","deleteRelatedBanner","addRelatedBanner","updateRelatedBanner","_ref2","getSideAllBanner","getSideBanner","updateSideBanner","_ref3","deleteSideBanner","addSideBanner","getBottomAllBanner","getSingleBottomBanner","deleteBottomBanner","addBottomBanner","updateBottomBanner","_ref4","useGetDesktopAllBannerQuery","useGetSingleDesktopBannerQuery","useDeleteDesktopBannerMutation","useAddDesktopBannerMutation","useUpdateDesktopBannerMutation","useGetAllBannerNameQuery","useGetRelatedAllBannerQuery","useGetRelatedBannerQuery","useDeleteRelatedBannerMutation","useUpdateRelatedBannerMutation","useAddRelatedBannerMutation","useDeleteSideBannerMutation","useGetSideBannerQuery","useGetSideAllBannerQuery","useAddSideBannerMutation","useUpdateSideBannerMutation","useGetBottomAllBannerQuery","useGetSingleBottomBannerQuery","useDeleteBottomBannerMutation","useAddBottomBannerMutation","useUpdateBottomBannerMutation","subCategoryChildrenApi","getAllSubCategoryChildren","getFilterSubCategoryChildren","selectedSubCategory","getAllSubCategoryChildrenByPage","page","getSingleSubCategoryChildren","addSubCategoryChildren","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","updateSubCategoryChildren","deleteSubCategoryChildren","useGetAllSubCategoryChildrenQuery","useGetFilterSubCategoryChildrenQuery","useGetAllSubCategoryChildrenByPageQuery","useDeleteSubCategoryChildrenMutation","useAddSubCategoryChildrenMutation","useUpdateSubCategoryChildrenMutation","useGetSingleSubCategoryChildrenQuery","subCategoryApi","getAllSubCategory","getFilterSubCategory","subCategory","getSingleSubCategory","addSubCategory","updateSubCategory","deleteSubCategory","useGetAllSubCategoryQuery","useGetFilterSubCategoryQuery","useDeleteSubCategoryMutation","useAddSubCategoryMutation","useUpdateSubCategoryMutation","useGetSingleSubCategoryQuery","sizes","_jsx","className","children","_jsxs","htmlFor","style","height","width","display","cursor","FaCloudUploadAlt","size","color","fontWeight","marginBottom","fontSize","_allProducts$result","_allBannerName$data","bannerData","addLoading","onSubmit","isRelatedBanner","selectedOption","setSelectedOption","bannerSize","desktopBanner","setColor","slugValue","setSlugValue","selectedCategory","setSelectedCategory","useState","setSelectedSubCategory","defaultSlug","setDefaultSlug","location","useLocation","isLoading","useGetAllCategoryQuery","subcategories","subcategoriesChildren","allProducts","useGetAllProductQuery","search","allBannerName","handleSubmit","register","control","errors","useForm","selectedField","setSelectedFiled","related","imagePreview","setImagePreview","error","setError","useEffect","bannerColor","relatedBannerName","Loading","result","productOptions","relatedOptions","t","console","log","CRow","CCol","xs","CCard","HeaderBackButton","CCardBody","CForm","encType","CFormInput","defaultValue","placeholder","type","required","onFocus","e","target","onChange","md","marginTop","Button","onClick","spaceToDash","toLocaleLowerCase","Controller","render","field","ref","Select","inputRef","find","option","val","opt","isMulti","CFormSelect","ImageLabel","accept","border","outline","backgroundColor","overflow","position","zIndex","message","event","file","files","URL","createObjectURL","handleFileChange","Image","fluid","src","alt","image","CancelButton","CButton","_Fragment","CIcon","icon","cilSave","productName","_productName$replace$","replace"],"sourceRoot":""}