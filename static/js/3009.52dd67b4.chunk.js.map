{"version":3,"file":"static/js/3009.52dd67b4.chunk.js","mappings":"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","sources":["redux/variants/variantsApi.js","views/color/AddColor.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const variantApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllColor\", \"SingleColor\", \"AllColor\", \"SingleSize\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllColor: builder.query({\n      query: () => ({\n        url: `/color`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllColor\"],\n    }),\n\n    //get single  users\n    getSingleColor: builder.query({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleColor\"],\n    }),\n\n    // delete users by id\n    deleteSingleColor: builder.mutation({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    // delete users by id\n    updateSingleColor: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/color/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\", \"SingleColor\"],\n    }),\n    // delete users by id\n    addSingleColor: builder.mutation({\n      query: (data) => ({\n        url: `/color`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    //:::::::::::::::::::::::: size api :::::::::::::::::::::::::://\n    getAllSize: builder.query({\n      query: () => ({\n        url: `/size`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllSize\"],\n    }),\n\n    //get single  users\n    getSingleSize: builder.query({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleSize\"],\n    }),\n\n    // delete users by id\n    deleteSingleSize: builder.mutation({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n\n    // delete users by id\n    updateSingleSize: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/size/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\", \"SingleSize\"],\n    }),\n    // delete users by id\n    addSingleSize: builder.mutation({\n      query: (data) => ({\n        url: `/size`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllColorQuery,\n  useGetSingleColorQuery,\n  useDeleteSingleColorMutation,\n  useAddSingleColorMutation,\n  useUpdateSingleColorMutation,\n\n  useGetAllSizeQuery,\n  useGetSingleSizeQuery,\n  useDeleteSingleSizeMutation,\n  useAddSingleSizeMutation,\n  useUpdateSingleSizeMutation,\n} = variantApi;\n","/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CForm, CFormInput } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  useAddSingleColorMutation,\n  useGetSingleColorQuery,\n  useUpdateSingleColorMutation,\n} from \"src/redux/variants/variantsApi\";\n\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\nimport Loading from \"src/ui/Loading\";\n\nconst AddColor = () => {\n  const [colorInput, setColorInput] = useState(\"\");\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const { handleSubmit } = useForm();\n  const navigate = useNavigate();\n  const [colorCode, setColorCode] = useState(\"\");\n\n  const {\n    data: color,\n    isLoading: getLoading,\n    isError: termError,\n    error: termErrorMsg,\n  } = useGetSingleColorQuery(id, { skip: haveId });\n\n  const [\n    addSingleColor,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddSingleColorMutation();\n\n  const [\n    updateSingleColor,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleColorMutation();\n\n  // update or add new term conditions\n  const onSubmit = () => {\n    if (id) {\n      const data = {\n        name: colorInput,\n        colorCode: colorCode,\n      };\n      updateSingleColor({ id, data });\n    } else {\n      addSingleColor({ name: colorInput, colorCode: colorCode });\n    }\n  };\n\n  //default data set\n  useEffect(() => {\n    if (color) {\n      setColorInput(color?.data?.name);\n      setColorCode(color?.data?.colorCode);\n    }\n  }, [color?.data]);\n\n  useEffect(() => {\n    addSuccess && toast.success(\"Successfully Added\");\n    addError && toast.error(addError?.data?.message);\n    updateSuccess && toast.success(\"Successfully Updated\");\n    updateError && toast.error(updateError?.data?.message);\n  }, [addSuccess, addError, updateSuccess, updateError]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [updateSuccess, addSuccess]);\n\n  const handleChangeComplete = (newColor) => {\n    setColorCode(newColor.hex);\n  };\n\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCard>\n        <HeaderBackButton title={id ? \"Update color\" : \"Add color\"} />\n\n        {getLoading ? (\n          <Loading />\n        ) : (\n          <CCardBody>\n            <CCol xs={12}>\n              <label className=\"w-100\">Color Name</label>\n              <CFormInput\n                type=\"text\"\n                id=\"titleInputField\"\n                placeholder=\"Enter color\"\n                aria-describedby=\"titleInputField\"\n                value={colorInput}\n                onChange={(e) => setColorInput(e.target.value)}\n              />\n            </CCol>\n            <CCol xs={12}>\n              <label className=\"mb-2\">\n                Color Code<span className=\"text-danger\">*</span>\n              </label>\n              <SketchPicker\n                width=\"350px\"\n                color={colorCode}\n                onChangeComplete={handleChangeComplete}\n              />\n              <p className=\"mt-2\" style={{ color: `${colorCode}` }}>\n                Selected color: {colorCode}\n              </p>\n            </CCol>\n            <div className=\"text-end  \">\n              <CancelButton />\n              <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n                <CIcon icon={cilSave} className=\"me-2\" />\n                {updateLoading || addLoading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n              </CButton>\n            </div>\n          </CCardBody>\n        )}\n      </CCard>\n    </CForm>\n  );\n};\n\nexport default AddColor;\n"],"names":["variantApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllColor","query","url","method","providesTags","getSingleColor","id","concat","deleteSingleColor","mutation","invalidatesTags","updateSingleColor","_ref","data","body","addSingleColor","getAllSize","getSingleSize","deleteSingleSize","updateSingleSize","_ref2","addSingleSize","useGetAllColorQuery","useGetSingleColorQuery","useDeleteSingleColorMutation","useAddSingleColorMutation","useUpdateSingleColorMutation","useGetAllSizeQuery","useGetSingleSizeQuery","useDeleteSingleSizeMutation","useAddSingleSizeMutation","useUpdateSingleSizeMutation","AddColor","colorInput","setColorInput","useState","haveId","setHaveId","useParams","handleSubmit","useForm","navigate","useNavigate","colorCode","setColorCode","color","isLoading","getLoading","isError","termError","error","termErrorMsg","skip","addLoading","addError","isSuccess","addSuccess","addMsg","updateLoading","updateError","updateSuccess","updateMsg","useEffect","_color$data","_color$data2","name","_addError$data","_updateError$data","toast","success","message","_jsx","CForm","onSubmit","children","_jsxs","CCard","HeaderBackButton","title","Loading","CCardBody","CCol","xs","className","CFormInput","type","placeholder","value","onChange","e","target","SketchPicker","width","onChangeComplete","newColor","hex","style","CancelButton","CButton","CIcon","icon","cilSave"],"sourceRoot":""}