{"version":3,"file":"static/js/1235.2aee77ad.chunk.js","mappings":"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","sources":["ui/SearchFieldForm.jsx","ui/pagination/Pagination.js","utils/setUrlParam.js","views/products/manage-products/ManageProducts.jsx","views/products/manage-products/ProductTableRow.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { cilSearch } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CRow } from \"@coreui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../src/scss/style.scss\";\n\n// eslint-disable-next-line prettier/prettier, react/prop-types\nconst SearchFieldForm = ({ onSubmit, tableData, isNavigate }) => {\n  const navigate = useNavigate();\n  const copiedTableData = [...tableData];\n  const { register, handleSubmit, reset } = useForm();\n\n  const handleClear = () => {\n    isNavigate && navigate(\".\");\n    reset();\n  };\n  return (\n    <div className=\"mx-3 px-3 mt-3 pb-3 border rounded\" style={{ backgroundColor: \"#f5f5f5\" }}>\n      <CForm onSubmit={handleSubmit(onSubmit)}>\n        <CRow>\n          {copiedTableData.map((data, index) => (\n            <CCol xs={4} key={index} className=\"mt-3\">\n              <CFormInput\n                type={data.type}\n                id=\"exampleFormControlInput1\"\n                label={data.name}\n                placeholder={data.name}\n                disabled={data.disabled}\n                aria-describedby=\"exampleFormControlInputHelpInline\"\n                {...register(data.register)}\n              />\n            </CCol>\n          ))}\n        </CRow>\n        <div className=\"d-flex align-items-center justify-content-end mt-3 \">\n          <CButton className=\"me-2 text-white\" color=\"info\" onClick={() => handleClear()}>\n            Clear\n          </CButton>\n          <CButton color=\"info\" className=\" text-white me-2\" type=\"submit\">\n            <CIcon icon={cilSearch} style={{ width: \"12px\", height: \"12px\" }} /> Filter\n          </CButton>\n        </div>\n      </CForm>\n    </div>\n  );\n};\n\nexport default SearchFieldForm;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-loop-func */\nimport { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\n\nconst PaginationButton = ({ totalPageNumber, searchUrl }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n\n  const handlePage = (page) => {\n    setCurrentPage(page);\n    navigate(setUrlParams(searchUrl || \"?\", \"page\", page.toString()));\n  };\n  // calculate page number\n  let pageNumber = !totalPageNumber ? [] : Array.from({ length: totalPageNumber }, (v, k) => k + 1);\n\n  let items = [];\n\n  for (let number = 1; number <= pageNumber.length; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === currentPage}\n        onClick={() => handlePage(number)}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <div className=\"d-flex justify-content-end mt-4\">\n      <Pagination size=\"sm\">\n        {currentPage > 1 && <Pagination.Prev onClick={() => handlePage(currentPage - 1)} />}\n        {items}\n        {currentPage < totalPageNumber && (\n          <Pagination.Next onClick={() => handlePage(currentPage + 1)} />\n        )}\n        {totalPageNumber > 1 && <Pagination.Last onClick={() => handlePage(totalPageNumber)} />}\n      </Pagination>\n    </div>\n  );\n};\n\nexport default PaginationButton;\n","export const setUrlParams = (searchUrl, paramName, valueOfParam) => {\n  const queryParams = searchUrl.split(\"&\");\n  let paramUpdated = false;\n  for (let i = 0; i < queryParams.length; i++) {\n    const param = queryParams[i].split(\"=\");\n    if (param[0] === paramName) {\n      param[1] = valueOfParam;\n      queryParams[i] = param.join(\"=\");\n      paramUpdated = true;\n      break;\n    }\n  }\n  if (!paramUpdated) {\n    queryParams.push(`${paramName}=${valueOfParam}`); // replace\n  }\n  const abc = [...new Set(queryParams)];\n\n  const finalUrl = abc.join(\"&\");\n  return finalUrl;\n};\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useGetAllProductQuery } from \"src/redux/products/productsApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport Error from \"src/ui/error/Error\";\nimport Loading from \"src/ui/Loading\";\nimport PaginationButton from \"src/ui/pagination/Pagination\";\nimport SearchFieldForm from \"src/ui/SearchFieldForm\";\nimport ProductTableRow from \"./ProductTableRow\";\n\nconst ManageProducts = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    data: products,\n    isLoading: productsLoading,\n    isError: productsError,\n  } = useGetAllProductQuery(location.search);\n\n  let content = null;\n  if (productsLoading) {\n    content = <Loading />;\n  }\n  if (!productsLoading && productsError) {\n    content = <Error>There is something wrong</Error>;\n  }\n  if (!productsLoading && !productsError && products?.result?.data?.length === 0) {\n    content = <Error error={\"There is no products\"} />;\n  }\n\n  if (!productsLoading && !productsError && products?.result?.data?.length > 0) {\n    content = products?.result?.data?.map((product, index) => (\n      <ProductTableRow key={product?._id} product={product} index={index} />\n    ));\n  }\n\n  // table data for search input fields\n  const tableData = [\n    { name: \"Product Name\", register: \"name\", type: \"text\" },\n    { name: \"Price\", register: \"price\", type: \"text\" },\n    { name: \"Status\", register: \"status\", type: \"text\" },\n    { name: \"Model\", register: \"model\", type: \"text\" },\n    { name: \"Quantity\", register: \"quantity\", type: \"text\" },\n    { name: \"Date Added\", register: \"date\", type: \"date\" },\n  ];\n\n  // handle search\n  const handleSearch = (data) => {\n    let query = \"?\";\n    if (data.name) query += `search=${data.name.trim()}`;\n    if (data.price) query += `&price=${data.price.trim()}`;\n    if (data.status) query += `&status=${data.status.trim()}`;\n    if (data.model) query += `&model=${data.model.trim()}`;\n    if (data.quantity) query += `&quantity=${data.quantity.trim()}`;\n    if (data.date) query += `&date=${data.date.trim()}`;\n\n    navigate(query);\n  };\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CardHeaderButton title={\"All Products\"} to={\"/product/add\"} />\n            {/* search field */}\n            <SearchFieldForm onSubmit={handleSearch} tableData={tableData} isNavigate={true} />\n            <CCardBody>\n              <div>\n                <p className=\"text-medium-emphasis small\">Here is the list of all product.</p>\n              </div>\n              <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-center\">\n                    <CTableHeaderCell\n                      scope=\"col\"\n                      style={{\n                        paddingLeft: 0,\n                        paddingRight: 0,\n                      }}\n                    >\n                      Sl. No.\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"3rem\" }}>\n                      Photo\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"30rem\" }}>\n                      Name\n                    </CTableHeaderCell>\n                    {/* <CTableHeaderCell scope=\"col\">Model</CTableHeaderCell> */}\n                    <CTableHeaderCell scope=\"col\">Discount</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Stock Status</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Quantity</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Price</CTableHeaderCell>\n                    <CTableHeaderCell\n                      scope=\"col\"\n                      style={{\n                        width: \"100px\",\n                        minWidth: \"100px\",\n                      }}\n                    >\n                      Actions\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{content}</CTableBody>\n              </CTable>\n              <PaginationButton\n                search={location?.search}\n                totalPageNumber={products?.result?.totalPageNumber}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageProducts;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleProductMutation } from \"src/redux/products/productsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\nconst ProductTableRow = ({ product, index }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const [\n    deleteSingleProduct,\n    { isLoading: deleteLoading, isSuccess: deleteSuccess, isError: deleteError },\n  ] = useDeleteSingleProductMutation();\n\n  const handleDeleteProduct = (id) => {\n    deleteSingleProduct(id);\n  };\n\n  useEffect(() => {\n    deleteSuccess && toast.success(\"Product deleted successfully\");\n    deleteError && toast.error(\"Product deleted failed\");\n  }, [deleteSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableDataCell>\n        <img\n          src={product?.images?.[0]}\n          alt={product?.model}\n          style={{\n            height: \"2.5rem\",\n            width: \"2.5rem\",\n            borderRadius: \"0.25rem\",\n            objectFit: \"cover\",\n          }}\n          className=\"border\"\n        />\n      </CTableDataCell>\n      <CTableDataCell>{product?.name}</CTableDataCell>\n      {/* <CTableDataCell>{product?.model}</CTableDataCell> */}\n      <CTableDataCell>{product?.discountPercentage} %</CTableDataCell>\n      <CTableDataCell>{product.status}</CTableDataCell>\n      <CTableDataCell\n        className={`${\n          product.quantity <= 15 &&\n            \"text-danger\"\n        }`}\n      >\n        {product.quantity}\n      </CTableDataCell>\n      <CTableDataCell>৳{product.price}</CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/product/edit/${product?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteProduct}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={product._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default ProductTableRow;\n"],"names":["_ref","onSubmit","tableData","isNavigate","navigate","useNavigate","copiedTableData","register","handleSubmit","reset","useForm","_jsx","className","style","backgroundColor","children","_jsxs","CForm","CRow","map","data","index","CCol","xs","CFormInput","type","id","label","name","placeholder","disabled","CButton","color","onClick","CIcon","icon","cilSearch","width","height","totalPageNumber","searchUrl","currentPage","setCurrentPage","useState","handlePage","page","setUrlParams","toString","pageNumber","Array","from","length","v","k","items","number","push","Pagination","Item","active","size","Prev","Next","Last","paramName","valueOfParam","queryParams","split","paramUpdated","i","param","join","concat","Set","ManageProducts","_products$result","_products$result$data","_products$result2","_products$result2$dat","_products$result4","location","useLocation","products","isLoading","productsLoading","isError","productsError","useGetAllProductQuery","search","content","_products$result3","_products$result3$dat","Loading","Error","result","error","product","ProductTableRow","_id","_Fragment","CCard","CardHeaderButton","title","to","SearchFieldForm","query","trim","price","status","model","quantity","date","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","paddingLeft","paddingRight","minWidth","CTableBody","PaginationButton","_product$images","showModal","setShowModal","deleteSingleProduct","deleteLoading","isSuccess","deleteSuccess","deleteError","useDeleteSingleProductMutation","useEffect","toast","success","CTableDataCell","src","images","alt","borderRadius","objectFit","discountPercentage","Link","EditButton","DeleteButton","DeleteModal","deleteThis"],"sourceRoot":""}