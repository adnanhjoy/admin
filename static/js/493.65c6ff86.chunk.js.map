{"version":3,"file":"static/js/493.65c6ff86.chunk.js","mappings":"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","sources":["redux/auth/authApi.js","views/pages/login/Login.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable no-labels */\nimport { apiSlice } from \"../api/apiSlice\";\nimport { adminLoggedIn } from \"./authSlice\";\n\nexport const authApi = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n\n    // ::::::::::::::::::: ADMIN LOGIN METHOD ::::::::::::::::::::\n    login: builder.mutation({\n      query: (data) => ({\n        url: `/admin/login`,\n        method: \"POST\",\n        body: data,\n      }),\n\n      // when user loggedin then you set some info on localStorage and redux store\n      async onQueryStarted(arg, { dispatch, queryFulfilled }) {\n        try {\n          const result = await queryFulfilled;\n\n          localStorage.setItem(\n            \"auth\",\n            JSON.stringify({\n              accessToken: result?.data?.token,\n              email: result?.data?.email,\n              role: result?.data?.role,\n            }),\n          );\n\n          dispatch(\n            adminLoggedIn({\n              accessToken: result?.data?.token,\n              email: result?.data?.email,\n              role: result?.data?.role,\n            }),\n          );\n        } catch (error) {\n          // do nothing\n        }\n      },\n    }),\n  }),\n});\n\nexport const { useRegisterMutation, useLoginMutation } = authApi;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useLoginMutation } from \"src/redux/auth/authApi\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\n\nconst Login = () => {\n  const [isShowPassword, setIsShowPassword] = useState();\n  const [login, { isLoading, data: loginData, isError }] = useLoginMutation();\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  let errorMessage = null;\n  const onSubmit = (data) => {\n    errorMessage = null;\n    login(data);\n  };\n\n  if (!isLoading && loginData) {\n    errorMessage = null;\n\n    navigate(\"/dashboard\");\n  }\n\n  if (!isLoading && isError) {\n    errorMessage = (\n      <p className=\"text-center text-danger\">Authentication Failed</p>\n    );\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol lg={4} md={4} xs={12}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handleSubmit(onSubmit)}>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">\n                      Sign In to your account\n                    </p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"email\"\n                        placeholder=\"Email Address\"\n                        // autoComplete=\"username\"\n                        {...register(\"email\", { required: true })}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type={isShowPassword ? \"text\" : \"password\"}\n                        placeholder=\"Password\"\n                        className=\"border-end-0\"\n                        // autoComplete=\"current-password\"\n                        {...register(\"password\", { required: true })}\n                      />\n                      <CInputGroupText\n                        className=\"border-start-0 bg-transparent\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() =>\n                          setIsShowPassword((prevState) => !prevState)\n                        }\n                      >\n                        {isShowPassword ? <BsEye /> : <BsEyeSlash />}\n                      </CInputGroupText>\n                    </CInputGroup>\n                    {errorMessage && errorMessage}\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton\n                          type=\"submit\"\n                          color=\"primary\"\n                          className=\"px-4\"\n                          disabled={isLoading}\n                        >\n                          {isLoading ? \"Loading\" : \" Login\"}\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              {/* <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["authApi","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","data","url","method","body","onQueryStarted","arg","_ref","dispatch","queryFulfilled","_result$data","_result$data2","_result$data3","_result$data4","_result$data5","_result$data6","result","localStorage","setItem","JSON","stringify","accessToken","token","email","role","adminLoggedIn","error","useRegisterMutation","useLoginMutation","Login","isShowPassword","setIsShowPassword","useState","isLoading","loginData","isError","navigate","useNavigate","register","handleSubmit","watch","formState","errors","useForm","errorMessage","_jsx","className","children","CContainer","CRow","CCol","lg","md","xs","CCardGroup","CCard","CCardBody","_jsxs","CForm","onSubmit","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","type","placeholder","required","cilLockLocked","style","cursor","onClick","prevState","BsEye","BsEyeSlash","CButton","color","disabled"],"sourceRoot":""}