{"version":3,"file":"static/js/429.c163ec24.chunk.js","mappings":"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","sources":["redux/order/orderApi.js","ui/SearchFieldForm.jsx","ui/UserInfoModal.jsx","ui/button/EyeButton.jsx","ui/orderFilterModal/UserInfo.jsx","ui/orderFilterModal/OrderFilterModal.jsx","ui/pagination/Pagination.js","utils/setUrlParam.js","views/customers/manage-customers/TableRowData.js","views/customers/manage-customers/ManageCustomers.jsx","views/orders/manage-orders/TableRowData.jsx","../node_modules/@coreui/icons/js/free/cil-envelope-open.js","../node_modules/@coreui/icons/js/free/cil-group.js","../node_modules/@coreui/icons/js/free/cil-people.js","../node_modules/@coreui/icons/js/free/cil-phone.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const orderApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\"],\n  endpoints: (builder) => ({\n    //get all orders\n    getAllOrders: builder.query({\n      query: (query) => ({\n        url: `/order${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllOrder\"],\n    }),\n\n    //get all orders\n    getAllOrdersByFilter: builder.query({\n      query: (query) => ({\n        url: `/order/filterOrder?${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllFilterOrder\"],\n    }),\n\n    //get recent orders\n    getRecentOrder: builder.query({\n      query: () => ({\n        url: `/order/recentOrder`,\n        method: \"GET\",\n      }),\n      providesTags: [\"RecentOrder\"],\n    }),\n\n    //get all sale by year\n    getTotalSaleByYear: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all orders by year\n    getTotalOrdersByYear: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by month\n    getTotalSaleByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get orders by day\n    getTotalOrderByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by day\n    getTotalSaleByDay: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all order by day\n    getTotalOrderByDay: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSales: builder.query({\n      query: () => ({\n        url: `/order/totalSales`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSalesByDate: builder.mutation({\n      query: ({ data }) => ({\n        url: `/order/totalSales/byDate`,\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n\n    //get all sale by day\n    getTotalOrders: builder.query({\n      query: () => ({\n        url: `/order/totalOrders`,\n        method: \"GET\",\n      }),\n    }),\n\n    // get single order by id\n    getSingleOrderById: builder.query({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"GET\",\n      }),\n      // invalidatesTags: [\"AllOrder\"],\n      providesTags: [\"SingleOrder\"],\n    }),\n\n    // update order by id\n    updateSingleOrderById: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/order/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\", \"Products\"],\n    }),\n\n    // delete order by id\n    deleteOrderById: builder.mutation({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n\n\n    // delete order by id\n    updatePaymentOrder: builder.mutation({\n      query: ({ orderId, productId, data }) => ({\n        url: `/order/${orderId}/products/${productId}/transaction`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllOrdersQuery,\n  useGetAllOrdersByFilterQuery,\n  useGetRecentOrderQuery,\n  useDeleteOrderByIdMutation,\n  useUpdateSingleOrderByIdMutation,\n  useGetSingleOrderByIdQuery,\n  useGetTotalSaleByYearQuery,\n  useGetTotalSaleByMonthQuery,\n  useGetTotalOrderByMonthQuery,\n  useGetTotalSaleByDayQuery,\n  useGetTotalOrderByDayQuery,\n  useGetTotalSalesQuery,\n  useGetTotalSalesByDateMutation,\n  useGetTotalOrdersQuery,\n  useGetTotalOrdersByYearQuery,\n  useUpdatePaymentOrderMutation\n} = orderApi;\n","/* eslint-disable react/prop-types */\nimport { cilSearch } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CRow } from \"@coreui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../src/scss/style.scss\";\n\n// eslint-disable-next-line prettier/prettier, react/prop-types\nconst SearchFieldForm = ({ onSubmit, tableData, isNavigate }) => {\n  const navigate = useNavigate();\n  const copiedTableData = [...tableData];\n  const { register, handleSubmit, reset } = useForm();\n\n  const handleClear = () => {\n    isNavigate && navigate(\".\");\n    reset();\n  };\n  return (\n    <div className=\"mx-3 px-3 mt-3 pb-3 border rounded\" style={{ backgroundColor: \"#f5f5f5\" }}>\n      <CForm onSubmit={handleSubmit(onSubmit)}>\n        <CRow>\n          {copiedTableData.map((data, index) => (\n            <CCol xs={4} key={index} className=\"mt-3\">\n              <CFormInput\n                type={data.type}\n                id=\"exampleFormControlInput1\"\n                label={data.name}\n                placeholder={data.name}\n                disabled={data.disabled}\n                aria-describedby=\"exampleFormControlInputHelpInline\"\n                {...register(data.register)}\n              />\n            </CCol>\n          ))}\n        </CRow>\n        <div className=\"d-flex align-items-center justify-content-end mt-3 \">\n          <CButton className=\"me-2 text-white\" color=\"info\" onClick={() => handleClear()}>\n            Clear\n          </CButton>\n          <CButton color=\"info\" className=\" text-white me-2\" type=\"submit\">\n            <CIcon icon={cilSearch} style={{ width: \"12px\", height: \"12px\" }} /> Filter\n          </CButton>\n        </div>\n      </CForm>\n    </div>\n  );\n};\n\nexport default SearchFieldForm;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { cilEnvelopeOpen, cilGroup, cilPhone, cilUser } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { memo } from \"react\";\n\nconst UserInfoModal = ({ showModal, setShowModal, user }) => {\n  const { name, email, groupName, phone } = user || {};\n  return (\n    <CModal\n      visible={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n    >\n      <CModalHeader closeButton>Se this user info</CModalHeader>\n      <CModalBody>\n        <CCol xs={12}>\n          <CCard className=\"\">\n            <CCardHeader className=\"d-flex align-items-center justify-content-between\">\n              <strong className=\"d-flex align-items-center gap-2\">\n                {\" \"}\n                <CIcon icon={cilUser} className=\"nav-icon\" />\n                Customer Details\n              </strong>\n            </CCardHeader>\n            <CCardBody className=\"py-1 px-0\">\n              <CListGroup flush>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilUser}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  {name}\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilGroup}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  {groupName}\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilEnvelopeOpen}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n\n                  {email}\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilPhone}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  {phone}\n                </CListGroupItem>\n              </CListGroup>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => setShowModal(false)}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default memo(UserInfoModal);\n","import { CButton, CTooltip } from \"@coreui/react\";\nimport { BsEye } from \"react-icons/bs\";\n\nconst EyeButton = ({ handleClick }) => {\n  return (\n    <CTooltip content=\"View\">\n      <CButton\n        onClick={handleClick}\n        className=\"mb-1  ms-2\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        color=\"info\"\n        variant=\"outline\"\n      >\n        <BsEye style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default EyeButton;\n","import \"./modal.scss\";\n\nconst UserInfo = ({ filterData }) => {\n  let numberWithCommas = (x) => {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  const { totalOrders, totalSales, totalShipping } = filterData?.data?.[0] || {};\n  const { name, email, phone } = filterData?.user || {};\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between my-4\">\n        <div className=\"salesCard userInfo\">\n          <p>Name: {name}</p>\n          <p>Email: {email}</p>\n          <p>Phone: {phone}</p>\n        </div>\n        <div className=\"salesCard sales\">\n          <p className=\"fs-5 fw-bold\">{numberWithCommas(totalSales) || 0}</p>\n          <p>Total sales</p>\n        </div>\n        <div className=\"salesCard shipping\">\n          <p className=\"fs-5 fw-bold\">{numberWithCommas(totalShipping) || 0}</p>\n          <p>Total shipping</p>\n        </div>\n        <div className=\"salesCard orders\">\n          <p className=\"fs-5 fw-bold\">{numberWithCommas(totalOrders) || 0}</p>\n          <p>Total orders</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport {\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport \"./modal.scss\";\nimport { useForm } from \"react-hook-form\";\nimport { useDeleteOrderByIdMutation, useGetAllOrdersByFilterQuery } from \"src/redux/order/orderApi\";\nimport PaginationButton from \"../pagination/Pagination\";\nimport Loading from \"../Loading\";\nimport TableRowData from \"src/views/orders/manage-orders/TableRowData\";\nimport UserInfo from \"./UserInfo\";\n\nconst OrderStatusModal = ({ showModal, setShowModal, query, showUserInfo }) => {\n  const [isQuery, setIsQuery] = useState(true);\n\n  const {\n    data: filterData,\n    isLoading: getLoading,\n    isError: getError,\n  } = useGetAllOrdersByFilterQuery(query, { skip: isQuery });\n\n  const [\n    deleteOrderById,\n    { isLoading: deleteLoading, isSuccess: deleteSuccess, isError: deleteError },\n  ] = useDeleteOrderByIdMutation();\n\n  useEffect(() => {\n    if (query?.length > 2) {\n      setIsQuery(false);\n    }\n  }, [query]);\n\n  const handleDeleteOrder = (id) => {\n    deleteOrderById(id);\n  };\n\n  let content = null;\n  if (getLoading) {\n    content = <Loading />;\n  }\n  if (!getLoading && getError) {\n    content = (\n      <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n        There was an error, try again.\n      </CTableDataCell>\n    );\n  }\n  if (!getLoading && !getError && filterData?.data?.length === 0) {\n    content = (\n      <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n        No data found\n      </CTableDataCell>\n    );\n  }\n  if (!getLoading && !getError && filterData?.data?.length > 0) {\n    content = filterData?.data?.map((order, index) => (\n      <CTableBody key={order?._id}>\n        <TableRowData\n          handleDeleteOrder={handleDeleteOrder}\n          deleteLoading={deleteLoading}\n          index={index}\n          order={order}\n        />\n      </CTableBody>\n    ));\n  }\n\n  return (\n    <CModal\n      visible={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      className=\"orderModal\"\n      style={{ minHeight: \"50vh\" }}\n    >\n      <CModalHeader closeButton className=\"fw-bold fs-5\">\n        Your searching results\n      </CModalHeader>\n      <CModalBody>\n        <>\n          {/* user info */}\n          {showUserInfo && <UserInfo filterData={filterData?.orderInfo} />}\n          <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow className=\"text-start\">\n                <CTableHeaderCell scope=\"col\" style={{ width: \"60px\" }}>\n                  Sl. No.\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  scope=\"col\"\n                  style={{\n                    width: \"200px\",\n                  }}\n                >\n                  Customer\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Phone</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Payment Method</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Order Date</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Modify Date</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Order Status</CTableHeaderCell>\n                <CTableHeaderCell\n                  scope=\"col\"\n                  style={{\n                    width: \"150px\",\n                    minWidth: \"150px\",\n                  }}\n                >\n                  Actions\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            {content}\n          </CTable>\n          {/* <PaginationButton searchUrl={location.search} totalPageNumber={pages} /> */}\n        </>\n      </CModalBody>\n      <CModalFooter></CModalFooter>\n    </CModal>\n  );\n};\n\nexport default OrderStatusModal;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-loop-func */\nimport { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\n\nconst PaginationButton = ({ totalPageNumber, searchUrl }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n\n  const handlePage = (page) => {\n    setCurrentPage(page);\n    navigate(setUrlParams(searchUrl || \"?\", \"page\", page.toString()));\n  };\n  // calculate page number\n  let pageNumber = !totalPageNumber ? [] : Array.from({ length: totalPageNumber }, (v, k) => k + 1);\n\n  let items = [];\n\n  for (let number = 1; number <= pageNumber.length; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === currentPage}\n        onClick={() => handlePage(number)}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <div className=\"d-flex justify-content-end mt-4\">\n      <Pagination size=\"sm\">\n        {currentPage > 1 && <Pagination.Prev onClick={() => handlePage(currentPage - 1)} />}\n        {items}\n        {currentPage < totalPageNumber && (\n          <Pagination.Next onClick={() => handlePage(currentPage + 1)} />\n        )}\n        {totalPageNumber > 1 && <Pagination.Last onClick={() => handlePage(totalPageNumber)} />}\n      </Pagination>\n    </div>\n  );\n};\n\nexport default PaginationButton;\n","export const setUrlParams = (searchUrl, paramName, valueOfParam) => {\n  const queryParams = searchUrl.split(\"&\");\n  let paramUpdated = false;\n  for (let i = 0; i < queryParams.length; i++) {\n    const param = queryParams[i].split(\"=\");\n    if (param[0] === paramName) {\n      param[1] = valueOfParam;\n      queryParams[i] = param.join(\"=\");\n      paramUpdated = true;\n      break;\n    }\n  }\n  if (!paramUpdated) {\n    queryParams.push(`${paramName}=${valueOfParam}`); // replace\n  }\n  const abc = [...new Set(queryParams)];\n\n  const finalUrl = abc.join(\"&\");\n  return finalUrl;\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { cilPencil } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CFormSelect, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useAssignUserGroupMutation, useDeleteSingleUserMutation } from \"src/redux/users/usersApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport EyeButton from \"src/ui/button/EyeButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\nimport UserInfoModal from \"src/ui/UserInfoModal\";\nimport OrderFilterModal from \"src/ui/orderFilterModal/OrderFilterModal\";\n\nconst TableRowData = ({ customer, index, customersGroup, groupNameValue }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedStatus, setSelectedStatus] = useState(groupNameValue);\n  const [showUserInfoModal, setShowUserInfoModal] = useState(false);\n  const [showFilterModal, setShowFilterModal] = useState(false);\n  const [filterQuery, setFilterQuery] = useState(\"\");\n\n  // assign user to another group hook\n  const [assignUserGroup, { isLoading, isError, isSuccess }] = useAssignUserGroupMutation();\n\n  // delete single user hook\n  const [\n    deleteSingleUser,\n    { isLoading: deleteLoading, isSuccess: customerDeleteSuccess, isError: customerDeleteError },\n  ] = useDeleteSingleUserMutation();\n\n  // handle delete user function\n  const handleDeleteCustomer = (id) => {\n    deleteSingleUser(id);\n  };\n\n  // customer group options\n  const customerGroupOptions = customersGroup?.map((c) => {\n    return { value: c.groupName, label: c.groupName };\n  });\n\n  // handle update user group options\n  const handleUpdate = (e, email) => {\n    const data = {\n      email: email,\n      groupName: e.target.value,\n    };\n\n    // assignUserGroup\n    assignUserGroup(data);\n  };\n\n  // error or success message\n  useEffect(() => {\n    toast.dismiss();\n    customerDeleteSuccess && toast.success(\"Delete Success\", { id: \"dSuccess\" });\n    customerDeleteError && toast.error(\"Failed to Delete\", { id: \"dError\" });\n  }, [customerDeleteSuccess, customerDeleteError]);\n  const handleViewDetails = (email) => {\n    const query = `email=${email}`;\n    setFilterQuery(query);\n    setShowFilterModal(true);\n  };\n\n  return (\n    <>\n      <CTableRow>\n        {/* filter modal */}\n        <OrderFilterModal\n          query={filterQuery}\n          showModal={showFilterModal}\n          setShowModal={setShowFilterModal}\n          showUserInfo={true}\n        />\n        <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n        <CTableDataCell>\n          <Image\n            src={customer?.photoUrl}\n            roundedCircle\n            style={{ width: \"35px\", height: \"100%\", objectFit: \"cover\" }}\n          />\n        </CTableDataCell>\n        <CTableDataCell>\n          <span\n            onClick={() => setShowUserInfoModal(true)}\n            className=\"text-primary fw-bold\"\n            style={{ cursor: \"pointer\" }}\n          >\n            {customer?.name}\n          </span>\n          <br />\n          <small className=\"text-info\">\n            {customer?.groupName} | Register: {new Date(customer?.createdAt).toLocaleDateString()}\n          </small>\n        </CTableDataCell>\n        <CTableDataCell>{customer?.email}</CTableDataCell>\n        <CTableDataCell>{customer?.phone || \"Google\"}</CTableDataCell>\n\n        <CTableDataCell>\n          <CFormSelect\n            style={{ width: \"150px\" }}\n            aria-label=\"Product Select Selection Field\"\n            options={customerGroupOptions}\n            value={selectedStatus}\n            onChange={(e) => {\n              // setSelectedStatus(e.target.value);\n              handleUpdate(e, customer?.email);\n              // eslint-disable-next-line prettier/prettier\n            }}\n          />\n        </CTableDataCell>\n        <CTableDataCell>\n          <div className=\"\">\n            <EyeButton handleClick={() => handleViewDetails(customer?.email)} />\n            <Link to={`/customer/edit/${customer?._id}`}>\n              <EditButton />\n            </Link>\n            <DeleteButton setShowModal={setShowModal} />\n          </div>\n        </CTableDataCell>\n      </CTableRow>\n\n      {/* delete modal */}\n      <DeleteModal\n        deleteThis={handleDeleteCustomer}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={customer._id}\n        deleteLoading={deleteLoading}\n      />\n\n      {/* user info modal */}\n      <UserInfoModal\n        showModal={showUserInfoModal}\n        setShowModal={setShowUserInfoModal}\n        user={customer}\n      />\n    </>\n  );\n};\n\nexport default TableRowData;\n","/* eslint-disable prettier/prettier */\nimport { cilPeople } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useGetAllCustomerGroupQuery } from \"src/redux/customerGroup/customerGroupApi\";\nimport { useGetAllUsersQuery } from \"src/redux/users/usersApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport Loading from \"src/ui/Loading\";\nimport PaginationButton from \"src/ui/pagination/Pagination\";\nimport SearchFieldForm from \"src/ui/SearchFieldForm\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\nimport ManageCustomerTableRowData from \"./TableRowData\";\n\nconst ManageCustomers = () => {\n  const location = useLocation();\n  const { data: customers, isLoading, isFetching, isError } = useGetAllUsersQuery(location.search);\n  const navigate = useNavigate();\n  const { data: customersGroup } = useGetAllCustomerGroupQuery();\n\n  let content = null;\n  let loadingContent = null;\n  if (isLoading) {\n    loadingContent = <Loading />;\n  }\n  if (!isLoading && isError) {\n    loadingContent = <p className=\"text-danger\">Something was wrong!</p>;\n  }\n  if (!isLoading && !isError && customers?.result?.data?.length === 0) {\n    content = <p className=\"text-danger\">No user here</p>;\n  }\n  if (!isLoading && !isError) {\n    content = customersGroup?.map((group, index) => (\n      <Tab key={index} eventKey={group?.groupName} title={group?.groupName}>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"60px\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                <CIcon icon={cilPeople} />\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">User</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Customer Phone</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Customer Group</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Actions</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          {customers?.result?.data?.length > 0 ? (\n            customers?.result?.data\n              ?.filter((ord) => {\n                return ord?.groupName?.toLowerCase() === group?.groupName?.toLowerCase();\n              })\n              ?.map((customer, index) => (\n                <CTableBody key={index}>\n                  <ManageCustomerTableRowData\n                    customersGroup={customersGroup}\n                    index={index}\n                    groupNameValue={group?.groupName}\n                    customer={customer}\n                  />\n                </CTableBody>\n              ))\n          ) : (\n            <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n              No data found\n            </CTableDataCell>\n          )}\n        </CTable>\n        <PaginationButton\n          searchUrl={location.search}\n          totalPageNumber={customers?.result?.totalPageNumber}\n        />\n      </Tab>\n    ));\n  }\n  const tableData = [\n    { name: \"Customer Name\", register: \"name\", type: \"text\" },\n    { name: \"Email\", register: \"email\", type: \"email\" },\n    { name: \"Date added\", register: \"dateAdded\", type: \"date\" },\n    { name: \"Customer Group\", register: \"group\", type: \"text\" },\n    { name: \"Customer Phone\", register: \"phone\", type: \"number\" },\n  ];\n\n  const handleSearch = (data) => {\n    let query = \"\";\n    if (data.name) query += `name=${data.name}`;\n    if (data.group) query += `&group=${data.group}`;\n    if (data.email) query += `&email=${data.email}`;\n    if (data.dateAdded) query += `&date=${data.dateAdded}`;\n    if (data.phone) query += `&phone=${data.phone}`;\n\n    if (location.search.includes(\"status\")) {\n      query = location.search + `&${query}`;\n    } else {\n      query = `?${query}`;\n    }\n\n    navigate(query);\n  };\n\n  const handleTabSelect = (tabName) => {\n    const url = setUrlParams(\"?\", \"page\", 1);\n    navigate(setUrlParams(url, \"status\", tabName));\n  };\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            {/* Header start*/}\n            <CardHeaderButton title={\"All Customers\"} />\n            {/* Header start*/}\n\n            {/* search field start*/}\n            <SearchFieldForm onSubmit={handleSearch} tableData={tableData} isNavigate={true} />\n            {/* search field end*/}\n\n            {/* Card main body*/}\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">Here is the list of all customers.</p>\n              {loadingContent ? (\n                loadingContent\n              ) : (\n                <Tabs\n                  defaultActiveKey={customersGroup?.[0]?.groupName}\n                  id=\"uncontrolled-tab-example\"\n                  className=\"mb-3\"\n                  onSelect={(e) => handleTabSelect(e)}\n                >\n                  {content}\n                </Tabs>\n              )}\n            </CCardBody>\n            {/* Card main end*/}\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageCustomers;\n","/* eslint-disable no-lone-blocks */\n/* eslint-disable react/prop-types */\nimport { CFormSelect, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useUpdateSingleOrderByIdMutation } from \"src/redux/order/orderApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport EyeButton from \"src/ui/button/EyeButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\n// eslint-disable-next-line react/prop-types\nconst TableRowData = ({ index, order, handleDeleteOrder, deleteLoading }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const { totalAmount, createdAt, updatedAt, paymentType, status, userName, userPhone, orderId, report } =\n    order || {};\n  const [selectedStatus, setSelectedStatus] = useState(status);\n\n  const [updateSingleOrderById, { isLoading: updateLoading, updateError }] =\n    useUpdateSingleOrderByIdMutation();\n\n  const orderStatus = [\n    { value: \"pending\", label: \"Pending\" },\n    { value: \"processing\", label: \"Processing\" },\n    { value: \"shipped\", label: \"shipped\" },\n    { value: \"cancelled\", label: \"Cancelled\" },\n    { value: \"returned\", label: \"Returned\" },\n    { value: \"delivered\", label: \"Delivered\" },\n    { value: \"expired\", label: \"Expired\" },\n  ];\n  const handleUpdate = (e, id) => {\n    const value = e.target.value;\n    setSelectedStatus(value);\n    const data = { status: value };\n\n    updateSingleOrderById({ id, data });\n  };\n  return (\n    <>\n      <DeleteModal\n        deleteThis={handleDeleteOrder}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={order?._id}\n        deleteLoading={deleteLoading}\n      />\n      <CTableRow>\n        <CTableHeaderCell scope=\"row\">\n          {index + 1}\n          {/* <Form.Check inline type=\"checkbox\" id={index + 1} /> */}\n        </CTableHeaderCell>\n        <CTableDataCell>{userName}</CTableDataCell>\n        <CTableDataCell>{orderId}</CTableDataCell>\n        <CTableDataCell>{userPhone}</CTableDataCell>\n        <CTableDataCell>{totalAmount}</CTableDataCell>\n        <CTableDataCell>{paymentType} {report && <span className=\"text-danger text-uppercase\">REQ: {report?.requestedFor}</span>}</CTableDataCell>\n        <CTableDataCell>{new Date(createdAt).toLocaleDateString()}</CTableDataCell>\n        <CTableDataCell>{new Date(updatedAt).toLocaleDateString()}</CTableDataCell>\n        <CTableDataCell>\n          {updateLoading && <small>Loading..</small>}\n          {updateError && <small className=\"text-danger\">Error occured</small>}\n          <CFormSelect\n            style={{ width: \"150px\" }}\n            aria-label=\"Product Select Selection Field\"\n            options={orderStatus}\n            value={selectedStatus}\n            disabled={updateLoading}\n            onChange={(e) => {\n              // setSelectedStatus(e.target.value);\n              handleUpdate(e, order?._id);\n              // eslint-disable-next-line prettier/prettier\n            }}\n          />\n        </CTableDataCell>\n        <CTableDataCell>\n          <div className=\"\">\n            <Link to={`/order/details/${order?._id}`}>\n              <EyeButton />\n            </Link>\n            <Link to={`/order/details/${order?._id}`}>\n              <EditButton />\n            </Link>\n            {/* <Link to={`/order/edit/${order?._id}`}>\n              <EditButton />\n            </Link> */}\n            <DeleteButton setShowModal={setShowModal} />\n          </div>\n        </CTableDataCell>\n      </CTableRow>\n    </>\n  );\n};\n\nexport default TableRowData;\n","export const cilEnvelopeOpen = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M274.6,25.623a32.006,32.006,0,0,0-37.2,0L16,183.766V496H496V183.766ZM464,402.693,339.97,322.96,464,226.492ZM256,51.662,454.429,193.4,311.434,304.615,256,268.979l-55.434,35.636L57.571,193.4ZM48,226.492,172.03,322.96,48,402.693ZM464,464H48V440.735L256,307.021,464,440.735Z' class='ci-primary'/>\"]","export const cilGroup = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"]","export const cilPeople = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"]","export const cilPhone = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M449.366,89.648l-.685-.428L362.088,46.559,268.625,171.176l43,57.337a88.529,88.529,0,0,1-83.115,83.114l-57.336-43L46.558,362.088l42.306,85.869.356.725.429.684a25.085,25.085,0,0,0,21.393,11.857h22.344A327.836,327.836,0,0,0,461.222,133.386V111.041A25.084,25.084,0,0,0,449.366,89.648Zm-20.144,43.738c0,163.125-132.712,295.837-295.836,295.837h-18.08L87,371.76l84.18-63.135,46.867,35.149h5.333a120.535,120.535,0,0,0,120.4-120.4v-5.333l-35.149-46.866L371.759,87l57.463,28.311Z' class='ci-primary'/>\"]"],"names":["orderApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllOrders","query","url","concat","method","providesTags","getAllOrdersByFilter","getRecentOrder","getTotalSaleByYear","getTotalOrdersByYear","getTotalSaleByMonth","getTotalOrderByMonth","getTotalSaleByDay","getTotalOrderByDay","getTotalSales","getTotalSalesByDate","mutation","_ref","data","body","getTotalOrders","getSingleOrderById","id","updateSingleOrderById","_ref2","invalidatesTags","deleteOrderById","updatePaymentOrder","_ref3","orderId","productId","useGetAllOrdersQuery","useGetAllOrdersByFilterQuery","useGetRecentOrderQuery","useDeleteOrderByIdMutation","useUpdateSingleOrderByIdMutation","useGetSingleOrderByIdQuery","useGetTotalSaleByYearQuery","useGetTotalSaleByMonthQuery","useGetTotalOrderByMonthQuery","useGetTotalSaleByDayQuery","useGetTotalOrderByDayQuery","useGetTotalSalesQuery","useGetTotalSalesByDateMutation","useGetTotalOrdersQuery","useGetTotalOrdersByYearQuery","useUpdatePaymentOrderMutation","onSubmit","tableData","isNavigate","navigate","useNavigate","copiedTableData","register","handleSubmit","reset","useForm","_jsx","className","style","backgroundColor","children","_jsxs","CForm","CRow","map","index","CCol","xs","CFormInput","type","label","name","placeholder","disabled","CButton","color","onClick","CIcon","icon","cilSearch","width","height","UserInfoModal","showModal","setShowModal","user","email","groupName","phone","CModal","visible","onClose","CModalHeader","closeButton","CModalBody","CCard","CCardHeader","cilUser","CCardBody","CListGroup","flush","CListGroupItem","borderRadius","border","lineHeight","cilGroup","cilEnvelopeOpen","cilPhone","CModalFooter","memo","handleClick","CTooltip","content","position","variant","BsEye","top","left","_filterData$data","filterData","numberWithCommas","x","toString","replace","totalOrders","totalSales","totalShipping","_filterData$data2","showUserInfo","isQuery","setIsQuery","useState","isLoading","getLoading","isError","getError","skip","deleteLoading","isSuccess","deleteSuccess","deleteError","useEffect","length","handleDeleteOrder","_filterData$data3","Loading","CTableDataCell","colSpan","order","CTableBody","TableRowData","_id","minHeight","_Fragment","UserInfo","orderInfo","CTable","align","bordered","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","minWidth","totalPageNumber","searchUrl","currentPage","setCurrentPage","handlePage","page","setUrlParams","pageNumber","Array","from","v","k","items","number","push","Pagination","Item","active","size","Prev","Next","Last","paramName","valueOfParam","queryParams","split","paramUpdated","i","param","join","Set","customer","customersGroup","groupNameValue","selectedStatus","setSelectedStatus","showUserInfoModal","setShowUserInfoModal","showFilterModal","setShowFilterModal","filterQuery","setFilterQuery","assignUserGroup","useAssignUserGroupMutation","deleteSingleUser","customerDeleteSuccess","customerDeleteError","useDeleteSingleUserMutation","customerGroupOptions","c","value","toast","dismiss","success","error","OrderFilterModal","Image","src","photoUrl","roundedCircle","objectFit","cursor","Date","createdAt","toLocaleDateString","CFormSelect","options","onChange","e","handleUpdate","target","EyeButton","handleViewDetails","Link","to","EditButton","DeleteButton","DeleteModal","deleteThis","ManageCustomers","_customers$result","_customers$result$dat","_customersGroup$","location","useLocation","customers","isFetching","useGetAllUsersQuery","search","useGetAllCustomerGroupQuery","loadingContent","result","group","_customers$result2","_customers$result2$da","_customers$result3","_customers$result3$da","_customers$result3$da2","_customers$result4","Tab","eventKey","title","cilPeople","filter","ord","_ord$groupName","_group$groupName","toLowerCase","ManageCustomerTableRowData","PaginationButton","CardHeaderButton","SearchFieldForm","dateAdded","includes","Tabs","defaultActiveKey","onSelect","tabName","handleTabSelect","totalAmount","updatedAt","paymentType","status","userName","userPhone","report","updateLoading","updateError","requestedFor"],"sourceRoot":""}