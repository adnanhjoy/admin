{"version":3,"file":"static/js/8661.61c74729.chunk.js","mappings":"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","sources":["redux/terms&condition/termsConditionApi.js","utils/getReactQuilModel.js","views/terms&condition/AddTerm&Conditions.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const termConditionApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AlltermsCondition\"],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllTermsCondition: builder.query({\n      query: () => ({\n        url: `/termsCondition`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AlltermsCondition\"],\n    }),\n    // get blog offer discount for new user\n    getSingleTermsCondition: builder.query({\n      query: (id) => ({\n        url: `/termsCondition/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n    // get blog offer discount for new user\n    addNewTermCondition: builder.mutation({\n      query: (blog) => ({\n        url: `/termsCondition`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleTermCondition: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/termsCondition/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleTermCondition: builder.mutation({\n      query: (id) => ({\n        url: `/termsCondition/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTermsConditionQuery,\n  useGetSingleTermsConditionQuery,\n  useAddNewTermConditionMutation,\n  useUpdateSingleTermConditionMutation,\n  useDeleteSingleTermConditionMutation,\n} = termConditionApi;\n","export const getModels = () => {\n  return {\n    toolbar: [\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n      [\"blockquote\", \"code-block\"],\n\n      // [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n      [{ direction: \"rtl\" }], // text direction\n\n      // [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n      [{ font: [] }],\n      [{ align: [] }],\n      [\"link\", \"image\", \"video\"],\n\n      [\"clean\"], // remove formatting button\n    ],\n  };\n};\n","/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CForm } from \"@coreui/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ReactQuill from \"react-quill\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  useAddNewTermConditionMutation,\n  useGetSingleTermsConditionQuery,\n  useUpdateSingleTermConditionMutation,\n} from \"src/redux/terms&condition/termsConditionApi\";\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\nimport { getModels } from \"src/utils/getReactQuilModel\";\n\nconst AddTermsConditions = () => {\n  const modules = getModels();\n  const navigate = useNavigate();\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const { handleSubmit, setValue } = useForm();\n  const [blogDescription, setBlogDescription] = useState();\n  const [banglaDescription, setBanglaDescription] = useState();\n\n\n  const {\n    data: termData,\n    isLoading: termLoading,\n    isError: termError,\n    error: termErrorMsg,\n  } = useGetSingleTermsConditionQuery(id, { skip: haveId });\n\n  const [\n    addNewTermCondition,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddNewTermConditionMutation();\n\n  const [\n    updateSingleTermCondition,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleTermConditionMutation();\n\n  // update or add new term conditions\n  const onSubmit = () => {\n    const data  = {};\n    if(blogDescription)   data.description = blogDescription;\n    if(banglaDescription)   data.banglaDescription = banglaDescription;\n\n    if (id) {\n      updateSingleTermCondition({ id, data });\n    } else {\n      addNewTermCondition(data);\n    }\n  };\n\n  //default data set\n  useMemo(() => {\n    if (id) {\n      setBlogDescription(termData?.data?.description);\n      setBanglaDescription(termData?.data?.banglaDescription);\n    }\n  }, [id, termData?.data]);\n\n  useEffect(() => {\n    addError && toast.error(addError?.data?.message);\n    updateError && toast.error(updateError?.data?.message);\n  }, [addError, updateError]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCard>\n        <HeaderBackButton title={id ? \"Update terms and condition\" : \"Add terms and condition\"} />\n\n        {termLoading ? (\n          <p>Loading..</p>\n        ) : (\n          <CCardBody>\n            <CCol xs={12}>\n              <label className=\"w-100\">Terms & Condition (English)</label>\n              <ReactQuill\n                className=\"mt-2\"\n                theme=\"snow\"\n                placeholder=\"Enter terms & condition\"\n                modules={modules}\n                value={blogDescription}\n                onChange={setBlogDescription}\n              />\n            </CCol>\n            <CCol className=\"mt-2\" xs={12}>\n              <label className=\"w-100\">Return policy (Bangla)</label>\n              <ReactQuill\n                className=\"mt-2\"\n                theme=\"snow\"\n                placeholder=\"Enter return policy\"\n                modules={modules}\n                value={banglaDescription}\n                onChange={setBanglaDescription}\n              />\n            </CCol>\n            <div className=\"text-end  \">\n              <CancelButton />\n              <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n                <CIcon icon={cilSave} className=\"me-2\" />\n                {updateLoading || addLoading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n              </CButton>\n            </div>\n          </CCardBody>\n        )}\n      </CCard>\n    </CForm>\n  );\n};\n\nexport default AddTermsConditions;\n"],"names":["termConditionApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllTermsCondition","query","url","method","providesTags","getSingleTermsCondition","id","concat","invalidatesTags","addNewTermCondition","mutation","blog","body","updateSingleTermCondition","_ref","data","deleteSingleTermCondition","useGetAllTermsConditionQuery","useGetSingleTermsConditionQuery","useAddNewTermConditionMutation","useUpdateSingleTermConditionMutation","useDeleteSingleTermConditionMutation","getModels","toolbar","list","script","indent","direction","header","color","background","font","align","AddTermsConditions","modules","navigate","useNavigate","haveId","setHaveId","useState","useParams","handleSubmit","setValue","useForm","blogDescription","setBlogDescription","banglaDescription","setBanglaDescription","termData","isLoading","termLoading","isError","termError","error","termErrorMsg","skip","addLoading","addError","isSuccess","addSuccess","addMsg","updateLoading","updateError","updateSuccess","updateMsg","useMemo","_termData$data","_termData$data2","description","useEffect","_addError$data","_updateError$data","toast","message","_jsx","CForm","onSubmit","children","_jsxs","CCard","HeaderBackButton","title","CCardBody","CCol","xs","className","ReactQuill","theme","placeholder","value","onChange","CancelButton","CButton","type","CIcon","icon","cilSave"],"sourceRoot":""}