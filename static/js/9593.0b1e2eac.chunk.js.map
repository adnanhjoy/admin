{"version":3,"file":"static/js/9593.0b1e2eac.chunk.js","mappings":"4PAWA,MAuDA,EAvDsBA,IAAuB,IAAtB,MAAEC,EAAK,MAAEC,GAAOF,EACrC,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAEzCC,GACEC,UAAWC,EAAeC,QAASC,EAAaC,UAAWC,KAC3DC,EAAAA,EAAAA,MAOJ,OALAC,EAAAA,EAAAA,YAAU,KACRC,EAAAA,GAAMC,UACNN,GAAeK,EAAAA,GAAME,MAAM,sBAAuB,CAAEC,GAAI,WACxDN,GAAiBG,EAAAA,GAAMI,QAAQ,uBAAwB,CAAED,GAAI,YAAa,GACzE,CAACR,EAAaE,KAEfQ,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAAAD,SAAA,EACRE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAEpB,EAAQ,KACvCsB,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,SAAO,OAALrB,QAAK,IAALA,OAAK,EAALA,EAAO2B,QACxBJ,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,SAAO,OAALrB,QAAK,IAALA,OAAK,EAALA,EAAO4B,SACxBL,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,UACbE,EAAAA,EAAAA,KAAA,QAAMM,UAAU,yBAAwBR,SAAO,OAALrB,QAAK,IAALA,OAAK,EAALA,EAAO8B,UAEnDP,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,UACbF,EAAAA,EAAAA,MAAA,OAAKU,UAAU,GAAER,SAAA,EACfE,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,eAAAC,OAAsB,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOkC,IAAG,oBAAmBb,UACpDE,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CACNC,MAAM,UACNC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,YAAapB,UAE/DE,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAAWN,MAAO,CAAEG,SAAU,WAAYI,IAAK,MAAOC,KAAM,cAG7EvB,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CACNC,MAAM,SACNC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,YAClDZ,UAAU,OACVkB,QAASA,IAAM5C,GAAa,GAAMkB,UAElCE,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,KAAMK,EAAAA,EAAUV,MAAO,CAAEG,SAAU,WAAYI,IAAK,MAAOC,KAAM,oBAKhFvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CACVC,WAAY7C,EACZH,UAAWA,EACXC,aAAcA,EACdc,GAAS,OAALjB,QAAK,IAALA,OAAK,EAALA,EAAOkC,IACX3B,cAAeA,MAEhB,E,gDClDP,MAyDA,EAzD2BR,IAAyB,IAAxB,QAAEoD,EAAO,MAAElD,GAAOF,EAC5C,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCgD,GAAe,UAAE9C,EAAS,QAAEE,EAAO,UAAEE,KAAe2C,EAAAA,EAAAA,OACrD,MAAEzB,IAAU0B,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAAS,CAAC,GAEzD3C,EAAAA,EAAAA,YAAU,KACRH,GAAaI,EAAAA,GAAMI,QAAQ,mBAC3BV,GAAWM,EAAAA,GAAME,MAAM,iBAAiB,GACvC,CAACN,EAAWF,IAMf,OACEW,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAAAD,SAAA,EACRE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAEpB,EAAQ,KAEvCsB,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,SAAS,OAAP8B,QAAO,IAAPA,OAAO,EAAPA,EAASxB,QAC1BJ,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,SAAS,OAAP8B,QAAO,IAAPA,OAAO,EAAPA,EAASvB,SAC1BT,EAAAA,EAAAA,MAACO,EAAAA,GAAc,CAAAL,SAAA,CACZ,KACDE,EAAAA,EAAAA,KAAA,QAAMM,UAAS,IAAAI,OAAwB,WAAX,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASrB,MAAmB,aAAe,aAAY,2BAA0BT,SAC5F,OAAP8B,QAAO,IAAPA,OAAO,EAAPA,EAASrB,WAIdP,EAAAA,EAAAA,KAACG,EAAAA,GAAc,CAAAL,SAAE,IAAIoC,KAAY,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASO,WAAWC,wBAE9CxC,EAAAA,EAAAA,MAACO,EAAAA,GAAc,CAAAL,SAAA,EACbE,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,eAAAC,OAAwB,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASjB,KAAMb,UACtCE,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,OAGbrC,EAAAA,EAAAA,KAACsC,EAAAA,GAAQ,CAACC,QAAQ,SAAQzC,UACxBE,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CACNC,MAAM,SACNC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,YAClDZ,UAAU,YACVkB,QAASA,IAAM5C,GAAa,GAAMkB,UAElCE,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,KAAMK,EAAAA,EAAUV,MAAO,CAAEG,SAAU,WAAYI,IAAK,MAAOC,KAAM,iBAI9EvB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CACVC,WArCea,KACnBX,EAAc,CAAEnC,GAAW,OAAPkC,QAAO,IAAPA,OAAO,EAAPA,EAASjB,IAAK8B,iBAAkBpC,GAAQ,EAqCxD1B,UAAWA,EACXC,aAAcA,EACdc,GAAW,OAAPkC,QAAO,IAAPA,OAAO,EAAPA,EAASjB,IACb3B,cAAeD,MApCI,OAAP6C,QAAO,IAAPA,OAAO,EAAPA,EAASjB,IAsCb,ECehB,EAhEgB+B,KACd,MAAM,KAAEC,EAAI,UAAE5D,EAAS,QAAEE,IAAY2D,EAAAA,EAAAA,MACrC,IAAIL,EAAU,KAgBd,OAfIxD,IACFwD,GAAUvC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAO,MAEf9D,GAAaE,IAChBsD,GAAUvC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAAAhD,SAAC,wBAEdf,GAAcE,GAA2B,IAAhB0D,EAAKI,SACjCR,GAAUvC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAAAhD,SAAC,kCAEdf,IAAcE,GAAW0D,EAAKI,OAAS,IAC1CR,EAAc,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMK,KAAI,CAACpB,EAASlD,KAC5BsB,EAAAA,EAAAA,KAACiD,EAAmB,CAAoBrB,QAASA,EAASlD,MAAOA,GAAhC,OAAPkD,QAAO,IAAPA,OAAO,EAAPA,EAASjB,SAKrCX,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAAApD,UACHE,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACC,GAAI,GAAGtD,UACXF,EAAAA,EAAAA,MAACyD,EAAAA,GAAK,CAAC/C,UAAU,OAAMR,SAAA,EACrBE,EAAAA,EAAAA,KAACsD,EAAAA,EAAgB,CAAC7C,GAAI,aAAc8C,MAAO,0BAC3C3D,EAAAA,EAAAA,MAAC4D,EAAAA,GAAS,CAAA1D,SAAA,EACRE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,iBACNF,EAAAA,EAAAA,MAAC6D,EAAAA,GAAM,CAACC,MAAM,SAASpD,UAAU,cAAcqD,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAA/D,SAAA,EACtEE,EAAAA,EAAAA,KAAC8D,EAAAA,EAAU,CAACjD,MAAM,QAAOf,UACvBF,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAACO,UAAU,aAAYR,SAAA,EAC/BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAMa,MAAO,CAAEE,MAAO,WAAYnB,SAAC,aAI3DE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,UAE9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,WAE9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,UAE9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,gBAE9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CACfC,MAAM,MACNa,MAAO,CACLE,MAAO,QACP8C,SAAU,SACVjE,SACH,kBAKLE,EAAAA,EAAAA,KAACgE,EAAAA,GAAU,CAAAlE,SAAEyC,gBAShB,ECHX,EAxDqB0B,KACnB,MAAQtB,KAAMuB,EAAWnF,UAAWoF,EAAclF,QAASmF,IAAeC,EAAAA,EAAAA,MAE1E,IAAI9B,EAAU,KAed,OAdI4B,IACF5B,GAAUvC,EAAAA,EAAAA,KAAA,KAAAF,SAAG,iBAEVqE,GAAgBC,IACnB7B,GAAUvC,EAAAA,EAAAA,KAAA,KAAGM,UAAU,cAAaR,SAAC,8BAElCqE,GAAiBC,GAAoC,KAAb,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWnB,UAC7CR,GAAUvC,EAAAA,EAAAA,KAAA,KAAGM,UAAU,cAAaR,SAAC,wBAElCqE,IAAiBC,IAAuB,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWnB,QAAS,IACtDR,EAAmB,OAAT2B,QAAS,IAATA,OAAS,EAATA,EAAWlB,KAAI,CAACvE,EAAOC,KAC/BsB,EAAAA,EAAAA,KAACsE,EAAa,CAAkB5F,MAAOA,EAAOD,MAAOA,GAA5B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOkC,SAI7BX,EAAAA,EAAAA,KAAAH,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAACsD,EAAAA,GAAI,CAAApD,SAAA,EACHE,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACC,GAAI,GAAGtD,UACXF,EAAAA,EAAAA,MAACyD,EAAAA,GAAK,CAAC/C,UAAU,OAAMR,SAAA,EACrBE,EAAAA,EAAAA,KAACsD,EAAAA,EAAgB,CAAC7C,GAAG,IAAI8C,MAAM,iBAC/B3D,EAAAA,EAAAA,MAAC4D,EAAAA,GAAS,CAAA1D,SAAA,EACRE,EAAAA,EAAAA,KAAA,QAAMM,UAAU,6BAA4BR,SAAC,6CAI7CF,EAAAA,EAAAA,MAAC6D,EAAAA,GAAM,CAACC,MAAM,SAASpD,UAAU,cAAcsD,OAAK,EAACC,YAAU,EAACF,UAAQ,EAAA7D,SAAA,EACtEE,EAAAA,EAAAA,KAAC8D,EAAAA,EAAU,CAACjD,MAAM,QAAOf,UACvBF,EAAAA,EAAAA,MAACG,EAAAA,GAAS,CAACO,UAAU,aAAYR,SAAA,EAC/BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAMa,MAAO,CAAEE,MAAO,WAAYnB,SAAC,aAG3DE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,UAC9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,WAC9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAKJ,SAAC,UAC9BE,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAACC,MAAM,MAAMa,MAAO,CAAEE,MAAO,SAAUnB,SAAC,kBAK7DE,EAAAA,EAAAA,KAACgE,EAAAA,GAAU,CAAAlE,SAAEyC,gBAKrBvC,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAAArD,UACHE,EAAAA,EAAAA,KAAC0C,EAAO,UAGX,C","sources":["views/admins/manage-admins/AdminTableRow.jsx","views/settings/manger/MangerTableRowData.jsx","views/settings/manger/Manager.jsx","views/admins/manage-admins/ManageAdmins.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable no-lone-blocks */\nimport { useEffect, useState } from \"react\";\nimport { cilPencil, cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteAdminMutation } from \"src/redux/admin/AdminApi\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst AdminTableRow = ({ admin, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteAdmin,\n    { isLoading: deleteLoading, isError: deleteError, isSuccess: deleteSuccess },\n  ] = useDeleteAdminMutation();\n\n  useEffect(() => {\n    toast.dismiss();\n    deleteError && toast.error(\"Admin delete failed\", { id: \"dError\" });\n    deleteSuccess && toast.success(\"Admin delete success\", { id: \"dSuccess\" });\n  }, [deleteError, deleteSuccess]);\n  return (\n    <>\n      <CTableRow>\n        <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n        <CTableDataCell>{admin?.name}</CTableDataCell>\n        <CTableDataCell>{admin?.email}</CTableDataCell>\n        <CTableDataCell>\n          <span className=\"bg-success p-1 rounded\">{admin?.role}</span>\n        </CTableDataCell>\n        <CTableDataCell>\n          <div className=\"\">\n            <Link to={`/admin/edit/${admin?._id}?superAdmin=true`}>\n              <CButton\n                color=\"success\"\n                variant=\"outline\"\n                style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n              >\n                <CIcon icon={cilPencil} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n              </CButton>\n            </Link>\n            <CButton\n              color=\"danger\"\n              variant=\"outline\"\n              style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n              className=\"ms-2\"\n              onClick={() => setShowModal(true)}\n            >\n              <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n            </CButton>\n          </div>\n        </CTableDataCell>\n      </CTableRow>\n      <DeleteModal\n        deleteThis={deleteAdmin}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={admin?._id}\n        deleteLoading={deleteLoading}\n      />\n    </>\n  );\n};\n\nexport default AdminTableRow;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTableDataCell, CTableHeaderCell, CTableRow, CTooltip } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport { useDeleteManagerMutation } from \"src/redux/admin/AdminApi\";\nimport DeleteModal from \"src/ui/DeleteModal\";\nimport EditButton from \"src/ui/button/EditButton\";\n\nconst MangerTableRowData = ({ manager, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteManager, { isLoading, isError, isSuccess }] = useDeleteManagerMutation();\n  const { email } = useSelector((state) => state.auth) || {};\n\n  useEffect(() => {\n    isSuccess && toast.success(\"Delete  Success\");\n    isError && toast.error(\"Delete  Failed\");\n  }, [isSuccess, isError]);\n\n  const handleDelete = () => {\n    deleteManager({ id: manager?._id, currentUserEmail: email });\n  };\n\n  return (\n    <CTableRow key={manager?._id}>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n\n      <CTableDataCell>{manager?.name}</CTableDataCell>\n      <CTableDataCell>{manager?.email}</CTableDataCell>\n      <CTableDataCell>\n        {\" \"}\n        <span className={` ${manager?.role === \"admin\" ? \"bg-success\" : \"bg-warning\"} p-1 rounded text-white`}>\n          {manager?.role}\n        </span>\n      </CTableDataCell>\n\n      <CTableDataCell>{new Date(manager?.createdAt).toLocaleDateString()}</CTableDataCell>\n\n      <CTableDataCell>\n        <Link to={`/admin/edit/${manager?._id}`}>\n          <EditButton />\n        </Link>\n\n        <CTooltip content=\"Delete\">\n          <CButton\n            color=\"danger\"\n            variant=\"outline\"\n            style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n            className=\"ms-2 mb-1\"\n            onClick={() => setShowModal(true)}\n          >\n            <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n          </CButton>\n        </CTooltip>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDelete}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={manager?._id}\n        deleteLoading={isLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default MangerTableRowData;\n","import {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllManagerQuery } from \"src/redux/admin/AdminApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport Loading from \"src/ui/Loading\";\nimport Error from \"src/ui/error/Error\";\nimport ManagerTableRowData from \"./MangerTableRowData\";\nconst Manager = () => {\n  const { data, isLoading, isError } = useGetAllManagerQuery();\n  let content = null;\n  if (isLoading) {\n    content = <Loading />;\n  }\n  if (!isLoading && isError) {\n    content = <Error>There was en error</Error>;\n  }\n  if (!isLoading && !isError && data.length === 0) {\n    content = <Error>There is no admin or manger</Error>;\n  }\n  if (!isLoading && !isError && data.length > 0) {\n    content = data?.map((manager, index) => (\n      <ManagerTableRowData key={manager?._id} manager={manager} index={index} />\n    ));\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CardHeaderButton to={\"/admin/add\"} title={\"All admin & managers\"} />\n          <CCardBody>\n            <span>Super Admin</span>\n            <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n              <CTableHead color=\"light\">\n                <CTableRow className=\"text-start\">\n                  <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                    Sl. No.\n                  </CTableHeaderCell>\n\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n\n                  <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\n\n                  <CTableHeaderCell scope=\"col\">Role</CTableHeaderCell>\n\n                  <CTableHeaderCell scope=\"col\">Added Date</CTableHeaderCell>\n\n                  <CTableHeaderCell\n                    scope=\"col\"\n                    style={{\n                      width: \"100px\",\n                      minWidth: \"100px\",\n                    }}\n                  >\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>{content}</CTableBody>\n            </CTable>\n            {/* <PaginationButton\n            searchUrl={location.search}\n            totalPageNumber={AllNewsLetter?.result?.totalPageNumber}\n          /> */}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Manager;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllAdminsQuery } from \"src/redux/admin/AdminApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport AdminTableRow from \"./AdminTableRow\";\nimport Manager from \"src/views/settings/manger/Manager\";\n\nconst ManageAdmins = () => {\n  const { data: allAdmins, isLoading: adminLoading, isError: adminError } = useGetAllAdminsQuery();\n\n  let content = null;\n  if (adminLoading) {\n    content = <p>Loading...</p>;\n  }\n  if (!adminLoading && adminError) {\n    content = <p className=\"text-danger\">There is something wrong</p>;\n  }\n  if (!adminLoading && !adminError && allAdmins?.length === 0) {\n    content = <p className=\"text-danger\">There is no admin</p>;\n  }\n  if (!adminLoading && !adminError && allAdmins?.length > 0) {\n    content = allAdmins?.map((admin, index) => (\n      <AdminTableRow key={admin?._id} index={index} admin={admin} />\n    ));\n  }\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CardHeaderButton to=\".\" title=\"Super Admin\" />\n            <CCardBody>\n              <span className=\"text-medium-emphasis small\">\n                Here is the list of all admin & mangers\n              </span>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive bordered>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-start\">\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                      Sl. No.\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Role</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"100px\" }}>\n                      Actions\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{content}</CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol>\n          <Manager />\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageAdmins;\n"],"names":["_ref","admin","index","showModal","setShowModal","useState","deleteAdmin","isLoading","deleteLoading","isError","deleteError","isSuccess","deleteSuccess","useDeleteAdminMutation","useEffect","toast","dismiss","error","id","success","_jsxs","_Fragment","children","CTableRow","_jsx","CTableHeaderCell","scope","CTableDataCell","name","email","className","role","Link","to","concat","_id","CButton","color","variant","style","height","width","position","CIcon","icon","cilPencil","top","left","onClick","cilTrash","DeleteModal","deleteThis","manager","deleteManager","useDeleteManagerMutation","useSelector","state","auth","Date","createdAt","toLocaleDateString","EditButton","CTooltip","content","handleDelete","currentUserEmail","Manager","data","useGetAllManagerQuery","Loading","Error","length","map","ManagerTableRowData","CRow","CCol","xs","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody","ManageAdmins","allAdmins","adminLoading","adminError","useGetAllAdminsQuery","AdminTableRow"],"sourceRoot":""}