{"version":3,"file":"static/js/1571.ecf0e118.chunk.js","mappings":"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","sources":["redux/return/returnApi.js","ui/button/DeleteButton.jsx","views/return/ReturnTableRowData.jsx","views/return/ManageReturn.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const returnApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllReturns\", \"SingleReturn\"],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllReturns: builder.query({\n      query: () => ({\n        url: `/return`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllReturns\"],\n    }),\n    // get blog offer discount for new user\n    getSingleReturn: builder.query({\n      query: (id) => ({\n        url: `/return/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleReturn\"],\n    }),\n    // get blog offer discount for new user\n    addNewReturn: builder.mutation({\n      query: (blog) => ({\n        url: `/return`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AllReturns\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleReturn: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/return/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllReturns\", \"SingleReturn\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleReturn: builder.mutation({\n      query: (id) => ({\n        url: `/return/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllReturns\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllReturnsQuery,\n  useGetSingleReturnQuery,\n  useAddNewReturnMutation,\n  useUpdateSingleReturnMutation,\n  useDeleteSingleReturnMutation,\n} = returnApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleReturnMutation } from \"src/redux/return/returnApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst ReturnTableRowData = ({ index, blog }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSinglereturn,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleReturnMutation();\n\n  // delete blog\n  const handleDeleteBlog = () => {\n    deleteSinglereturn(blog?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete return successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete return failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{new Date(blog?.createdAt).toDateString()}</p>\n      </CTableHeaderCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog.description }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog.banglaDescription }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/pages/return/edit/${blog?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteBlog}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={blog._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default ReturnTableRowData;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllReturnsQuery } from \"src/redux/return/returnApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport ReturnTableRowData from \"./ReturnTableRowData\";\n\nconst ManageReturn = () => {\n  const { data: allReturns, isLoading, isError } = useGetAllReturnsQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && allReturns?.data?.length === 0) {\n    content = <p>There is no Return Policy</p>;\n  }\n  if (!isLoading && !isError && allReturns?.data?.length > 0) {\n    content = allReturns?.data.map((blog, index) => (\n      <ReturnTableRowData key={blog?._id} blog={blog} index={index} />\n    ));\n  }\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Return Policy\"} to=\"/pages/return/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ width: \"10rem\" }}>\n                Added Dated\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Bangla description</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageReturn;\n"],"names":["returnApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllReturns","query","url","method","providesTags","getSingleReturn","id","concat","addNewReturn","mutation","blog","body","invalidatesTags","updateSingleReturn","_ref","data","deleteSingleReturn","useGetAllReturnsQuery","useGetSingleReturnQuery","useAddNewReturnMutation","useUpdateSingleReturnMutation","useDeleteSingleReturnMutation","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","index","showModal","useState","deleteSinglereturn","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","CTableHeaderCell","scope","Date","createdAt","toDateString","CTableDataCell","dangerouslySetInnerHTML","__html","description","banglaDescription","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteBlog","ManageReturn","_allReturns$data","_allReturns$data2","allReturns","length","map","ReturnTableRowData","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody"],"sourceRoot":""}