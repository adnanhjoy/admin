{"version":3,"file":"static/js/3836.a353706b.chunk.js","mappings":"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","sources":["ui/ImageLabel.jsx","components/categories/AddCategoryForm.jsx","views/categories/add-category/AddCategory.jsx"],"sourcesContent":["import React from \"react\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\n\nconst ImageLabel = ({ sizes }) => {\n  return (\n    <div className=\"d-flex mt-4 justify-content-center\">\n      <label\n        htmlFor=\"file-upload\"\n        className=\"d-flex flex-column align-items-center border justify-content-center\"\n        style={{ height: \"180px\", width: \"360px\", display: \"block\", cursor: \"pointer\" }}\n      >\n        <FaCloudUploadAlt size={35} style={{ color: \"green\" }} />\n        <p\n          style={{\n            color: \"#0CB363\",\n            fontWeight: \"bold\",\n            marginBottom: \"0px\",\n            fontSize: \"1rem\",\n          }}\n        >\n          Choose file to upload\n        </p>\n        <span style={{ color: \"#ccc\" }}>Allowed JPG, JPEG, PNG and GIF</span>\n        <span style={{ color: \"#ccc\" }}>\n          File must be less than <span style={{ color: \"#afafaf\" }}>2 MB</span>\n        </span>\n        <span style={{ color: \"#0CB363\" }}>Size: {sizes}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default ImageLabel;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/prop-types */\n\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CFormTextarea, CRow } from \"@coreui/react\";\nimport PropTypes from \"prop-types\";\nimport { memo, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport ImageLabel from \"src/ui/ImageLabel\";\nimport CancelButton from \"src/ui/button/CancelButton\";\n\nconst AddCategoryForm = ({ data, onSubmit, updateCategoryLoading, addCategoryLoading, error }) => {\n  const [imagePreview, setImagePreview] = useState(null);\n  const [imageError, setError] = useState(null);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  useEffect(() => {\n    if (data) {\n      for (const key in data) {\n        setValue(key, data[key]);\n      }\n    }\n  }, [data, setValue]);\n\n  function handleFileChange(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      setError(\"File size should be less than 2MB\");\n      setImagePreview(null);\n    } else {\n      setImagePreview(URL.createObjectURL(file));\n      setError(null);\n    }\n  }\n  return (\n    <CForm encType=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\n      <CRow className=\"g-3\">\n        <CCol xs={12}>\n          <label>\n            Category title <span className=\"text-danger\">*</span>\n          </label>\n          <CFormInput\n            type=\"text\"\n            id=\"titleInputField\"\n            placeholder=\"Enter Category\"\n            aria-describedby=\"titleInputField\"\n            {...register(\"title\", {\n              required: { value: !data ? true : false, message: \"Category Name is required\" },\n            })}\n          />\n          {errors?.title?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.title.message}</p>\n          )}\n        </CCol>\n        <CCol xs={12}>\n          <label>Description</label>\n          <CFormTextarea\n            id=\"categoryDescriptionTextareaField\"\n            placeholder=\"Enter Description\"\n            aria-describedby=\"categoryDescriptionTextareaField\"\n            rows=\"3\"\n            {...register(\"description\", {})}\n          ></CFormTextarea>\n          {errors?.description?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.description.message}</p>\n          )}\n        </CCol>\n        <CCol xs={12}>\n          <label>\n            Sorting number <span className=\"text-danger\">*</span>\n          </label>\n          <CFormInput\n            type=\"number\"\n            id=\"sortInputField\"\n            placeholder=\"Enter number to sort\"\n            aria-describedby=\"sortInputField\"\n            {...register(\"sortOrder\", {\n              required: { value: !data ? true : false, message: \"Sort Order is required\" },\n              min: { value: 0, message: \"Number can't negative\" },\n            })}\n          />\n          {errors?.sortOrder?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.sortOrder.message}</p>\n          )}\n          {errors?.sortOrder?.type === \"min\" && (\n            <p className=\"text-danger\">{errors.sortOrder.message}</p>\n          )}\n        </CCol>\n\n        {/* <CCol xs={12}>\n          <label>\n            Category Image <span className=\"text-danger\">*</span>\n          </label>\n          <ImageLabel sizes={\"128 x 128\"} />\n          <CFormInput\n            type=\"file\"\n            id=\"file-upload\"\n            accept=\".jpg, .png, .jpeg, .gif\"\n            aria-describedby=\"file-upload\"\n            style={{\n              border: \"none\",\n              outline: \"none\",\n              backgroundColor: \"transparent\",\n              color: \"transparent\",\n              width: \"0.1px\",\n              height: \"0.1px\",\n              overflow: \"hidden\",\n              position: \"absolute\",\n              zIndex: \"-1\",\n            }}\n            {...register(\"image\", {\n              required: { value: !data ? true : false, message: \"Image is required\" },\n            })}\n            onChange={(e) => handleFileChange(e)}\n          />\n\n          {errors?.title?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.title.message}</p>\n          )}\n\n          {imageError && <p style={{ color: \"red\" }}>{imageError}</p>}\n          {imagePreview && (\n            <CCol className=\"mt-2\" md={3} xs={1}>\n              <Image className=\"my-2\" src={imagePreview} alt=\"Preview Image\" />\n            </CCol>\n          )}\n\n          {data?.image && (\n            <CCol className=\"mt-2\" md={3} xs={1}>\n              <Image src={data?.image} alt={`Product Img`} fluid />\n            </CCol>\n          )}\n        </CCol> */}\n      </CRow>\n      {error && <p className=\"text-danger mt-2 text-end\">{error?.data?.message}</p>}\n      <div className=\"text-end\">\n        <CancelButton />\n        <CButton\n          type={imageError ? \"button\" : \"submit\"}\n          color=\"success\"\n          className=\"mt-3 text-white\"\n        >\n          {updateCategoryLoading || addCategoryLoading ? (\n            \"Loading\"\n          ) : (\n            <>\n              <CIcon icon={cilSave} className=\"me-2\" />\n              {data ? \"Update\" : \"Save\"}\n            </>\n          )}\n        </CButton>\n      </div>\n    </CForm>\n  );\n};\n\nexport default memo(AddCategoryForm);\n\nAddCategoryForm.propTypes = {\n  data: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable prettier/prettier */\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport AddCategoryForm from \"src/components/categories/AddCategoryForm\";\nimport {\n  useAddCategoryMutation,\n  useGetSingleCategoryQuery,\n  useUpdateCategoryMutation,\n} from \"src/redux/category/categoryApi\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\n\nconst AddCategory = () => {\n  const { id } = useParams();\n  const [haveId, setHveId] = useState(true);\n  const navigate = useNavigate();\n\n  // get hooks query\n  const {\n    data: category,\n    isLoading: getCategoryLoading,\n    isError: getCategoryError,\n  } = useGetSingleCategoryQuery(id, { skip: haveId });\n\n  // add mutation\n  const [\n    addCategory,\n    { isLoading: addCategoryLoading, isSuccess: addCategorySuccess, isError, error },\n  ] = useAddCategoryMutation();\n  // update mutation\n  const [\n    updateCategory,\n    {\n      isLoading: updateCategoryLoading,\n      isSuccess: updateCategorySuccess,\n      isError: updateCategoryError,\n    },\n  ] = useUpdateCategoryMutation();\n\n  useEffect(() => {\n    if (id) {\n      setHveId(false);\n    }\n  }, [id]);\n\n  const handleCreateCategory = (data) => {\n    // const formData = new FormData();\n    // const image = data.image[0];\n    // // if (image) formData.append(\"image\", image);\n    // if (data.title) formData.append(\"title\", data.title);\n    // if (data.description) formData.append(\"description\", data.description);\n    // if (data.sortOrder) formData.append(\"sortOrder\", data.sortOrder);\n\n    // update\n    if (id) {\n      updateCategory({ id, data });\n    } else {\n      // create\n      addCategory(data);\n    }\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    // isError && toast.error(\"Category added failed\", { id: \"aError\" });\n    updateCategoryError &&\n      toast.error(\"Category update failed\", {\n        id: \"uError\",\n      });\n  }, [updateCategoryError, updateCategorySuccess, addCategorySuccess, isError]);\n\n  useEffect(() => {\n    updateCategorySuccess && navigate(\"/category\");\n    addCategorySuccess && navigate(\"/category\");\n  }, [updateCategorySuccess, addCategorySuccess]);\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <HeaderBackButton title={id ? \"Update Category\" : \"Add Category\"} />\n\n            <CCardBody>\n              <AddCategoryForm\n                addCategoryLoading={addCategoryLoading}\n                updateCategoryLoading={updateCategoryLoading}\n                data={category?.result}\n                onSubmit={handleCreateCategory}\n                error={error}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default AddCategory;\n"],"names":["_ref","sizes","_jsx","className","children","_jsxs","htmlFor","style","height","width","display","cursor","FaCloudUploadAlt","size","color","fontWeight","marginBottom","fontSize","AddCategoryForm","_errors$title","_errors$description","_errors$sortOrder","_errors$sortOrder2","_error$data","data","onSubmit","updateCategoryLoading","addCategoryLoading","error","imagePreview","setImagePreview","useState","imageError","setError","register","handleSubmit","setValue","formState","errors","useForm","useEffect","key","CForm","encType","CRow","CCol","xs","CFormInput","type","id","placeholder","required","value","message","title","CFormTextarea","rows","description","min","sortOrder","CancelButton","CButton","_Fragment","CIcon","icon","cilSave","memo","AddCategory","useParams","haveId","setHveId","navigate","useNavigate","category","isLoading","getCategoryLoading","isError","getCategoryError","useGetSingleCategoryQuery","skip","addCategory","isSuccess","addCategorySuccess","useAddCategoryMutation","updateCategory","updateCategorySuccess","updateCategoryError","useUpdateCategoryMutation","toast","dismiss","CCard","HeaderBackButton","CCardBody","result"],"sourceRoot":""}