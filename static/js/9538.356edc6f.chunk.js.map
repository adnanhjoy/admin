{"version":3,"file":"static/js/9538.356edc6f.chunk.js","mappings":"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","sources":["redux/flashSaleOffer/flashSaleOfferApi.js","utils/defaultOfferTypeValue.js","views/flashSale/showAll-flashSale-offer/add-flashSale-offer/FlashSaleOfferForm.jsx","views/flashSale/showAll-flashSale-offer/add-flashSale-offer/CreateFlashSaleOffer.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const FlashSaleOfferApi = apiSlice.injectEndpoints({\n  tagTypes: [\"FlashSaleOffer\", \"SingleFlashSaleOffer\"],\n  endpoints: (builder) => ({\n    // get all clearance sale discount for new user\n    getFlashSaleOffer: builder.query({\n      query: () => ({\n        url: `/flashSale-offer`,\n        method: \"GET\",\n      }),\n      providesTags: [\"FlashSaleOffer\"],\n    }),\n\n    // get single clearance discount  by id\n    getSingleFlashSaleOffer: builder.query({\n      query: (id) => ({\n        url: `/flashSale-offer/${id}`,\n        method: \"GET\",\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      providesTags: [\"SingleFlashSaleOffer\"],\n    }),\n\n    //add new  clearance sale discount\n    addFlashSaleOffer: builder.mutation({\n      query: (data) => ({\n        url: `/flashSale-offer`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"FlashSaleOffer\"],\n    }),\n\n    // update clearance sale discount by id\n    updateSingleFlashSaleOffer: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/flashSale-offer/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"FlashSaleOffer\"],\n    }),\n\n    // delete  clearance sale discount by id\n    deleteSingleFlashSaleOfferById: builder.mutation({\n      query: (id) => ({\n        url: `/flashSale-offer/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"FlashSaleOffer\", \"SingleFlashSaleOffer\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetFlashSaleOfferQuery,\n  useGetSingleFlashSaleOfferQuery,\n  useAddFlashSaleOfferMutation,\n  useUpdateSingleFlashSaleOfferMutation,\n  useDeleteSingleFlashSaleOfferByIdMutation,\n} = FlashSaleOfferApi;\n","export const defaultTypesValue = (offers) => {\n  const defaultValue = [];\n  offers?.forEach((o) => {\n    defaultValue.push({ value: o, label: o });\n  });\n  return defaultValue;\n};\n","import { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport { defaultTypesValue } from \"src/utils/defaultOfferTypeValue\";\n\nconst FlashSaleOfferForm = ({\n  onSubmit,\n  loading,\n  data,\n  startDate,\n  setStartDate,\n  endDate,\n  color,\n  setColor,\n  setEndDate,\n}) => {\n  const { id } = useParams();\n  const { handleSubmit, control, register, errors, setValue } = useForm();\n  const { data: allTypes, isLoading: typeLoading, isError: typeError } = useGetAllTypesQuery();\n\n  const typesOptions = allTypes?.data?.map((type) => {\n    return { value: type?.name, label: type?.name };\n  });\n\n  useEffect(() => {\n    if (data) {\n      for (const key in data) {\n        setValue(key, data[key]);\n      }\n      setStartDate(data.startDate);\n      setEndDate(data.endDate);\n    }\n  }, [data, setValue]);\n\n\n  const handleChangeComplete = (newColor) => {\n    setColor(newColor.hex);\n  };\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCol xs={12}>\n        <label className=\"w-100\">Offer name</label>\n        <CFormInput\n          type=\"text\"\n          id=\"titleInputField\"\n          placeholder=\"Enter types name\"\n          aria-describedby=\"titleInputField\"\n          {...register(\"name\", { required: true })}\n        />\n\n        {errors?.name?.type === \"required\" && <p className=\"text-danger\">{\"Name is required\"}</p>}\n      </CCol>\n\n      <CCol xs={12}>\n        <label className=\"mb-0\">Select types for make offer</label>\n        <Controller\n          control={control}\n          name={\"offerType\"}\n          rules={{\n            required: true,\n          }}\n          render={({ field: { onChange, value, name, ref } }) => (\n            <Select\n              className=\"mt-2\"\n              defaultValue={defaultTypesValue(data?.offerType)}\n              inputRef={ref}\n              options={typesOptions}\n              value={typesOptions?.find((option) => option?.value === value)}\n              onChange={(val) => onChange(val?.map((opt) => opt?.value))}\n              isMulti\n            />\n          )}\n        />\n\n        {errors?.offerType?.type === \"required\" && (\n          <p className=\"text-danger\">{\"OfferType is required\"}</p>\n        )}\n      </CCol>\n      <CRow>\n        <CCol xs={6}>\n          <label className=\"text-primary\">Start Date</label>\n          {data && (\n            <label htmlFor=\"\" className=\" d-flex justify-content-between mb-1\">\n              <span>{new Date(startDate).toLocaleDateString()}</span>\n              <span>{new Date(startDate).toLocaleTimeString()}</span>\n            </label>\n          )}\n\n          <CFormInput\n            placeholder=\"Enter Start Date\"\n            aria-describedby=\"startDate\"\n            defaultValue={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            required={data ? false : true}\n            onFocus={(e) => (e.target.type = \"datetime-local\")}\n            onBlur={(e) => (e.target.type = \"text\")}\n          />\n          {errors?.startDate?.type === \"required\" && (\n            <p className=\"text-danger\">{\"Start date is required\"}</p>\n          )}\n        </CCol>\n\n        <CCol xs={6}>\n          <label className=\"text-primary\">End Date</label>\n          {data && (\n            <label htmlFor=\"\" className=\" d-flex justify-content-between mb-1\">\n              <span>{new Date(endDate).toLocaleDateString()}</span>\n              <span>{new Date(endDate).toLocaleTimeString()}</span>\n            </label>\n          )}\n\n          <CFormInput\n            placeholder=\"Enter End Date\"\n            aria-describedby=\"endDate\"\n            defaultValue={endDate}\n            required={data ? false : true}\n            onChange={(e) => setEndDate(e.target.value)}\n            onFocus={(e) => (e.target.type = \"datetime-local\")}\n            onBlur={(e) => (e.target.type = \"text\")}\n          />\n          {errors?.endDate?.type === \"required\" && (\n            <p className=\"text-danger\">{\"End date is required\"}</p>\n          )}\n        </CCol>\n        <CCol className=\"mt-2\" xs={12}>\n          <label className=\"mb-2\">\n            Background Color <span className=\"text-danger\">*</span>\n          </label>\n          <SketchPicker\n            width=\"350px\"\n            color={color}\n            onChangeComplete={handleChangeComplete}\n\n          />\n          <p className=\"mt-2\" style={{ color: `${color}` }}>\n            Selected color: {color}\n          </p>\n        </CCol>\n\n      </CRow>\n\n      <div className=\"text-end  \">\n        <CancelButton />\n        <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n          <CIcon icon={cilSave} className=\"me-2\" />\n          {loading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n        </CButton>\n      </div>\n    </CForm>\n  );\n};\n\nexport default FlashSaleOfferForm;\n","/* eslint-disable prettier/prettier */\n\nimport { CCard, CCardBody, CCardHeader } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport Loading from \"src/ui/Loading\";\nimport {\n  useAddFlashSaleOfferMutation,\n  useGetSingleFlashSaleOfferQuery,\n  useUpdateSingleFlashSaleOfferMutation,\n} from \"src/redux/flashSaleOffer/flashSaleOfferApi\";\nimport FlashSaleOfferForm from \"./FlashSaleOfferForm\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\n\nconst CreateFlashSaleOffer = () => {\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const navigate = useNavigate();\n  const [color, setColor] = useState(\"#FFFFFF\");\n\n\n  const {\n    data: offer,\n    isLoading: getLoading,\n    isError: offerError,\n    error: offerErrorMsg,\n  } = useGetSingleFlashSaleOfferQuery(id, { skip: haveId });\n\n  // flash sale offer types\n\n  const [\n    addFlashSaleOffer,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddFlashSaleOfferMutation();\n\n  const [\n    updateSingleFlashSaleOffer,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleFlashSaleOfferMutation();\n\n  // update or add new term conditions\n  const onSubmit = (data) => {\n    const startingDate = new Date(startDate).getTime();\n    const endingDate = new Date(endDate).getTime();\n    const timeStamps = endingDate - startingDate + (startingDate - Date.now()) + Date.now();\n    const defaultData = offer?.result;\n\n    const modifyData = {\n      ...defaultData,\n      name: data.name || defaultData?.name,\n      startDate: startDate || defaultData?.startDate,\n      endDate: endDate || defaultData?.startDate,\n      timeStamps: timeStamps || defaultData?.timeStamps,\n      offerType: data.offerType || defaultData?.offerType,\n      status: \"active\",\n      color: color\n    };\n\n\n    if (id) {\n      updateSingleFlashSaleOffer({ id, data: modifyData });\n    } else {\n      addFlashSaleOffer(modifyData);\n    }\n\n    \n  };\n\n  useEffect(() => {\n    addError && toast.error(addMsg?.data?.message || \"Added Failed\");\n    updateError && toast.error(updateMsg?.data?.message || \"Updated Failed\");\n  }, [addError, updateError]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n  return (\n    <CCard>\n      <HeaderBackButton title={id ? \"Customize flashSale offer\" : \"Add flashSale offer\"} />\n\n      {getLoading ? (\n        <Loading />\n      ) : (\n        <CCardBody>\n          <FlashSaleOfferForm\n            loading={updateLoading || addLoading}\n            data={offer?.result}\n            onSubmit={onSubmit}\n            startDate={startDate}\n            setStartDate={setStartDate}\n            endDate={endDate}\n            setEndDate={setEndDate}\n            color={color}\n            setColor={setColor}\n          />\n        </CCardBody>\n      )}\n    </CCard>\n  );\n};\n\nexport default CreateFlashSaleOffer;\n"],"names":["FlashSaleOfferApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getFlashSaleOffer","query","url","method","providesTags","getSingleFlashSaleOffer","id","concat","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","addFlashSaleOffer","mutation","data","body","invalidatesTags","updateSingleFlashSaleOffer","_ref","deleteSingleFlashSaleOfferById","useGetFlashSaleOfferQuery","useGetSingleFlashSaleOfferQuery","useAddFlashSaleOfferMutation","useUpdateSingleFlashSaleOfferMutation","useDeleteSingleFlashSaleOfferByIdMutation","defaultTypesValue","offers","defaultValue","forEach","o","push","value","label","_allTypes$data","_errors$name","_errors$offerType","_errors$startDate","_errors$endDate","onSubmit","loading","startDate","setStartDate","endDate","color","setColor","setEndDate","useParams","handleSubmit","control","register","errors","setValue","useForm","allTypes","isLoading","typeLoading","isError","typeError","useGetAllTypesQuery","typesOptions","map","type","name","useEffect","key","_jsxs","CForm","children","CCol","xs","_jsx","className","CFormInput","placeholder","required","Controller","rules","render","_ref2","field","onChange","ref","Select","offerType","inputRef","options","find","option","val","opt","isMulti","CRow","htmlFor","Date","toLocaleDateString","toLocaleTimeString","e","target","onFocus","onBlur","SketchPicker","width","onChangeComplete","newColor","hex","style","CancelButton","CButton","CIcon","icon","cilSave","CreateFlashSaleOffer","haveId","setHaveId","useState","navigate","useNavigate","offer","getLoading","offerError","error","offerErrorMsg","skip","addLoading","addError","isSuccess","addSuccess","addMsg","updateLoading","updateError","updateSuccess","updateMsg","_addMsg$data","_updateMsg$data","toast","message","CCard","HeaderBackButton","title","Loading","CCardBody","FlashSaleOfferForm","result","startingDate","getTime","timeStamps","now","defaultData","modifyData","status"],"sourceRoot":""}