{"version":3,"file":"static/js/8706.c1ae79fc.chunk.js","mappings":"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","sources":["redux/terms&condition/termsConditionApi.js","ui/button/DeleteButton.jsx","views/terms&condition/Term&ConditionTableRow.jsx","views/terms&condition/ManageTerms&Conditions.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const termConditionApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AlltermsCondition\"],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllTermsCondition: builder.query({\n      query: () => ({\n        url: `/termsCondition`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AlltermsCondition\"],\n    }),\n    // get blog offer discount for new user\n    getSingleTermsCondition: builder.query({\n      query: (id) => ({\n        url: `/termsCondition/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n    // get blog offer discount for new user\n    addNewTermCondition: builder.mutation({\n      query: (blog) => ({\n        url: `/termsCondition`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleTermCondition: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/termsCondition/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleTermCondition: builder.mutation({\n      query: (id) => ({\n        url: `/termsCondition/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTermsConditionQuery,\n  useGetSingleTermsConditionQuery,\n  useAddNewTermConditionMutation,\n  useUpdateSingleTermConditionMutation,\n  useDeleteSingleTermConditionMutation,\n} = termConditionApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleTermConditionMutation } from \"src/redux/terms&condition/termsConditionApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst TermsConditionsTableRow = ({ index, blog }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleTermCondition,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleTermConditionMutation();\n\n  // delete blog\n  const handleDeleteBlog = () => {\n    deleteSingleTermCondition(blog?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete blog successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete blog failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{new Date(blog?.createdAt).toDateString()}</p>\n      </CTableHeaderCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog?.description }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog?.banglaDescription }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/pages/terms/edit/${blog?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteBlog}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={blog._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default TermsConditionsTableRow;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllTermsConditionQuery } from \"src/redux/terms&condition/termsConditionApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport TermsConditionsTableRow from \"./Term&ConditionTableRow\";\n\nconst ManageTermsConditions = () => {\n  const { data: allBlogs, isLoading, isError } = useGetAllTermsConditionQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && allBlogs?.data?.length === 0) {\n    content = <p>There is no Terms & condition!</p>;\n  }\n  if (!isLoading && !isError && allBlogs?.data?.length > 0) {\n    content = allBlogs?.data.map((blog, index) => (\n      <TermsConditionsTableRow key={blog?._id} blog={blog} index={index} />\n    ));\n  }\n\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Blogs\"} to=\"/pages/terms/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ width: \"10rem\" }}>\n                Added Dated\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Bangla description</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageTermsConditions;\n"],"names":["termConditionApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllTermsCondition","query","url","method","providesTags","getSingleTermsCondition","id","concat","invalidatesTags","addNewTermCondition","mutation","blog","body","updateSingleTermCondition","_ref","data","deleteSingleTermCondition","useGetAllTermsConditionQuery","useGetSingleTermsConditionQuery","useAddNewTermConditionMutation","useUpdateSingleTermConditionMutation","useDeleteSingleTermConditionMutation","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","index","showModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","CTableHeaderCell","scope","Date","createdAt","toDateString","CTableDataCell","dangerouslySetInnerHTML","__html","description","banglaDescription","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteBlog","ManageTermsConditions","_allBlogs$data","_allBlogs$data2","allBlogs","length","map","TermsConditionsTableRow","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody"],"sourceRoot":""}