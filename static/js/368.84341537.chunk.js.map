{"version":3,"file":"static/js/368.84341537.chunk.js","mappings":"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","sources":["ui/ImageLabel.jsx","views/flashSale/flash-sale-types/addTypes/AddFlashSaleTypes.jsx"],"sourcesContent":["import React from \"react\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\n\nconst ImageLabel = ({ sizes }) => {\n  return (\n    <div className=\"d-flex mt-4 justify-content-center\">\n      <label\n        htmlFor=\"file-upload\"\n        className=\"d-flex flex-column align-items-center border justify-content-center\"\n        style={{ height: \"180px\", width: \"360px\", display: \"block\", cursor: \"pointer\" }}\n      >\n        <FaCloudUploadAlt size={35} style={{ color: \"green\" }} />\n        <p\n          style={{\n            color: \"#0CB363\",\n            fontWeight: \"bold\",\n            marginBottom: \"0px\",\n            fontSize: \"1rem\",\n          }}\n        >\n          Choose file to upload\n        </p>\n        <span style={{ color: \"#ccc\" }}>Allowed JPG, JPEG, PNG and GIF</span>\n        <span style={{ color: \"#ccc\" }}>\n          File must be less than <span style={{ color: \"#afafaf\" }}>2 MB</span>\n        </span>\n        <span style={{ color: \"#0CB363\" }}>Size: {sizes}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default ImageLabel;\n","/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CForm, CFormInput } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  useAddSingleTypesMutation,\n  useGetSingleTypesQuery,\n  useUpdateSingleTypesMutation,\n} from \"src/redux/flashSaleType/flashSaleTypeApi\";\n\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\nimport ImageLabel from \"src/ui/ImageLabel\";\nimport Loading from \"src/ui/Loading\";\n\nconst AddFlashSaleTypes = () => {\n  const [sizeInput, setSizeInput] = useState(\"\");\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const { handleSubmit, register } = useForm();\n  const navigate = useNavigate();\n  const [imagePreview, setImagePreview] = useState(null);\n  const [error, setError] = useState(null);\n\n  const {\n    data: size,\n    isLoading: getLoading,\n    isError: termError,\n    error: termErrorMsg,\n  } = useGetSingleTypesQuery(id, { skip: haveId });\n\n  const [\n    addSingleType,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddSingleTypesMutation();\n\n  const [\n    updateSingleType,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleTypesMutation();\n\n  // update or add new term conditions\n  const onSubmit = (data) => {\n    const image = data.image[0];\n    const formData = new FormData();\n    if (sizeInput) formData.append(\"name\", sizeInput);\n    if (image) formData.append(\"image\", image);\n    if (id) {\n      updateSingleType({ id, data: formData });\n    } else {\n      addSingleType(formData);\n    }\n  };\n\n  //default data set\n  useEffect(() => {\n    if (id) {\n      setSizeInput(size?.data?.name);\n    }\n  }, [id, size?.data]);\n\n  useEffect(() => {\n    addError && toast.error(addError?.data?.message);\n    updateError && toast.error(updateError?.data?.message);\n  }, [addError, updateError]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n\n  function handleFileChange(event) {\n    const file = event.target.files[0];\n    if (file.size > 2 * 1024 * 1024) {\n      setError(\"File size should be less than 2MB\");\n      setImagePreview(null);\n    } else {\n      setImagePreview(URL.createObjectURL(file));\n      setError(null);\n    }\n  }\n\n\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCard>\n        <HeaderBackButton title={id ? \"Customize types\" : \"Add types\"} />\n\n        {getLoading ? (\n          <Loading />\n        ) : (\n          <CCardBody>\n            <CCol xs={12}>\n              <label className=\"w-100\">FlashSale Types Name</label>\n              <CFormInput\n                type=\"text\"\n                id=\"titleInputField\"\n                placeholder=\"Enter types name\"\n                aria-describedby=\"titleInputField\"\n                value={sizeInput}\n                onChange={(e) => setSizeInput(e.target.value)}\n              />\n            </CCol>\n            <CCol xs={12}>\n              <label>Flash Image</label>\n              <ImageLabel sizes={'bannerSize'} />\n              <CFormInput\n                type=\"file\"\n                id=\"file-upload\"\n                accept=\".jpg, .png, .jpeg, .gif\"\n                aria-describedby=\"file-upload\"\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"transparent\",\n                  color: \"transparent\",\n                  width: \"0.1px\",\n                  height: \"0.1px\",\n                  overflow: \"hidden\",\n                  position: \"absolute\",\n                  zIndex: \"-1\",\n                }}\n                {...register(\"image\")}\n                onChange={(e) => handleFileChange(e)}\n              />\n              {error && <p style={{ color: \"red\" }}>{error}</p>}\n              {imagePreview && (\n                <Image\n                  fluid\n                  className=\"my-2\"\n                  height={300}\n                  src={imagePreview}\n                  alt=\"Preview Image\"\n                />\n              )}\n\n              <br />\n              {size?.data?.image && (\n                <Image fluid className=\"my-2\" height={300} src={size?.data?.image} />\n              )}\n            </CCol>\n            <div className=\"text-end  \">\n              <CancelButton />\n              <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n                <CIcon icon={cilSave} className=\"me-2\" />\n                {updateLoading || addLoading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n              </CButton>\n            </div>\n          </CCardBody>\n        )}\n      </CCard>\n    </CForm>\n  );\n};\n\nexport default AddFlashSaleTypes;\n"],"names":["_ref","sizes","_jsx","className","children","_jsxs","htmlFor","style","height","width","display","cursor","FaCloudUploadAlt","size","color","fontWeight","marginBottom","fontSize","AddFlashSaleTypes","_size$data2","_size$data3","sizeInput","setSizeInput","useState","haveId","setHaveId","id","useParams","handleSubmit","register","useForm","navigate","useNavigate","imagePreview","setImagePreview","error","setError","data","isLoading","getLoading","isError","termError","termErrorMsg","useGetSingleTypesQuery","skip","addSingleType","addLoading","addError","isSuccess","addSuccess","addMsg","useAddSingleTypesMutation","updateSingleType","updateLoading","updateError","updateSuccess","updateMsg","useUpdateSingleTypesMutation","useEffect","_size$data","name","_addError$data","_updateError$data","toast","message","CForm","onSubmit","image","formData","FormData","append","CCard","HeaderBackButton","title","Loading","CCardBody","CCol","xs","CFormInput","type","placeholder","value","onChange","e","target","ImageLabel","accept","border","outline","backgroundColor","overflow","position","zIndex","event","file","files","URL","createObjectURL","handleFileChange","Image","fluid","src","alt","CancelButton","CButton","CIcon","icon","cilSave"],"sourceRoot":""}