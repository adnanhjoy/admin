"use strict";(self.webpackChunkmarcella=self.webpackChunkmarcella||[]).push([[7454],{67454:(e,s,a)=>{a.r(s),a.d(s,{default:()=>i});a(65043);var n=a(93946),l=a(10043),d=a(70579);const i=()=>(0,d.jsxs)(n.sK,{children:[(0,d.jsx)(n.UF,{xs:12,children:(0,d.jsxs)(n.E$,{className:"mb-4",children:[(0,d.jsxs)(n.V0,{children:[(0,d.jsx)("strong",{children:"React Range"})," ",(0,d.jsx)("small",{})]}),(0,d.jsxs)(n.W6,{children:[(0,d.jsxs)("p",{className:"text-medium-emphasis small",children:["Create custom ",(0,d.jsx)("code",{children:'<input type="range">'})," controls with"," ",(0,d.jsx)("code",{children:"<CFormRange>"}),"."]}),(0,d.jsxs)(l.Eb,{href:"forms/range",children:[(0,d.jsx)(n.A6,{htmlFor:"customRange1",children:"Example range"}),(0,d.jsx)(n.pY,{id:"customRange1"})]})]})]})}),(0,d.jsx)(n.UF,{xs:12,children:(0,d.jsxs)(n.E$,{className:"mb-4",children:[(0,d.jsxs)(n.V0,{children:[(0,d.jsx)("strong",{children:"React Range"})," ",(0,d.jsx)("small",{children:"Disabled"})]}),(0,d.jsxs)(n.W6,{children:[(0,d.jsxs)("p",{className:"text-medium-emphasis small",children:["Add the ",(0,d.jsx)("code",{children:"disabled"})," boolean attribute on an input to give it a grayed out appearance and remove pointer events."]}),(0,d.jsxs)(l.Eb,{href:"forms/range#disabled",children:[(0,d.jsx)(n.A6,{htmlFor:"disabledRange",children:"Disabled range"}),(0,d.jsx)(n.pY,{id:"disabledRange",disabled:!0})]})]})]})}),(0,d.jsx)(n.UF,{xs:12,children:(0,d.jsxs)(n.E$,{className:"mb-4",children:[(0,d.jsxs)(n.V0,{children:[(0,d.jsx)("strong",{children:"React Range"})," ",(0,d.jsx)("small",{children:"Min and max"})]}),(0,d.jsxs)(n.W6,{children:[(0,d.jsxs)("p",{className:"text-medium-emphasis small",children:["Range inputs have implicit values for ",(0,d.jsx)("code",{children:"min"})," and ",(0,d.jsx)("code",{children:"max"}),"\u2014",(0,d.jsx)("code",{children:"0"})," and ",(0,d.jsx)("code",{children:"100"}),", respectively. You may specify new values for those using the ",(0,d.jsx)("code",{children:"min"})," and ",(0,d.jsx)("code",{children:"max"})," attributes."]}),(0,d.jsxs)(l.Eb,{href:"forms/range#min-and-max",children:[(0,d.jsx)(n.A6,{htmlFor:"customRange2",children:"Example range"}),(0,d.jsx)(n.pY,{min:"0",max:"5",defaultValue:"3",id:"customRange2"})]})]})]})}),(0,d.jsx)(n.UF,{xs:12,children:(0,d.jsxs)(n.E$,{className:"mb-4",children:[(0,d.jsxs)(n.V0,{children:[(0,d.jsx)("strong",{children:"React Range"})," ",(0,d.jsx)("small",{children:"Steps"})]}),(0,d.jsxs)(n.W6,{children:[(0,d.jsxs)("p",{className:"text-medium-emphasis small",children:['By default, range inputs "snap" to integer values. To change this, you can specify a ',(0,d.jsx)("code",{children:"step"})," value. In the example below, we double the number of steps by using ",(0,d.jsx)("code",{children:'step="0.5"'}),"."]}),(0,d.jsxs)(l.Eb,{href:"forms/range#steps",children:[(0,d.jsx)(n.A6,{htmlFor:"customRange3",children:"Example range"}),(0,d.jsx)(n.pY,{min:"0",max:"5",step:"0.5",defaultValue:"3",id:"customRange3"})]})]})]})})]})}}]);
//# sourceMappingURL=7454.edcd6d89.chunk.js.map