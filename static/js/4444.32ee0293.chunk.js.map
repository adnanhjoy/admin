{"version":3,"file":"static/js/4444.32ee0293.chunk.js","mappings":"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","sources":["components/products/GeneralTab.jsx","components/products/DataTab.jsx","components/products/LinksTab.jsx","ui/ImageLibrary/ImageLibraryModal.jsx","components/products/ProductImage.jsx","components/products/ImageTab.jsx","components/products/DiscountTab.jsx","components/products/AddProductForm.jsx","components/products/data.js","redux/manufacture/manufactureApi.js","redux/productType/productTypeApi.js","redux/subCategoryChildren/subCategoryChildrenApi.js","redux/subCategory/subCategoryApi.js","redux/variants/variantsApi.js","utils/getReactQuilModel.js","utils/spaceToDash.js"],"sourcesContent":["import { CCol, CFormInput, CRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport { TagsInput } from \"react-tag-input-component\";\nimport { spaceToDash } from \"src/utils/spaceToDash\";\n\nconst GeneralTabl = ({\n  description,\n  setDescription,\n  shortDescription,\n  setShortDescription,\n  specification,\n  setSpecification,\n  register,\n  modules,\n  errors,\n  productTags,\n  setProductTags,\n  setActiveTab,\n  slugValue,\n  setSlugValue,\n}) => {\n  const [defaultSlug, setDefaultSlug] = useState(slugValue);\n\n  const handleActiveTab = () => {\n    setActiveTab(1);\n  };\n\n  return (\n    <CRow className=\"g-3\">\n      <CCol xs={12}>\n        <label className=\"mb-2\">\n          Name <span className=\"text-danger\">*</span>\n        </label>\n        <CFormInput\n          type=\"text\"\n          id=\"nameInputField\"\n          placeholder=\"Enter Name\"\n          aria-describedby=\"nameInputField\"\n          {...register(\"name\", {\n            required: { value: true, message: \"Name is required\" },\n          })}\n          onFocus={(e) => setDefaultSlug(e.target.value)}\n          onChange={(e) => setDefaultSlug(e.target.value)}\n        />\n        {errors.name?.type === \"required\" && <p className=\"text-danger\">{errors.name.message}</p>}\n      </CCol>\n      <CCol md={11}>\n        <label className=\"mb-2\">\n          URL Slug <span className=\"text-danger\">*</span>\n        </label>\n        <CFormInput\n          type=\"text\"\n          id=\"nameInputField\"\n          placeholder=\"Enter Url slug\"\n          aria-describedby=\"nameInputField\"\n          required\n          value={slugValue}\n          onChange={(e) => setSlugValue(e.target.value)}\n        />\n        {errors.name?.type === \"required\" && <p className=\"text-danger\">{errors.name.message}</p>}\n      </CCol>\n      <CCol style={{ marginTop: \"2.8rem\" }} md={1}>\n        <Button\n          className=\"p-1\"\n          onClick={() => setSlugValue(spaceToDash(defaultSlug.toLocaleLowerCase()))}\n        >\n          Generate\n        </Button>\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"w-100\">Description</label>\n        <ReactQuill\n          className=\"mt-2\"\n          theme=\"snow\"\n          placeholder=\"Enter description\"\n          modules={modules}\n          value={description}\n          onChange={setDescription}\n        />\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"w-100\">Short Description</label>\n        <ReactQuill\n          className=\"mt-2\"\n          theme=\"snow\"\n          placeholder=\"Enter short description\"\n          modules={modules}\n          value={shortDescription}\n          onChange={setShortDescription}\n        />\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"w-100\">Specification</label>\n        <ReactQuill\n          className=\"mt-2\"\n          theme=\"snow\"\n          placeholder=\"Enter specification\"\n          modules={modules}\n          value={specification}\n          onChange={setSpecification}\n        />\n      </CCol>\n\n      {productTags && (\n        <CCol xs={12}>\n          <label className=\"mb-2\">\n            Tags <span className=\"text-danger\">*</span>\n          </label>\n          <TagsInput separators={\",\"} required value={productTags} onChange={setProductTags} name=\"tags\" />\n          <div className=\"text-muted\">Press commas , to add new tag</div>\n        </CCol>\n      )}\n\n      <div className=\"d-flex justify-content-end\">\n        <Button onClick={handleActiveTab}>Next</Button>\n      </div>\n    </CRow>\n  );\n};\n\nexport default GeneralTabl;\n","import { CCol, CFormInput, CFormLabel, CRow } from \"@coreui/react\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { getDefaultData, getModifiedCategories } from \"./data\";\nimport { useGetAllColorQuery, useGetAllSizeQuery } from \"src/redux/variants/variantsApi\";\nimport { Button } from \"react-bootstrap\";\n\nconst DataTab = ({ register, errors, control, color, size, setActiveTab }) => {\n  const { data: allColors } = useGetAllColorQuery();\n  const { data: allSizes } = useGetAllSizeQuery();\n\n  // color options\n  const colorOptions = getModifiedCategories(allColors?.data);\n  // size options\n  const sizeOptions = getModifiedCategories(allSizes?.data);\n\n  const handlePrev = () => {\n    setActiveTab(0);\n  };\n  const handleNext = () => {\n    setActiveTab(2);\n  };\n  return (\n    <CRow className=\"g-3\">\n      <CCol xs={12}>\n        <label className=\"mb-2\">Model</label>\n        <CFormInput\n          type=\"text\"\n          id=\"modelInputField\"\n          placeholder=\"Enter Model\"\n          cd\n          aria-describedby=\"modelInputField\"\n          {...register(\"model\")}\n        />\n        {/* {errors.model?.type === \"required\" && <p className=\"text-danger\">{\"Model is required\"}</p>} */}\n      </CCol>\n\n      <CCol xs={12}>\n        <CFormLabel>Expire Date</CFormLabel>\n        <CFormInput\n          type=\"text\"\n          id=\"expireDate\"\n          placeholder=\"Enter Expire Date\"\n          aria-describedby=\"expireDate\"\n          onFocus={(e) => (e.target.type = \"date\")}\n          onBlur={(e) => (e.target.type = \"text\")}\n          // defaultValue={data ? new Date(data?.expireDate).toISOString().split(\"T\")[0] : null}\n          {...register(\"expireDate\")}\n        />\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"w-100\">Size</label>\n        <Controller\n          control={control}\n          name={\"size\"}\n          render={({ field: { onChange, value, name, ref } }) => (\n            <Select\n              className=\"mt-2\"\n              defaultValue={getDefaultData(size)}\n              inputRef={ref}\n              options={sizeOptions}\n              value={sizeOptions?.find((option) => option.value === value)}\n              onChange={(val) => onChange(val?.map((opt) => opt.value))}\n              isMulti\n            />\n          )}\n        />\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"w-100\">Color</label>\n        <Controller\n          control={control}\n          name={\"color\"}\n          render={({ field: { onChange, value, name, ref } }) => (\n            <Select\n              className=\"mt-2\"\n              defaultValue={getDefaultData(color)}\n              inputRef={ref}\n              options={colorOptions}\n              value={colorOptions?.find((option) => option.value === value)}\n              onChange={(val) => onChange(val?.map((opt) => opt.value))}\n              isMulti\n            />\n          )}\n        />\n      </CCol>\n\n      <div className=\"d-flex justify-content-end gap-2\">\n        <Button onClick={handlePrev}>Prev</Button>\n        <Button onClick={handleNext}>Next</Button>\n      </div>\n    </CRow>\n  );\n};\n\nexport default DataTab;\n","import { CCol, CFormSelect, CRow } from \"@coreui/react\";\nimport { Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { getDefaultData, getModifiedCategories, getModifiedManufactures } from \"./data\";\nimport { useGetAllCategoryQuery } from \"src/redux/category/categoryApi\";\nimport { useGetFilterSubCategoryQuery } from \"src/redux/subCategory/subCategoryApi\";\nimport { useGetFilterSubCategoryChildrenQuery } from \"src/redux/subCategoryChildren/subCategoryChildrenApi\";\nimport { useGetAllManufactureQuery } from \"src/redux/manufacture/manufactureApi\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useGetAllproductTypeQuery } from \"src/redux/productType/productTypeApi\";\n\nconst statusOptions = [\n  { value: \"IN-STOCK\", label: \"In-stock\" },\n  { value: \"OUT-OF-STOCK\", label: \"Out-of-stock\" },\n  { value: \"PRE-ORDER\", label: \"Pre-order\" },\n];\n\n// const productTypeOptions = [\n//   // { value: \"regular-products\", label: \"Regular products\" },\n//   // { value: \"new-arrivals\", label: \"New Arrivals\" },\n//   // { value: \"featured-products\", label: \"Featured Products\" },\n//   { value: \"popular-products\", label: \"Popular Products\" },\n//   { value: \"mens-fashion\", label: \"Men's Fashion\" },\n//   { value: \"Womens-fashion\", label: \"Women's Fashion\" },\n//   { value: \"mobile-and-gadgets\", label: \"Mobile And Gadgets\" },\n//   { value: \"home-appliance\", label: \"Home Appliance\" },\n//   { value: \"computing-and-gaming\", label: \"Computing And Gaming\" },\n// ];\n\nconst LinksTab = ({\n  flashSale,\n  flashSaleType,\n  setFlashSaleType,\n  errors,\n  register,\n  control,\n  data,\n  allTypes,\n  selectedStatus,\n  setSelectedStatus,\n  manufacturer,\n  setManufacturer,\n  setActiveTab,\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedSubCategory, setSelectedSubCategory] = useState(\"\");\n  const [selectedSubChildrenCategory, setSelectedSubChildrenCategory] = useState(\"\");\n  const { data: productType } = useGetAllproductTypeQuery()\n  const { data: categories } = useGetAllCategoryQuery();\n  const { data: subcategories } = useGetFilterSubCategoryQuery(selectedCategory);\n  const { data: subcategoriesChildren } = useGetFilterSubCategoryChildrenQuery(selectedSubCategory);\n  const { data: manufacturers } = useGetAllManufactureQuery();\n\n  // Category options\n  const modifiedCategories = getModifiedCategories(categories?.result);\n  // subcategory options\n  const modifiedSubcategories = getModifiedCategories(subcategories?.result);\n  // subcategory children options\n  const modifiedSubcategoryChildren = getModifiedCategories(subcategoriesChildren?.result);\n  // manufacturer options two arguments for find manufacturer\n\n  const manufacturerOptions = getModifiedManufactures(manufacturers?.result);\n\n  const typesOptions = [];\n  allTypes?.forEach((t) => {\n    typesOptions.push({ label: t.name, value: t.name });\n  });\n\n\n  const productTypeOptions = [];\n  productType?.result?.forEach((t) => {\n    productTypeOptions.push({ label: t.title, value: t.title });\n  });\n\n\n\n\n  const handlePrev = () => {\n    setActiveTab(2);\n  };\n  const handleNext = () => {\n    setActiveTab(4);\n  };\n\n  const handleCategoryChange = (selectedOptions) => {\n    setSelectedCategory(selectedOptions);\n    setSelectedSubCategory(\"\");\n    setSelectedSubChildrenCategory(\"\");\n  };\n\n  const handleSubCategoryChange = (selectedOptions) => {\n    setSelectedSubCategory(selectedOptions);\n    setSelectedSubChildrenCategory(\"\");\n  };\n\n  const handleSubChildrenCategoryChange = (selectedOptions) => {\n    setSelectedSubChildrenCategory(selectedOptions);\n  };\n\n  return (\n    <CRow className=\"g-3\">\n      {flashSale ? (\n        <CCol xs={12}>\n          <label className=\"mb-2\">\n            FlashSale type <span className=\"text-danger\">*</span>\n          </label>\n          <CFormSelect\n            aria-label=\"Product Select Selection Field\"\n            value={flashSaleType}\n            onChange={(e) => setFlashSaleType(e.target.value)}\n            required\n            options={[{ value: '', label: 'Select' }, ...typesOptions]}\n          />\n\n          {errors.offerType?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.offerType.message}</p>\n          )}\n        </CCol>\n      ) : (\n        <CCol xs={12}>\n          <label className=\"mb-2\">\n            Product type <span className=\"text-danger\">*</span>\n          </label>\n          <CFormSelect\n            aria-label=\"Product Select Selection Field\"\n            options={productTypeOptions}\n            {...register(\"productType\", {\n              required: true,\n            })}\n          />\n\n          {errors.productType?.type === \"required\" && (\n            <p className=\"text-danger\">{errors.price.message}</p>\n          )}\n        </CCol>\n      )}\n      {/* if flash sale product use this form then no need category filed */}\n      {!flashSale && (\n        <CCol xs={12}>\n          <CRow>\n            <CCol xs={12}>\n              <label className=\"mb-2\">\n                Categories <span className=\"text-danger\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name={\"categories\"}\n                rules={{\n                  required: true,\n                }}\n                render={({ field: { onChange, value, name, ref } }) => (\n                  <Select\n                    className=\"mt-2\"\n                    defaultValue={getDefaultData(data?.categories)}\n                    inputRef={ref}\n                    options={modifiedCategories}\n                    value={modifiedCategories?.find((option) => option.value === value)}\n                    onChange={(selectedOptions) => {\n                      onChange(selectedOptions);\n                      handleCategoryChange(selectedOptions.value._id);\n                    }}\n                  />\n                )}\n              />\n\n              {errors.categories && <p className=\"text-danger\">Category is required</p>}\n            </CCol>\n            <CCol xs={12} className=\"\">\n              <label className=\"w-100\">Subcategories</label>\n              <Controller\n                control={control}\n                name={\"subcategories\"}\n                render={({ field: { onChange, value, name, ref } }) => (\n                  <Select\n                    className=\"mt-2\"\n                    defaultValue={getDefaultData(data?.subcategories)}\n                    inputRef={ref}\n                    isDisabled={!selectedCategory}\n                    options={modifiedSubcategories}\n                    value={modifiedSubcategories?.find((option) => option.value === value)}\n                    onChange={(selectedOptions) => {\n                      onChange(selectedOptions);\n\n                      handleSubCategoryChange(selectedOptions.value._id);\n                    }}\n                  // isMulti\n                  />\n                )}\n              />\n\n              {/* {errors.subcategories && <p className=\"text-danger\">Subcategory is required</p>} */}\n            </CCol>\n            <CCol xs={12} className=\"\">\n              <label className=\"w-100\">Subcategory Children</label>\n              <Controller\n                control={control}\n                name={\"subcategoryChildren\"}\n                render={({ field: { onChange, value, name, ref } }) => (\n                  <Select\n                    className=\"mt-2\"\n                    defaultValue={getDefaultData(data?.subcategoryChildren)}\n                    inputRef={ref}\n                    isDisabled={!selectedSubCategory}\n                    options={modifiedSubcategoryChildren}\n                    value={modifiedSubcategoryChildren?.find((option) => option.value === value)}\n                    onChange={(selectedOptions) => {\n                      onChange(selectedOptions);\n                      // const selectedValues = selectedOptions\n                      //   ? selectedOptions.map((option) => option.value?._id)\n                      //   : [];\n                      handleSubChildrenCategoryChange(selectedOptions.value._id);\n                    }}\n                  // isMulti\n                  />\n                )}\n              />\n            </CCol>\n          </CRow>\n        </CCol>\n      )}\n      <CCol xs={12}>\n        <CFormSelect\n          label=\"Brand\"\n          aria-label=\"Product Select Selection Field\"\n          value={manufacturer}\n          onChange={(e) => setManufacturer(e.target?.value)}\n          options={manufacturerOptions}\n        />\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"mb-2\">\n          Status <span className=\"text-danger\">*</span>\n        </label>\n        <CFormSelect\n          aria-label=\"Product Select Selection Field\"\n          options={statusOptions}\n          {...register(\"status\", {\n            required: { value: true, message: \"Status is required\" },\n          })}\n          value={selectedStatus}\n          onChange={(e) => setSelectedStatus(e.target.value)}\n        />\n        {errors.status?.type === \"required\" && (\n          <p className=\"text-danger\">{errors.status.message}</p>\n        )}\n      </CCol>\n\n      <div className=\"d-flex justify-content-end gap-2\">\n        <Button onClick={handlePrev}>Prev</Button>\n        <Button onClick={handleNext}>Next</Button>\n      </div>\n    </CRow>\n  );\n};\n\nexport default LinksTab;\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable prettier/prettier */\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalHeader,\r\n} from \"@coreui/react\";\r\nimport \"./imageLibrary.scss\";\r\nimport { useGetProductImagesQuery } from \"src/redux/products/productsApi\";\r\nimport { Button, Image } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst ImageLibraryModal = ({ showModal, setShowModal, handleUpload }) => {\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const { data } = useGetProductImagesQuery(`page=${pageNumber}`);\r\n    const [selectedImage, setSelectedImages] = useState([]);\r\n    const handleSelect = (id) => {\r\n        const isExist = selectedImage?.includes(id);\r\n        if (isExist) {\r\n            // If the ID exists, filter it out (remove from the array)\r\n            setSelectedImages(prev => prev.filter(i => i !== id));\r\n        } else {\r\n            // If the ID doesn't exist, add it to the array\r\n            setSelectedImages(prev => [...prev, id]);\r\n\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CModal\r\n            visible={showModal}\r\n            onClose={() => {\r\n                setShowModal(false);\r\n            }}\r\n            className=\"image-library\"\r\n        >\r\n            <CModalHeader style={{ border: 'none' }} closeButton>Upload from gallery</CModalHeader>\r\n            <CModalBody>\r\n                <div className=\"library-image-container\">\r\n                    {\r\n                        data?.data?.map(d => (\r\n                            d.images.map((url, idx) =>\r\n                                <div key={idx} className=\"library-image \" >\r\n                                    <Image src={url} />\r\n                                    <input\r\n                                        onClick={() => handleSelect(url)}\r\n                                        className={`${selectedImage?.includes(url) ? \"image-selected\" : \"\"}`}\r\n                                        type=\"checkbox\"\r\n                                        defaultChecked={selectedImage?.includes(url)}\r\n                                    />\r\n                                </div>)\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center mt-3 \" >\r\n                    <Button disabled={pageNumber <= 1} className=\"me-2\" onClick={() => setPageNumber(pageNumber - 1)} size=\"sm\">Prev</Button>\r\n                    <Button onClick={() => setPageNumber(pageNumber + 1)} size=\"sm\">Next</Button>\r\n                </div>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <CButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        setShowModal(false);\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </CButton>\r\n                <CButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                        handleUpload(selectedImage)\r\n                        setShowModal(false);\r\n                    }}\r\n                >\r\n                    Upload\r\n                </CButton>\r\n            </CModalFooter>\r\n        </CModal >\r\n    );\r\n};\r\n\r\nexport default ImageLibraryModal;\r\n","/* eslint-disable prettier/prettier */\r\nimport { CCol, CFormInput } from '@coreui/react';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, Image, Stack } from 'react-bootstrap';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\nimport ImageLibraryModal from 'src/ui/ImageLibrary/ImageLibraryModal';\r\n\r\nconst ProductImage = ({ register, setImages, errors, images, setRemainingImages, remainingImages, data, handleDeletePreview, libraryUrls, setLibraryUrls }) => {\r\n    const [error, setError] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setRemainingImages(data?.images);\r\n    }, [data?.images]);\r\n\r\n    function handleFileChange(event) {\r\n        const file = event.target.files[0];\r\n        if (file.size > 2 * 1024 * 1024) {\r\n            setError(\"File size should be less than 2MB\");\r\n            setImagePreview(null);\r\n        } else {\r\n            setImagePreview(URL.createObjectURL(file));\r\n            setError(null);\r\n        }\r\n    }\r\n\r\n    const handleRemoveImage = (url) => {\r\n        remainingImages?.length > 1 && setRemainingImages((prev) => prev.filter((u) => u !== url));\r\n    };\r\n\r\n    const handleUpload = (urls) => {\r\n        setLibraryUrls(urls)\r\n    }\r\n    const handleDeleteLibraryUrls = (url) => {\r\n        setLibraryUrls((prev) => prev.filter((u) => u !== url))\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <CCol xs={12}>\r\n                <label htmlFor=\"\" className=\"mb-2\">\r\n                    Product Images <small>(1080 x 1080)</small>\r\n                </label>\r\n                <div className=\"d-flex align-items-end gap-2\">\r\n                    <CFormInput\r\n                        type=\"file\"\r\n                        id=\"file-upload\"\r\n                        accept=\".jpg, .png, .jpeg, .gif\"\r\n                        multiple\r\n                        aria-describedby=\"file-upload\"\r\n                        {...register(\"images\", {\r\n                            // required: {\r\n                            //   value: data ? false : true,\r\n                            //   message: \"Image is required\",\r\n                            // },\r\n                        })}\r\n                        onChange={(e) => {\r\n                            setImages(e.target.files);\r\n                            handleFileChange(e);\r\n                        }}\r\n                    />\r\n                    <Button type='button' onClick={() => setShowModal(true)} className=\"p-1 w-50\">\r\n                        Upload from Image Library\r\n                    </Button>\r\n                    <ImageLibraryModal handleUpload={handleUpload} setShowModal={setShowModal} showModal={showModal} />\r\n                </div>\r\n            </CCol>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            {errors.images && <p className=\"text-danger\">Image is required</p>}\r\n            {!error && images &&\r\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {[...images]?.map((file, index) => (\r\n                        <div key={index} className=\"image-container\">\r\n                            <img\r\n                                src={URL.createObjectURL(file)}\r\n                                alt={`Product Imaged Preview ${index + 1}`}\r\n                                className=\"image-preview\"\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"delete-button\"\r\n                                onClick={() => handleDeletePreview(index)}\r\n                            >\r\n                                <RiDeleteBinLine size={24} color=\"white\" />\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            }\r\n            {<div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                {libraryUrls?.map((file, index) => (\r\n                    <div key={index} className=\"image-container\">\r\n                        <img\r\n                            src={file}\r\n                            alt={`Product Imaged Preview ${index + 1}`}\r\n                            className=\"image-preview\"\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"delete-button\"\r\n                            onClick={() => handleDeleteLibraryUrls(file)}\r\n                        >\r\n                            <RiDeleteBinLine size={24} color=\"white\" />\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            }\r\n            <Stack gap={4} direction=\"horizontal\" className=\"d-flex flex-wrap mt-4\">\r\n                {remainingImages?.map((url, index) => (\r\n                    <CCol md={3} xs={1} key={index}>\r\n                        <div className=\"border p-2 position-relative\" style={{ maxWidth: \"200px\" }}>\r\n                            <Image src={url} alt={`Product Img`} fluid />\r\n                            <div\r\n                                className=\" position-absolute \"\r\n                                style={{\r\n                                    top: \"-22px\",\r\n                                    left: \"93%\",\r\n                                    width: \"100%\",\r\n                                }}\r\n                            >\r\n                                <button\r\n                                    type='button'\r\n                                    // disabled={remainingImages?.length === 1}\r\n                                    onClick={() => handleRemoveImage(url)}\r\n                                    className=\"rounded-circle fs-5 border-0 px-2 d-flex justify-content-center align-items-center \"\r\n                                >\r\n                                    x\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </CCol>\r\n                ))}\r\n            </Stack>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductImage;","// import { CCol, CFormInput, CRow } from \"@coreui/react\";\n// import { useEffect, useState } from \"react\";\n// import { Button, Image, Stack } from \"react-bootstrap\";\n// import ImageLabel from \"src/ui/ImageLabel\";\n\n// const ImageTab = ({\n//   errors,\n//   register,\n//   data,\n//   images,\n//   setImages,\n//   remainingImages,\n//   setRemainingImages,\n//   setActiveTab,\n// }) => {\n//   const [error, setError] = useState(null);\n//   const [imagePreview, setImagePreview] = useState(null);\n//   // set remaining images\n//   useEffect(() => {\n//     setRemainingImages(data?.images);\n//   }, [data?.images]);\n\n//   // handle remove images\n//   const handleRemoveImage = (url) => {\n//     remainingImages?.length > 1 && setRemainingImages((prev) => prev.filter((u) => u !== url));\n//   };\n\n//   // pev button\n//   const handlePrev = () => {\n//     setActiveTab(3);\n//   };\n\n//   function handleFileChange(event) {\n//     const file = event.target.files[0];\n//     if (file.size > 2 * 1024 * 1024) {\n//       setError(\"File size should be less than 2MB\");\n//       setImagePreview(null);\n//     } else {\n//       setImagePreview(URL.createObjectURL(file));\n//       setError(null);\n//     }\n//   }\n\n//   return (\n//     <>\n//       <CRow className=\"g-3 product_image_row\">\n//         <CCol xs={12}>\n//           <label className=\"mb-2\">Alt tag</label>\n//           <CFormInput\n//             type=\"text\"\n//             id=\"altInputField\"\n//             placeholder=\"Enter alt tag\"\n//             aria-describedby=\"altInputField\"\n//             {...register(\"altTag\")}\n//           />\n//         </CCol>\n//         <ImageLabel sizes={\"1080 x 1080\"} />\n//         <CCol xs={12}>\n//           <CFormInput\n//             type=\"file\"\n//             id=\"file-upload\"\n//             accept=\".jpg, .png, .jpeg, .gif, \"\n//             multiple\n//             aria-describedby=\"file-upload\"\n//             style={{\n//               border: \"none\",\n//               outline: \"none\",\n//               backgroundColor: \"transparent\",\n//               color: \"transparent\",\n//               width: \"0.1px\",\n//               height: \"0.1px\",\n//               overflow: \"hidden\",\n//               position: \"absolute\",\n//               zIndex: \"-1\",\n//             }}\n//             {...register(\"images\", {\n//               required: {\n//                 value: data ? false : true,\n//                 message: \"Image is required\",\n//               },\n//             })}\n//             onChange={(e) => {\n//               setImages(e.target.files);\n//               handleFileChange(e);\n//             }}\n//           />\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n//           {errors.images && <p className=\"text-danger\">Image is required</p>}\n//         </CCol>\n//         {!error &&\n//           images &&\n//           [...images]?.map((file, index) => (\n//             <CCol md={3} xs={1} key={index}>\n//               <Image src={URL.createObjectURL(file)} alt={`Product Img ${index}`} fluid />\n//             </CCol>\n//           ))}\n//         <Stack gap={4} direction=\"horizontal\" className=\"d-flex flex-wrap mt-4\">\n//           {remainingImages?.map((url, index) => (\n//             <CCol md={3} xs={1} key={index}>\n//               <div className=\"border p-2 position-relative\" style={{ maxWidth: \"200px\" }}>\n//                 <Image src={url} alt={`Product Img`} fluid />\n//                 <div\n//                   className=\" position-absolute \"\n//                   style={{\n//                     top: \"-22px\",\n//                     left: \"93%\",\n//                     width: \"100%\",\n//                   }}\n//                 >\n//                   <button\n//                     disabled={remainingImages?.length === 1}\n//                     onClick={() => handleRemoveImage(url)}\n//                     className=\"rounded-circle fs-5 border-0 px-2 d-flex justify-content-center align-items-center \"\n//                   >\n//                     x\n//                   </button>\n//                 </div>\n//               </div>\n//             </CCol>\n//           ))}\n//         </Stack>\n//       </CRow>\n//       <CRow md={{ cols: 4 }} xs={{ cols: 1 }}></CRow>\n//       <div className=\"d-flex justify-content-end gap-2\">\n//         <Button onClick={handlePrev}>Prev</Button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default ImageTab;\n\n/* eslint-disable jsx-a11y/img-redundant-alt */\nimport { CCol, CFormInput, CRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./image.css\";\nimport ProductImage from \"./ProductImage\";\n\nconst ImageTab = ({\n  errors,\n  register,\n  data,\n  images,\n  setImages,\n  remainingImages,\n  setRemainingImages,\n  setActiveTab,\n  libraryUrls, setLibraryUrls\n}) => {\n\n  const handlePrev = () => {\n    setActiveTab(3);\n  };\n  const [variationIcon, setVariationIcon] = useState(null);\n\n  function handleDeletePreview(index, isVariation) {\n    const deletedImages = isVariation ? variationIcon : images;\n    const updatedIcons = [...deletedImages];\n    updatedIcons.splice(index, 1);\n    if (isVariation) {\n      setVariationIcon(updatedIcons);\n    } else {\n      setImages(updatedIcons)\n    }\n  }\n  return (\n    <>\n      <CRow className=\"g-3 product_image_row\">\n        <CCol xs={12}>\n          <CFormInput\n            type=\"text\"\n            id=\"altTag\"\n            label=\"Images alt tag \"\n            placeholder=\"Images alt tag\"\n            aria-describedby=\"altTag\"\n            {...register(\"altTag\")}\n          />\n        </CCol>\n\n        <ProductImage data={data} errors={errors} images={images} register={register} remainingImages={remainingImages} setImages={setImages} setRemainingImages={setRemainingImages} handleDeletePreview={handleDeletePreview}\n          libraryUrls={libraryUrls}\n          setLibraryUrls={setLibraryUrls}\n        />\n      </CRow>\n\n      <div className=\"d-flex justify-content-end gap-2\">\n        <Button onClick={handlePrev}>Prev</Button>\n      </div>\n    </>\n  );\n};\n\nexport default ImageTab;\n","import { CCol, CFormCheck, CFormInput, CRow } from \"@coreui/react\";\nimport { Button } from \"react-bootstrap\";\n\nconst DiscountTab = ({ register, errors, setActiveTab }) => {\n  const handlePrev = () => {\n    setActiveTab(1);\n  };\n  const handleNext = () => {\n    setActiveTab(3);\n  };\n  return (\n    <CRow className=\"g-3\">\n      <CCol xs={12}>\n        <label className=\"mb-2\">\n          Price <span className=\"text-danger\">*</span>\n        </label>\n        <CFormInput\n          type=\"Number\"\n          id=\"priceInputField\"\n          placeholder=\"Enter Price\"\n          aria-describedby=\"priceInputField\"\n          min={\"0\"}\n          {...register(\"price\", {\n            required: { value: true, message: \"Price  is required\" },\n          })}\n        />\n        {errors.price?.type === \"required\" && <p className=\"text-danger\">{errors.price.message}</p>}\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"mb-2\">Offer Price</label>\n        <CFormInput\n          type=\"Number\"\n          id=\"priceInputField\"\n          placeholder=\"Enter Price\"\n          aria-describedby=\"priceInputField\"\n          min={\"0\"}\n          {...register(\"offerPrice\", {})}\n        />\n        {errors.price?.type === \"required\" && <p className=\"text-danger\">{errors.price.message}</p>}\n      </CCol>\n      <CCol xs={12}>\n        <label className=\"mb-2\">\n          Quantity <span className=\"text-danger\">*</span>\n        </label>\n        <CFormInput\n          type=\"number\"\n          id=\"quantityInputField\"\n          placeholder=\"Enter quantity\"\n          aria-describedby=\"quantityInputField\"\n          min={\"1\"}\n          {...register(\"quantity\", {\n            required: { value: true, message: \"Quantity is required\" },\n            min: { value: 1, message: \"Quantity must be greater than 1\" },\n          })}\n        />\n        {errors.quantity?.type === \"required\" && (\n          <p className=\"text-danger\">{errors.quantity.message}</p>\n        )}\n        {errors.quantity?.type === \"min\" && (\n          <p className=\"text-danger\">{errors.quantity.message}</p>\n        )}\n      </CCol>\n\n      <CCol>\n        <CFormCheck {...register(\"freeShipping\", {})} id=\"flexCheckDefault\" label=\"Free Shipping\" />\n      </CCol>\n\n      {/* <CCol xs={12}>\n        <CFormInput\n          type=\"Number\"\n          id=\"discountInputField\"\n          label=\"Discount by Percentage (if offer price not provided)\"\n          placeholder=\"Enter Discount\"\n          aria-describedby=\"discountInputField\"\n          min={\"0\"}\n          max={\"100\"}\n          {...register(\"discountPercentage\")}\n        />\n      </CCol> */}\n\n      <div className=\"d-flex justify-content-end gap-2\">\n        <Button onClick={handlePrev}>Prev</Button>\n        <Button onClick={handleNext}>Next</Button>\n      </div>\n    </CRow>\n  );\n};\n\nexport default DiscountTab;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/prop-types */\nimport { CForm } from \"@coreui/react\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { getModels } from \"src/utils/getReactQuilModel\";\nimport GeneralTab from \"./GeneralTab\";\nimport DataTab from \"./DataTab\";\nimport LinksTab from \"./LinksTab\";\nimport ImageTab from \"./ImageTab\";\nimport DiscountTab from \"./DiscountTab\";\n\nconst AddProductForm = ({\n  data,\n  onSubmit,\n  productTags,\n  setProductTags,\n  images,\n  setImages,\n  description,\n  setDescription,\n  shortDescription,\n  setShortDescription,\n  specification,\n  setSpecification,\n\n  selectedStatus,\n  setSelectedStatus,\n  setRemainingImages,\n  remainingImages,\n  manufacturer,\n  setManufacturer,\n  setLibraryUrls,\n  libraryUrls,\n  slugValue,\n  setSlugValue,\n\n  // flash sale props\n  setFlashSaleType,\n  flashSaleType,\n  flashSale,\n  allTypes,\n}) => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    control,\n  } = useForm();\n\n  useEffect(() => {\n    if (data) {\n      for (const key in data) {\n        if (key === \"expireDate\") {\n          setValue(key, new Date(data[key]).toLocaleDateString());\n        }\n\n        if (key === \"flashSaleOfferType\") {\n          setValue(key, data[key]);\n        } else {\n          setValue(key, data[key]);\n        }\n      }\n    }\n  }, [data, setValue]);\n\n  // AllTypes OPTIONS for FlashSale products\n\n  // import modules for react quill\n  const modules = getModels();\n\n  const handleTabSelect = (tab) => {\n    setActiveTab(tab);\n  };\n\n  return (\n    <CForm id=\"addProductForm1\" onSubmit={handleSubmit(onSubmit)}>\n      <Tabs\n        onSelect={(e) => handleTabSelect(e)}\n        activeKey={activeTab}\n        id=\"uncontrolled-tab-example\"\n        className=\"mb-3\"\n      >\n        {/* General tab */}\n        <Tab eventKey={0} title=\"General\">\n          <GeneralTab\n            register={register}\n            modules={modules}\n            errors={errors}\n            description={description}\n            setDescription={setDescription}\n            shortDescription={shortDescription}\n            setShortDescription={setShortDescription}\n            specification={specification}\n            setSpecification={setSpecification}\n            productTags={productTags}\n            setProductTags={setProductTags}\n            setActiveTab={setActiveTab}\n            slugValue={slugValue}\n            setSlugValue={setSlugValue}\n          />\n        </Tab>\n        {/* Data tab */}\n        <Tab eventKey={1} title=\"Data\">\n          <DataTab\n            register={register}\n            control={control}\n            errors={errors}\n            color={data?.color}\n            size={data?.size}\n            setActiveTab={setActiveTab}\n          />\n        </Tab>\n\n        {/* Discount tags */}\n        <Tab eventKey={2} title=\"Product\">\n          <DiscountTab errors={errors} register={register} setActiveTab={setActiveTab} />\n        </Tab>\n\n        {/* Links tags */}\n        <Tab eventKey={3} title=\"Links\">\n          <LinksTab\n            errors={errors}\n            register={register}\n            control={control}\n            data={data}\n            setFlashSaleType={setFlashSaleType}\n            flashSaleType={flashSaleType}\n            flashSale={flashSale}\n            allTypes={allTypes}\n            selectedStatus={selectedStatus}\n            setSelectedStatus={setSelectedStatus}\n            manufacturer={manufacturer}\n            setManufacturer={setManufacturer}\n            setActiveTab={setActiveTab}\n          />\n        </Tab>\n\n        {/* Images tab */}\n        <Tab eventKey={4} title=\"Image\">\n          <ImageTab\n            errors={errors}\n            register={register}\n            data={data}\n            remainingImages={remainingImages}\n            setRemainingImages={setRemainingImages}\n            images={images}\n            setImages={setImages}\n            setLibraryUrls={setLibraryUrls}\n            libraryUrls={libraryUrls}\n            setActiveTab={setActiveTab}\n            setValue={setValue}\n          />\n        </Tab>\n\n        {/* Reward point tab */}\n        {/* <Tab eventKey={\"rewardPoints\"} title=\"Reward Points\">\n          <CRow className=\"g-3\">\n            <CCol xs={12}>\n              <CFormInput\n                type=\"Number\"\n                id=\"rewardPointsInputField\"\n                label=\"Reward Points\"\n                placeholder=\"Enter Reward Points\"\n                aria-describedby=\"rewardPointsInputField\"\n                min={\"0\"}\n                {...register(\"rewardPoints\")}\n              />\n            </CCol>\n          </CRow>\n        </Tab> */}\n      </Tabs>\n\n      {/* <div className=\"text-end\">\n        <CancelButton />\n        <CButton\n          onClick={handleSubmit(onSubmit)}\n          disabled={loading}\n          type=\"submit\"\n          color=\"primary\"\n          className=\"mt-3\"\n        >\n          <CIcon icon={cilPlus} className=\"me-2\" />\n          {loading ? \"Loading...\" : \" Save\"}\n        </CButton>\n      </div> */}\n    </CForm>\n  );\n};\n\nexport default memo(AddProductForm);\n\nAddProductForm.propTypes = {\n  data: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n","/* eslint-disable prettier/prettier */\nexport const getModifiedCategories = (categories) => {\n  return categories?.map((item) => {\n    // this field for related products and manufacturer\n\n    if (item?.subcategory?.parent?.title) {\n      // this filed for subCategoriesChildren\n      return {\n        value: {\n          _id: item?._id,\n          name: item?.title,\n        },\n        label: item?.title,\n      };\n    }\n    if (item?.parent?.title) {\n      // this filed for subCategories\n\n      return {\n        value: { _id: item?._id, name: item?.title },\n        label: item?.title,\n      };\n    }\n    if (item?.title) {\n      // this filed for categories\n\n      return {\n        value: { _id: item?._id, name: item?.title ? item?.title : item?.name },\n        label: item?.title ? item?.title : item?.name,\n      };\n    }\n    if (item?.price) {\n      // this filed for size, colors\n      return {\n        value: item?._id,\n        label: item?.name,\n      };\n    }\n\n    \n    if (item?.name) {\n      // this filed for size, colors\n      return {\n        value: { _id: item?._id, name: item?.name },\n        label: item?.name,\n      };\n    }\n\n    return {\n      value: { _id: item?._id, name: item?.title ? item?.title : item?.name },\n      label: item?.title ? item?.title : item?.name,\n    };\n  });\n};\n\nexport const getDefaultData = (data) => {\n  const categoriesDefaultData = [];\n  data?.forEach((d) => {\n    categoriesDefaultData.push({ value: d, label: d.name });\n  });\n  return categoriesDefaultData;\n};\n\nexport const getModifiedManufactures = (categories) => {\n  const options = [{ label: \"Pick one\", value: null }];\n  categories?.forEach((item) => {\n    options.push({\n      value: item?._id,\n      label: item?.title ? item?.title : item?.name,\n    });\n  });\n\n  return options;\n};\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const manufactureApi = apiSlice.injectEndpoints({\n  tagTypes: [\"Manufacture\", \"SingleManufacture\"],\n  endpoints: (builder) => ({\n    // get all manufacturer\n    getAllManufacture: builder.query({\n      query: () => ({\n        url: `/manufacturer`,\n        method: \"GET\",\n      }),\n      providesTags: [\"Manufacture\"],\n    }),\n\n    // get single manufacturer by id\n    getSingleManufacture: builder.query({\n      query: (id) => ({\n        url: `/manufacturer/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"Manufacture\"],\n      providesTags: [\"SingleManufacture\"],\n    }),\n\n    // add new manufacturer\n    addManufacture: builder.mutation({\n      query: (data) => ({\n        url: `/manufacturer`,\n        method: \"POST\",\n        body: data,\n\n      }),\n      invalidatesTags: [\"Manufacture\"],\n    }),\n\n    // update manufacturer by id\n    updateManufacture: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/manufacturer/${id}`,\n        method: \"PUT\",\n        body: data,\n\n      }),\n      invalidatesTags: [\"Manufacture\", \"SingleManufacture\"],\n    }),\n\n    // delete manufacturer by id\n    deleteBrand: builder.mutation({\n      query: (id) => ({\n        url: `/manufacturer/${id}`,\n        method: \"DELETE\",\n        body: id,\n\n      }),\n      invalidatesTags: [\"Manufacture\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllManufactureQuery,\n  useDeleteBrandMutation,\n  useAddManufactureMutation,\n  useUpdateManufactureMutation,\n  useGetSingleManufactureQuery,\n} = manufactureApi;\n","/* eslint-disable prettier/prettier */\r\nimport { apiSlice } from \"../api/apiSlice\";\r\n\r\nexport const productTypeApi = apiSlice.injectEndpoints({\r\n    tagTypes: [\"AllProductType\", \"SingleProductType\"],\r\n\r\n    endpoints: (builder) => ({\r\n        //get all product type\r\n        getAllproductType: builder.query({\r\n            query: () => ({\r\n                url: `/product-type`,\r\n                method: \"GET\",\r\n            }),\r\n            providesTags: [\"AllProductType\"],\r\n        }),\r\n\r\n        // add product type \r\n        addProductType: builder.mutation({\r\n            query: ({ data }) => ({\r\n                url: `/product-type`,\r\n                method: \"POST\",\r\n                body: data,\r\n            }),\r\n            invalidatesTags: [\"AllProductType\", \"SingleProductType\"],\r\n        }),\r\n\r\n        //get single product type\r\n        getSingleProductType: builder.query({\r\n            query: (id) => ({\r\n                url: `/product-type/${id}`,\r\n                method: \"GET\",\r\n            }),\r\n            providesTags: [\"SingleProductType\"],\r\n        }),\r\n\r\n        //get single product type\r\n        updateSingleProductType: builder.mutation({\r\n            query: ({ id, data }) => ({\r\n                url: `/product-type/${id}`,\r\n                method: \"PUT\",\r\n                body: data,\r\n            }),\r\n            invalidatesTags: [\"AllProductType\", \"SingleProductType\"],\r\n        }),\r\n\r\n        //get single product type\r\n        deleteSingleProductType: builder.mutation({\r\n            query: (id) => ({\r\n                url: `/product-type/${id}`,\r\n                method: \"DELETE\",\r\n            }),\r\n            invalidatesTags: [\"AllProductType\", \"SingleProductType\"],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetAllproductTypeQuery,\r\n    useAddProductTypeMutation,\r\n    useGetSingleProductTypeQuery,\r\n    useUpdateSingleProductTypeMutation,\r\n    useDeleteSingleProductTypeMutation,\r\n} = productTypeApi;\r\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const subCategoryChildrenApi = apiSlice.injectEndpoints({\n  tagTypes: [\"SubCategoryChildren\", \"SingleSubCategoryChildren\", \"SubCategoryChildLimit\"],\n  endpoints: (builder) => ({\n    // get all subcategory children\n    getAllSubCategoryChildren: builder.query({\n      query: () => ({\n        url: `/subcategory-children`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategoryChildren\"],\n    }),\n\n    // get all subcategory children\n    getFilterSubCategoryChildren: builder.query({\n      query: (selectedSubCategory) => ({\n        url: `/subcategory-children/filter?parent=${selectedSubCategory}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategoryChildren\"],\n    }),\n\n    // get all subcategory children\n    getAllSubCategoryChildrenByPage: builder.query({\n      query: (page) => ({\n        url: `/subcategory-children/limit${page}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategoryChildLimit\"],\n    }),\n\n    // get single subcategory children by id\n    getSingleSubCategoryChildren: builder.query({\n      query: (id) => ({\n        url: `/subcategory-children/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleSubCategoryChildren\"],\n    }),\n\n    // add new subcategory child\n    addSubCategoryChildren: builder.mutation({\n      query: (data) => ({\n        url: `/subcategory-children`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategoryChildLimit\"],\n    }),\n\n    // update subcategory child by id\n    updateSubCategoryChildren: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/subcategory-children/${id}`,\n        method: \"PUT\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\n        \"SubCategoryChildren\",\n        \"SingleSubCategoryChildren\",\n        \"SubCategoryChildLimit\",\n      ],\n    }),\n\n    // delete subcategory child by id\n    deleteSubCategoryChildren: builder.mutation({\n      query: (id) => ({\n        url: `/subcategory-children/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategoryChildLimit\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllSubCategoryChildrenQuery,\n  useGetFilterSubCategoryChildrenQuery,\n  useGetAllSubCategoryChildrenByPageQuery,\n  useDeleteSubCategoryChildrenMutation,\n  useAddSubCategoryChildrenMutation,\n  useUpdateSubCategoryChildrenMutation,\n  useGetSingleSubCategoryChildrenQuery,\n} = subCategoryChildrenApi;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const subCategoryApi = apiSlice.injectEndpoints({\n  tagTypes: [\"SubCategory\", \"SingleSubCategory\"],\n  endpoints: (builder) => ({\n    // get all subcategory\n    getAllSubCategory: builder.query({\n      query: () => ({\n        url: `/subcategory`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n    // get all subcategory\n    getFilterSubCategory: builder.query({\n      query: (subCategory) => ({\n        url: `/subcategory/filter?parent=${subCategory}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n\n    // get single subcategory by id\n    getSingleSubCategory: builder.query({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"SubCategory\"],\n      providesTags: [\"SingleSubCategory\"],\n    }),\n\n    // add new subcategory\n    addSubCategory: builder.mutation({\n      query: (data) => ({\n        url: `/subcategory`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n\n    // update subcategory by id\n    updateSubCategory: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/subcategory/${id}`,\n        method: \"PUT\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\", \"SingleSubCategory\"],\n    }),\n\n    // delete subcategory by id\n    deleteSubCategory: builder.mutation({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllSubCategoryQuery,\n  useGetFilterSubCategoryQuery,\n  useDeleteSubCategoryMutation,\n  useAddSubCategoryMutation,\n  useUpdateSubCategoryMutation,\n  useGetSingleSubCategoryQuery,\n} = subCategoryApi;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const variantApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllColor\", \"SingleColor\", \"AllColor\", \"SingleSize\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllColor: builder.query({\n      query: () => ({\n        url: `/color`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllColor\"],\n    }),\n\n    //get single  users\n    getSingleColor: builder.query({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleColor\"],\n    }),\n\n    // delete users by id\n    deleteSingleColor: builder.mutation({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    // delete users by id\n    updateSingleColor: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/color/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\", \"SingleColor\"],\n    }),\n    // delete users by id\n    addSingleColor: builder.mutation({\n      query: (data) => ({\n        url: `/color`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    //:::::::::::::::::::::::: size api :::::::::::::::::::::::::://\n    getAllSize: builder.query({\n      query: () => ({\n        url: `/size`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllSize\"],\n    }),\n\n    //get single  users\n    getSingleSize: builder.query({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleSize\"],\n    }),\n\n    // delete users by id\n    deleteSingleSize: builder.mutation({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n\n    // delete users by id\n    updateSingleSize: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/size/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\", \"SingleSize\"],\n    }),\n    // delete users by id\n    addSingleSize: builder.mutation({\n      query: (data) => ({\n        url: `/size`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllColorQuery,\n  useGetSingleColorQuery,\n  useDeleteSingleColorMutation,\n  useAddSingleColorMutation,\n  useUpdateSingleColorMutation,\n\n  useGetAllSizeQuery,\n  useGetSingleSizeQuery,\n  useDeleteSingleSizeMutation,\n  useAddSingleSizeMutation,\n  useUpdateSingleSizeMutation,\n} = variantApi;\n","export const getModels = () => {\n  return {\n    toolbar: [\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n      [\"blockquote\", \"code-block\"],\n\n      // [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n      [{ direction: \"rtl\" }], // text direction\n\n      // [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n      [{ font: [] }],\n      [{ align: [] }],\n      [\"link\", \"image\", \"video\"],\n\n      [\"clean\"], // remove formatting button\n    ],\n  };\n};\n","export const spaceToDash = (productName) => {\n  // Replace \"%20\" with \"-\"\n  const formattedProductName = productName\n    .replace(/'/g, '')\n    .replace(/&/g, 'and')\n    .replace(/\"/g, '')\n    .replace(/,/g, '')\n    .replace(/:/g, '')\n    ?.replace(/\\s/g, \"-\");\n\n  return formattedProductName;\n};\n"],"names":["_ref","_errors$name","_errors$name2","description","setDescription","shortDescription","setShortDescription","specification","setSpecification","register","modules","errors","productTags","setProductTags","setActiveTab","slugValue","setSlugValue","defaultSlug","setDefaultSlug","useState","_jsxs","CRow","className","children","CCol","xs","_jsx","CFormInput","type","id","placeholder","required","value","message","onFocus","e","target","onChange","name","md","style","marginTop","Button","onClick","spaceToDash","toLocaleLowerCase","ReactQuill","theme","TagsInput","separators","handleActiveTab","control","color","size","data","allColors","useGetAllColorQuery","allSizes","useGetAllSizeQuery","colorOptions","getModifiedCategories","sizeOptions","cd","CFormLabel","onBlur","Controller","render","_ref2","field","ref","Select","defaultValue","getDefaultData","inputRef","options","find","option","val","map","opt","isMulti","_ref3","handlePrev","handleNext","statusOptions","label","_productType$result","_errors$offerType","_errors$productType","_errors$status","flashSale","flashSaleType","setFlashSaleType","allTypes","selectedStatus","setSelectedStatus","manufacturer","setManufacturer","selectedCategory","setSelectedCategory","selectedSubCategory","setSelectedSubCategory","selectedSubChildrenCategory","setSelectedSubChildrenCategory","productType","useGetAllproductTypeQuery","categories","useGetAllCategoryQuery","subcategories","useGetFilterSubCategoryQuery","subcategoriesChildren","useGetFilterSubCategoryChildrenQuery","manufacturers","useGetAllManufactureQuery","modifiedCategories","result","modifiedSubcategories","modifiedSubcategoryChildren","manufacturerOptions","getModifiedManufactures","typesOptions","forEach","t","push","productTypeOptions","title","CFormSelect","offerType","price","rules","selectedOptions","handleCategoryChange","_id","isDisabled","handleSubCategoryChange","_ref4","subcategoryChildren","handleSubChildrenCategoryChange","_e$target","status","_data$data","showModal","setShowModal","handleUpload","pageNumber","setPageNumber","useGetProductImagesQuery","concat","selectedImage","setSelectedImages","CModal","visible","onClose","CModalHeader","border","closeButton","CModalBody","d","images","url","idx","Image","src","isExist","includes","prev","filter","i","handleSelect","defaultChecked","disabled","CModalFooter","CButton","setImages","setRemainingImages","remainingImages","handleDeletePreview","libraryUrls","setLibraryUrls","error","setError","imagePreview","setImagePreview","useEffect","_Fragment","htmlFor","accept","multiple","files","event","file","URL","createObjectURL","handleFileChange","ImageLibraryModal","urls","display","flexWrap","index","alt","RiDeleteBinLine","handleDeleteLibraryUrls","u","Stack","gap","direction","maxWidth","fluid","top","left","width","length","handleRemoveImage","variationIcon","setVariationIcon","ProductImage","isVariation","updatedIcons","splice","_errors$price","_errors$price2","_errors$quantity","_errors$quantity2","min","quantity","CFormCheck","AddProductForm","onSubmit","activeTab","handleSubmit","formState","setValue","useForm","key","Date","toLocaleDateString","getModels","CForm","Tabs","onSelect","activeKey","Tab","eventKey","GeneralTab","DataTab","DiscountTab","LinksTab","ImageTab","memo","item","_item$subcategory","_item$subcategory$par","_item$parent","subcategory","parent","categoriesDefaultData","manufactureApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllManufacture","query","method","providesTags","getSingleManufacture","invalidatesTags","addManufacture","mutation","body","updateManufacture","deleteBrand","useDeleteBrandMutation","useAddManufactureMutation","useUpdateManufactureMutation","useGetSingleManufactureQuery","productTypeApi","getAllproductType","addProductType","getSingleProductType","updateSingleProductType","deleteSingleProductType","useAddProductTypeMutation","useGetSingleProductTypeQuery","useUpdateSingleProductTypeMutation","useDeleteSingleProductTypeMutation","subCategoryChildrenApi","getAllSubCategoryChildren","getFilterSubCategoryChildren","getAllSubCategoryChildrenByPage","page","getSingleSubCategoryChildren","addSubCategoryChildren","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","updateSubCategoryChildren","deleteSubCategoryChildren","useGetAllSubCategoryChildrenQuery","useGetAllSubCategoryChildrenByPageQuery","useDeleteSubCategoryChildrenMutation","useAddSubCategoryChildrenMutation","useUpdateSubCategoryChildrenMutation","useGetSingleSubCategoryChildrenQuery","subCategoryApi","getAllSubCategory","getFilterSubCategory","subCategory","getSingleSubCategory","addSubCategory","updateSubCategory","deleteSubCategory","useGetAllSubCategoryQuery","useDeleteSubCategoryMutation","useAddSubCategoryMutation","useUpdateSubCategoryMutation","useGetSingleSubCategoryQuery","variantApi","getAllColor","getSingleColor","deleteSingleColor","updateSingleColor","addSingleColor","getAllSize","getSingleSize","deleteSingleSize","updateSingleSize","addSingleSize","useGetSingleColorQuery","useDeleteSingleColorMutation","useAddSingleColorMutation","useUpdateSingleColorMutation","useGetSingleSizeQuery","useDeleteSingleSizeMutation","useAddSingleSizeMutation","useUpdateSingleSizeMutation","toolbar","list","script","indent","header","background","font","align","productName","_productName$replace$","replace"],"sourceRoot":""}