{"version":3,"file":"static/js/1455.d7e8061a.chunk.js","mappings":"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","sources":["ui/button/DeleteButton.jsx","views/categories/manage-categories/CategoryTableRow.jsx","views/categories/manage-categories/ManageCategories.jsx"],"sourcesContent":["import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteCategoryMutation } from \"src/redux/category/categoryApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst CategoryTableRow = ({ category, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteCategory, { isLoading: deleteLoading, isError, isSuccess }] =\n    useDeleteCategoryMutation();\n\n  const handleDeleteCategory = (id) => {\n    deleteCategory(id);\n  };\n  useEffect(() => {\n    isSuccess && toast.success(`This category is deleted successFully`, { id: \"dSuccess\" });\n    isError && toast.error(`There are something wrong`);\n  }, [isSuccess, isError]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      {/* <CTableHeaderCell scope=\"row\">\n                <Image width={50} src={category?.image} alt={category?.title} />\n            </CTableHeaderCell> */}\n      <CTableDataCell>{category?.title}</CTableDataCell>\n      <CTableDataCell>{category?.sortOrder}</CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/category/edit/${category?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteCategory}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={category._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default CategoryTableRow;\n","/* eslint-disable prettier/prettier */\nimport { cilPencil, cilPlus, cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport { useGetAllCategoryQuery } from \"../../../redux/category/categoryApi\";\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport { Form } from \"react-bootstrap\";\nimport CategoryTableRow from \"./CategoryTableRow\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\n\nconst ManageCategories = () => {\n  const {\n    data: categories,\n    isLoading: getCategoryLoading,\n    isError: getCategoryError,\n  } = useGetAllCategoryQuery();\n\n  let content = null;\n  if (getCategoryLoading) {\n    content = <p className=\"px-2  my-2 fs-5 text-primary\">Loading..</p>;\n  }\n  if (!getCategoryLoading && getCategoryError) {\n    content = <p className=\"text-danger\">There was an error</p>;\n  }\n  if (!getCategoryLoading && !getCategoryError && categories?.result?.length === 0) {\n    content = <p>There is no category</p>;\n  }\n\n  if (!getCategoryLoading && !getCategoryError && categories?.result?.length > 0) {\n    content = categories?.result?.map((category, index) => (\n      <CategoryTableRow key={category?._id} category={category} index={index} />\n    ));\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CardHeaderButton title={\"All Categories\"} to={\"/category/add\"} />\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">Here is the list of all categories.</p>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-start\">\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                      Sl. No.\n                    </CTableHeaderCell>\n                    {/* <CTableHeaderCell scope=\"col\" style={{ width: \"5rem\" }}>\n                                            Icon\n                                        </CTableHeaderCell> */}\n                    <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"8rem\" }}>\n                      Sort Order\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      scope=\"col\"\n                      style={{\n                        width: \"100px\",\n                        minWidth: \"100px\",\n                      }}\n                    >\n                      Actions\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{content}</CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageCategories;\n"],"names":["_ref","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","category","index","showModal","useState","deleteCategory","isLoading","deleteLoading","isError","isSuccess","useDeleteCategoryMutation","useEffect","toast","success","id","error","_jsxs","CTableRow","CTableHeaderCell","scope","CTableDataCell","title","sortOrder","Link","to","concat","_id","EditButton","DeleteButton","DeleteModal","deleteThis","ManageCategories","_categories$result","_categories$result2","data","categories","getCategoryLoading","getCategoryError","useGetAllCategoryQuery","_categories$result3","result","length","map","CategoryTableRow","_Fragment","CRow","CCol","xs","CCard","CardHeaderButton","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody"],"sourceRoot":""}