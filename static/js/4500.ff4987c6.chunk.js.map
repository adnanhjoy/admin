{"version":3,"file":"static/js/4500.ff4987c6.chunk.js","mappings":"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","sources":["redux/coupons/couponsApi.js","views/coupons/manage-coupons/TableRowData.jsx","views/coupons/manage-coupons/ManageCoupons.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const manufactureApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllCoupons\", \"SingleCoupon\"],\n  endpoints: (builder) => ({\n    // get all category\n    getAllCoupons: builder.query({\n      query: () => ({\n        url: `/coupon`,\n        method: \"GET\",\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      providesTags: [\"AllCoupons\"],\n    }),\n\n    // get single category by id\n    getSingleCoupon: builder.query({\n      query: (id) => ({\n        url: `/coupon/${id}`,\n        method: \"GET\",\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"AllCoupons\"],\n      providesTags: [\"SingleCoupon\"],\n    }),\n\n    // add new coupon\n    addSingleCouponById: builder.mutation({\n      query: (data) => ({\n        url: `/coupon/add`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"AllCoupons\"],\n    }),\n\n    // update coupon by id\n    updateSingleCoupon: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/coupon/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllCoupons\", \"SingleCoupon\"],\n    }),\n\n    // delete coupon by id\n    deleteSingleCoupon: builder.mutation({\n      query: (id) => ({\n        url: `/coupon/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"AllCoupons\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllCouponsQuery,\n  useDeleteSingleCouponMutation,\n  useAddSingleCouponByIdMutation,\n  useUpdateSingleCouponMutation,\n  useGetSingleCouponQuery,\n} = manufactureApi;\n","import { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleCouponMutation } from \"src/redux/coupons/couponsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst TableRowData = ({ index, coupon }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteSingleCoupon, { isLoading: deleteLoading, isError, isSuccess }] =\n    useDeleteSingleCouponMutation();\n\n  const handleDeleteCoupon = (id) => {\n    deleteSingleCoupon(id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete Success\", { id: \"dSuccess\" });\n    isError && toast.error(\"Failed to Delete\", { id: \"dError\" });\n  }, [isSuccess, isError]);\n  return (\n    <>\n      <DeleteModal\n        deleteThis={handleDeleteCoupon}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={coupon._id}\n        deleteLoading={deleteLoading}\n      />\n      <CTableRow>\n        <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n        <CTableDataCell>{coupon?.couponName}</CTableDataCell>\n        <CTableDataCell>{coupon?.couponCode}</CTableDataCell>\n        <CTableDataCell>{`${\n          coupon?.discountType === \"percentage\" ? `${coupon?.discount} %` : `${coupon?.discount} TK`\n        }`}</CTableDataCell>\n        <CTableDataCell>{coupon?.discountType}</CTableDataCell>\n        <CTableDataCell>{coupon?.totalAmount}</CTableDataCell>\n        <CTableDataCell>\n          {coupon?.expireDate ? (\n            <div className=\"d-flex\">\n              <span className=\"me-2\">{new Date(coupon?.expireDate).toLocaleDateString()}</span>\n              <span>{new Date(coupon?.expireDate).toLocaleTimeString()}</span>\n            </div>\n          ) : (\n            <span className=\"bg-warning rounded text-white  px-1\">Expired</span>\n          )}\n        </CTableDataCell>\n\n        <CTableDataCell>\n          <div className=\"\">\n            <Link to={`/coupon/edit/${coupon?._id}`}>\n              <EditButton />\n            </Link>\n            <DeleteButton setShowModal={setShowModal} />\n          </div>\n        </CTableDataCell>\n      </CTableRow>\n    </>\n  );\n};\n\nexport default TableRowData;\n","import {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\n\nimport { useGetAllCouponsQuery } from \"src/redux/coupons/couponsApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport TableRowData from \"./TableRowData\";\n\nconst ManageCoupons = () => {\n  const { data: coupons, isLoading: couponLoading, isError: couponError } = useGetAllCouponsQuery();\n\n  let content = null;\n  if (couponLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!couponLoading && couponError) {\n    content = <p className=\"text-danger\">There is something wrong!</p>;\n  }\n  if (!couponLoading && !couponError && coupons?.length === 0) {\n    content = <p className=\"text-danger\">There is no coupon.</p>;\n  }\n  if (!couponLoading && !couponError && coupons?.length > 0) {\n    content = coupons?.map((coupon, index) => (\n      <TableRowData key={coupon?._id} index={index} coupon={coupon} />\n    ));\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CardHeaderButton title={\"All Coupons\"} to={\"/coupon/add\"} />\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">Here is the list of all coupons.</p>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-start\">\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                      Sl. No.\n                    </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Coupon Code</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Discount</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Type</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Active amount</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Expire date</CTableHeaderCell>\n                    <CTableHeaderCell\n                      scope=\"col\"\n                      style={{\n                        width: \"100px\",\n                        minWidth: \"100px\",\n                      }}\n                    >\n                      Actions\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{content}</CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageCoupons;\n"],"names":["manufactureApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllCoupons","query","url","method","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","providesTags","getSingleCoupon","id","concat","invalidatesTags","addSingleCouponById","mutation","data","body","updateSingleCoupon","_ref","deleteSingleCoupon","useGetAllCouponsQuery","useDeleteSingleCouponMutation","useAddSingleCouponByIdMutation","useUpdateSingleCouponMutation","useGetSingleCouponQuery","index","coupon","showModal","setShowModal","useState","isLoading","deleteLoading","isError","isSuccess","useEffect","toast","dismiss","success","error","_jsxs","_Fragment","children","_jsx","DeleteModal","deleteThis","_id","CTableRow","CTableHeaderCell","scope","CTableDataCell","couponName","couponCode","discountType","discount","totalAmount","expireDate","className","Date","toLocaleDateString","toLocaleTimeString","Link","to","EditButton","DeleteButton","ManageCoupons","coupons","couponLoading","couponError","content","length","map","TableRowData","CRow","CCol","xs","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","style","width","minWidth","CTableBody"],"sourceRoot":""}