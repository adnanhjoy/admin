{"version":3,"file":"static/js/5710.3c4f967f.chunk.js","mappings":"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","sources":["views/flashSale/all-flashSalse-products/add-flashSale-products/AddFlashSaleProducts.jsx"],"sourcesContent":["/* eslint-disable no-lone-blocks */\n/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CTooltip } from \"@coreui/react\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport AddProductForm from \"src/components/products/AddProductForm\";\nimport back from \"../../../../assets/brand/back.png\";\n\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport {\n  useAddSingleProductMutation,\n  useGetSingleProductDetailsQuery,\n  useUpdateSingleProductMutation,\n} from \"src/redux/products/productsApi\";\n\nimport Loading from \"src/ui/Loading\";\n\nconst AddFlashSaleProducts = () => {\n  const { id } = useParams();\n  const [productId, setProductId] = useState(true);\n  const [description, setDescription] = useState(\"\");\n  const [shortDescription, setShortDescription] = useState(\"\");\n  const [specification, setSpecification] = useState(\"\");\n  const [productTags, setProductTags] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState();\n  const [flashSaleType, setFlashSaleType] = useState(\"\");\n  const [imgData, setImgData] = useState([]);\n  const [manufacturer, setManufacturer] = useState(\"\");\n  const [slugValue, setSlugValue] = useState();\n\n  //remaining images\n  const [remainingImages, setRemainingImages] = useState([]);\n\n  // rtk hooks\n  const [\n    updateSingleProduct,\n    {\n      isLoading: updateLoading,\n      isSuccess: updateSuccess,\n      isError: updateError,\n      error: updateErrorMsg,\n    },\n  ] = useUpdateSingleProductMutation();\n\n  const [\n    adSingleProduct,\n    { isLoading: addLoading, isSuccess: addSuccess, isError: addError, error: addErrorMsg },\n  ] = useAddSingleProductMutation();\n\n  const {\n    data: product,\n    isLoading,\n    isError,\n  } = useGetSingleProductDetailsQuery(id, { skip: productId });\n\n  const { data: allTypes, isLoading: typeLoading, isError: typeError } = useGetAllTypesQuery();\n\n  //rtk hooks end\n  useMemo(() => {\n    updateError && toast.error(updateErrorMsg?.data?.message || \"Product updated failed\");\n    addError && toast.error(addErrorMsg?.data?.message || \"Product added failed\");\n  }, [updateError, addError]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [updateSuccess, addSuccess]);\n\n  useMemo(() => {\n    if (id) {\n      setProductId(false);\n      setProductTags(product?.result?.tags);\n      setDescription(product?.result?.description);\n      setShortDescription(product?.result?.shortDescription);\n      setFlashSaleType(product?.result?.flashSaleOfferType);\n      setManufacturer(product?.result?.manufacturer?._id);\n      setSlugValue(product?.result?.slug);\n    }\n  }, [id, product?.result]);\n\n  // handle add a new product\n  const handleCreateProduct = (data) => {\n    const formData = new FormData();\n    for (const key of Object.keys(imgData)) {\n      formData.append(\"images\", data.images[key]);\n    }\n    // default value for flash Sale product this field is required\n    formData.append(\"flashSale\", true);\n\n    if (data.name) formData.append(\"name\", data.name);\n    if (data.altTag) formData.append(\"altTag\", data.altTag);\n    if (description) formData.append(\"description\", description);\n    if (shortDescription) formData.append(\"shortDescription\", shortDescription);\n    if (specification) formData.append(\"specification\", specification);\n    if (flashSaleType) formData.append(\"flashSaleOfferType\", flashSaleType);\n    // formData.append(\"productType\", \"flash-sale\");\n\n    if (slugValue) formData.append(\"slug\", slugValue);\n\n    if (manufacturer && manufacturer !== \"Pick one\") formData.append(\"manufacturer\", manufacturer);\n    if (data.status) formData.append(\"status\", data.status);\n    if (data.expireDate) formData.append(\"expireDate\", data.expireDate);\n    if (data.model) formData.append(\"model\", data.model);\n\n    if (data.price) formData.append(\"price\", parseFloat(data.price));\n    if (data.offerPrice) formData.append(\"offerPrice\", parseFloat(data.offerPrice));\n\n    if (data.discountPercentage)\n      formData.append(\"discountPercentage\", parseFloat(data.discountPercentage) || 0);\n    if (data.quantity) formData.append(\"quantity\", parseInt(data.quantity));\n\n    // form data.append JSON.stringify(data)\n    if (productTags) formData.append(\"tags\", JSON.stringify(productTags));\n    if (data.color) formData.append(\"color\", JSON.stringify(data?.color));\n    if (data.size) formData.append(\"size\", JSON.stringify(data?.size));\n    if (data.categories?.value)\n      formData.append(\"categories\", JSON.stringify(data?.categories.value));\n    if (data.subcategories?.value)\n      formData.append(\"subcategories\", JSON.stringify(data?.subcategories.value));\n    if (data.subcategoryChildren?.value)\n      formData.append(\"subcategoryChildren\", JSON.stringify(data?.subcategoryChildren.value));\n\n    // if (data.rewardPoints) formData.append(\"rewardPoints\", parseFloat(data.rewardPoints) || 0);\n\n    if (id) {\n      remainingImages.forEach((img) => {\n        formData.append(\"prevImage\", img);\n      });\n\n      updateSingleProduct({ id, data: formData });\n    } else {\n      adSingleProduct(formData);\n    }\n  };\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <div className=\"d-flex justify-content-between\">\n              <strong>{id ? \"Edit\" : \"Add\"} Product</strong>\n              <div className=\"text-end\">\n              \n                <CButton\n                  // onClick={handleSubmit(handleCreateProduct)}\n                  disabled={addLoading || updateLoading}\n                  type=\"submit\"\n                  form=\"addProductForm1\"\n                  color=\"success\"\n                  className=\"\"\n                >\n                  <CIcon icon={cilSave} className=\"me-2\" />\n                  {addLoading || updateLoading ? \"Loading...\" : \" Save\"}\n                </CButton>\n\n                <CTooltip content=\"Back\">\n                  <CButton onClick={() => navigate(-1)} color=\"\" className=\"border ms-2\">\n                    <Image fluid src={back} style={{ width: \"20px\" }} />\n                  </CButton>\n                </CTooltip>\n              </div>\n            </div>\n          </CCardHeader>\n          <CCardBody>\n            {isLoading ? (\n              <Loading />\n            ) : !isError ? (\n              <AddProductForm\n                images={imgData}\n                setImages={setImgData}\n                data={product?.result}\n                description={description}\n                setDescription={setDescription}\n                shortDescription={shortDescription}\n                setShortDescription={setShortDescription}\n                specification={specification}\n                setSpecification={setSpecification}\n                productTags={productTags}\n                setProductTags={setProductTags}\n                selectedStatus={selectedStatus}\n                setSelectedStatus={setSelectedStatus}\n                // loading={addLoading | updateLoading}\n                onSubmit={handleCreateProduct}\n                remainingImages={remainingImages}\n                setRemainingImages={setRemainingImages}\n                setFlashSaleType={setFlashSaleType}\n                flashSaleType={flashSaleType}\n                flashSale={true}\n                allTypes={allTypes?.data}\n                manufacturer={manufacturer}\n                setManufacturer={setManufacturer}\n                slugValue={slugValue}\n                setSlugValue={setSlugValue}\n              />\n            ) : (\n              <p>There was an error</p>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default AddFlashSaleProducts;\n"],"names":["AddFlashSaleProducts","id","useParams","productId","setProductId","useState","description","setDescription","shortDescription","setShortDescription","specification","setSpecification","productTags","setProductTags","selectedStatus","setSelectedStatus","flashSaleType","setFlashSaleType","imgData","setImgData","manufacturer","setManufacturer","slugValue","setSlugValue","remainingImages","setRemainingImages","updateSingleProduct","isLoading","updateLoading","isSuccess","updateSuccess","isError","updateError","error","updateErrorMsg","useUpdateSingleProductMutation","adSingleProduct","addLoading","addSuccess","addError","addErrorMsg","useAddSingleProductMutation","data","product","useGetSingleProductDetailsQuery","skip","allTypes","typeLoading","typeError","useGetAllTypesQuery","useMemo","_updateErrorMsg$data","_addErrorMsg$data","toast","message","navigate","useNavigate","useEffect","_product$result","_product$result2","_product$result3","_product$result4","_product$result5","_product$result5$manu","_product$result6","result","tags","flashSaleOfferType","_id","slug","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","CButton","disabled","type","form","color","CIcon","icon","cilSave","CTooltip","content","onClick","Image","fluid","src","back","style","width","CCardBody","Loading","AddProductForm","images","setImages","onSubmit","_data$categories","_data$subcategories","_data$subcategoryChil","formData","FormData","key","Object","keys","append","name","altTag","status","expireDate","model","price","parseFloat","offerPrice","discountPercentage","quantity","parseInt","JSON","stringify","size","categories","value","subcategories","subcategoryChildren","forEach","img","flashSale"],"sourceRoot":""}