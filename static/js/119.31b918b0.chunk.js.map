{"version":3,"file":"static/js/119.31b918b0.chunk.js","mappings":"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","sources":["redux/variants/variantsApi.js","ui/button/DeleteButton.jsx","views/color/ColorTableRowData.jsx","views/color/ManageColor.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const variantApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllColor\", \"SingleColor\", \"AllColor\", \"SingleSize\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllColor: builder.query({\n      query: () => ({\n        url: `/color`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllColor\"],\n    }),\n\n    //get single  users\n    getSingleColor: builder.query({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleColor\"],\n    }),\n\n    // delete users by id\n    deleteSingleColor: builder.mutation({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    // delete users by id\n    updateSingleColor: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/color/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\", \"SingleColor\"],\n    }),\n    // delete users by id\n    addSingleColor: builder.mutation({\n      query: (data) => ({\n        url: `/color`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    //:::::::::::::::::::::::: size api :::::::::::::::::::::::::://\n    getAllSize: builder.query({\n      query: () => ({\n        url: `/size`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllSize\"],\n    }),\n\n    //get single  users\n    getSingleSize: builder.query({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleSize\"],\n    }),\n\n    // delete users by id\n    deleteSingleSize: builder.mutation({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n\n    // delete users by id\n    updateSingleSize: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/size/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\", \"SingleSize\"],\n    }),\n    // delete users by id\n    addSingleSize: builder.mutation({\n      query: (data) => ({\n        url: `/size`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllColorQuery,\n  useGetSingleColorQuery,\n  useDeleteSingleColorMutation,\n  useAddSingleColorMutation,\n  useUpdateSingleColorMutation,\n\n  useGetAllSizeQuery,\n  useGetSingleSizeQuery,\n  useDeleteSingleSizeMutation,\n  useAddSingleSizeMutation,\n  useUpdateSingleSizeMutation,\n} = variantApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleColorMutation } from \"src/redux/variants/variantsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst ColorTableRowData = ({ index, color }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleColor,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleColorMutation();\n\n  // delete color\n  const handleDeleteColor = () => {\n    deleteSingleColor(color?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{color?.name}</p>\n      </CTableHeaderCell>\n\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/color/edit/${color?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteColor}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={color?._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default ColorTableRowData;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllColorQuery } from \"src/redux/variants/variantsApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport ColorTableRowData from \"./ColorTableRowData\";\n\nconst ManageColor = () => {\n  const { data, isLoading, isError } = useGetAllColorQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && data?.data?.length === 0) {\n    content = <p>There is no Color added</p>;\n  }\n  if (!isLoading && !isError && data?.data?.length > 0) {\n    content = data?.data.map((color, index) => (\n      <ColorTableRowData key={color?._id} color={color} index={index} />\n    ));\n  }\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Color\"} to=\"/color/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n\n              <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageColor;\n"],"names":["variantApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllColor","query","url","method","providesTags","getSingleColor","id","concat","deleteSingleColor","mutation","invalidatesTags","updateSingleColor","_ref","data","body","addSingleColor","getAllSize","getSingleSize","deleteSingleSize","updateSingleSize","_ref2","addSingleSize","useGetAllColorQuery","useGetSingleColorQuery","useDeleteSingleColorMutation","useAddSingleColorMutation","useUpdateSingleColorMutation","useGetAllSizeQuery","useGetSingleSizeQuery","useDeleteSingleSizeMutation","useAddSingleSizeMutation","useUpdateSingleSizeMutation","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","index","showModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","CTableHeaderCell","scope","name","CTableDataCell","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteColor","ManageColor","_data$data","_data$data2","length","map","ColorTableRowData","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody"],"sourceRoot":""}