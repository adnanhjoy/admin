{"version":3,"file":"static/js/9593.9d8a6e4e.chunk.js","mappings":"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","sources":["ui/button/DeleteButton.jsx","ui/error/Error.js","views/flashSale/flash-sale-types/manage-types/FlashTableRowData.jsx","views/flashSale/flash-sale-types/manage-types/ManageFlashSaleTypes.jsx"],"sourcesContent":["import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","import { CTableDataCell } from \"@coreui/react\";\n\nconst Error = ({ children }) => {\n  return (\n    <CTableDataCell colSpan={\"100%\"} className=\"text-danger text-center py-2\">\n      {children}\n    </CTableDataCell>\n  );\n};\n\nexport default Error;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleTypesMutation } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst FlashTableRowData = ({ index, type }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleTypes,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleTypesMutation();\n\n  // delete size\n  const handleDeleteSize = () => {\n    deleteSingleTypes(type?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{type?.name}</p>\n      </CTableHeaderCell>\n\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/flashSale-types/edit/${type?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteSize}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={type?._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default FlashTableRowData;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport Error from \"src/ui/error/Error\";\nimport FlashTableRowData from \"./FlashTableRowData\";\n\nconst ManageFlashSaleType = () => {\n  const { data, isLoading, isError } = useGetAllTypesQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <Error>There is something wrong!</Error>;\n  }\n  if (!isLoading && !isError && data?.data?.length === 0) {\n    content = <Error>There is now types added!</Error>;\n  }\n  if (!isLoading && !isError && data?.data?.length > 0) {\n    content = data?.data.map((type, index) => (\n      <FlashTableRowData key={type?._id} type={type} index={index} />\n    ));\n  }\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Types\"} to=\"/flashSale-types/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n\n              <CTableHeaderCell scope=\"col\">Types Name</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageFlashSaleType;\n"],"names":["_ref","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","CTableDataCell","colSpan","index","type","showModal","useState","deleteSingleTypes","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useDeleteSingleTypesMutation","useEffect","toast","dismiss","success","id","_jsxs","CTableRow","CTableHeaderCell","scope","name","Link","to","concat","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteSize","ManageFlashSaleType","_data$data","_data$data2","data","useGetAllTypesQuery","Error","length","map","FlashTableRowData","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody"],"sourceRoot":""}