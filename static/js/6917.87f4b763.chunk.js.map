{"version":3,"file":"static/js/6917.87f4b763.chunk.js","mappings":"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","sources":["redux/flashSaleType/flashSaleTypeApi.js","ui/SearchFieldForm.jsx","ui/pagination/Pagination.js","utils/setUrlParam.js","views/flashSale/all-flashSalse-products/manage-flashSale-products/FlashSaleProductTableRowData.jsx","views/flashSale/all-flashSalse-products/manage-flashSale-products/ManageFlashSaleProducts.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const flashSaleTypesApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllTypes\", \"SingleTypes\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllTypes: builder.query({\n      query: () => ({\n        url: `/flashSale-types`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllTypes\"],\n    }),\n\n    //get single  users\n    getSingleTypes: builder.query({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleTypes\"],\n    }),\n\n    // delete users by id\n    deleteSingleTypes: builder.mutation({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n\n    // delete users by id\n    updateSingleTypes: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\", \"SingleTypes\"],\n    }),\n    // delete users by id\n    addSingleTypes: builder.mutation({\n      query: (data) => ({\n        url: `/flashSale-types`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTypesQuery,\n  useGetSingleTypesQuery,\n  useDeleteSingleTypesMutation,\n  useAddSingleTypesMutation,\n  useUpdateSingleTypesMutation,\n} = flashSaleTypesApi;\n","/* eslint-disable react/prop-types */\nimport { cilSearch } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CRow } from \"@coreui/react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../src/scss/style.scss\";\n\n// eslint-disable-next-line prettier/prettier, react/prop-types\nconst SearchFieldForm = ({ onSubmit, tableData, isNavigate }) => {\n  const navigate = useNavigate();\n  const copiedTableData = [...tableData];\n  const { register, handleSubmit, reset } = useForm();\n\n  const handleClear = () => {\n    isNavigate && navigate(\".\");\n    reset();\n  };\n  return (\n    <div className=\"mx-3 px-3 mt-3 pb-3 border rounded\" style={{ backgroundColor: \"#f5f5f5\" }}>\n      <CForm onSubmit={handleSubmit(onSubmit)}>\n        <CRow>\n          {copiedTableData.map((data, index) => (\n            <CCol xs={4} key={index} className=\"mt-3\">\n              <CFormInput\n                type={data.type}\n                id=\"exampleFormControlInput1\"\n                label={data.name}\n                placeholder={data.name}\n                disabled={data.disabled}\n                aria-describedby=\"exampleFormControlInputHelpInline\"\n                {...register(data.register)}\n              />\n            </CCol>\n          ))}\n        </CRow>\n        <div className=\"d-flex align-items-center justify-content-end mt-3 \">\n          <CButton className=\"me-2 text-white\" color=\"info\" onClick={() => handleClear()}>\n            Clear\n          </CButton>\n          <CButton color=\"info\" className=\" text-white me-2\" type=\"submit\">\n            <CIcon icon={cilSearch} style={{ width: \"12px\", height: \"12px\" }} /> Filter\n          </CButton>\n        </div>\n      </CForm>\n    </div>\n  );\n};\n\nexport default SearchFieldForm;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-loop-func */\nimport { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\n\nconst PaginationButton = ({ totalPageNumber, searchUrl }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n\n  const handlePage = (page) => {\n    setCurrentPage(page);\n    navigate(setUrlParams(searchUrl || \"?\", \"page\", page.toString()));\n  };\n  // calculate page number\n  let pageNumber = !totalPageNumber ? [] : Array.from({ length: totalPageNumber }, (v, k) => k + 1);\n\n  let items = [];\n\n  for (let number = 1; number <= pageNumber.length; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === currentPage}\n        onClick={() => handlePage(number)}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <div className=\"d-flex justify-content-end mt-4\">\n      <Pagination size=\"sm\">\n        {currentPage > 1 && <Pagination.Prev onClick={() => handlePage(currentPage - 1)} />}\n        {items}\n        {currentPage < totalPageNumber && (\n          <Pagination.Next onClick={() => handlePage(currentPage + 1)} />\n        )}\n        {totalPageNumber > 1 && <Pagination.Last onClick={() => handlePage(totalPageNumber)} />}\n      </Pagination>\n    </div>\n  );\n};\n\nexport default PaginationButton;\n","export const setUrlParams = (searchUrl, paramName, valueOfParam) => {\n  const queryParams = searchUrl.split(\"&\");\n  let paramUpdated = false;\n  for (let i = 0; i < queryParams.length; i++) {\n    const param = queryParams[i].split(\"=\");\n    if (param[0] === paramName) {\n      param[1] = valueOfParam;\n      queryParams[i] = param.join(\"=\");\n      paramUpdated = true;\n      break;\n    }\n  }\n  if (!paramUpdated) {\n    queryParams.push(`${paramName}=${valueOfParam}`); // replace\n  }\n  const abc = [...new Set(queryParams)];\n\n  const finalUrl = abc.join(\"&\");\n  return finalUrl;\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleProductMutation } from \"src/redux/products/productsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\nconst FlashSaleProductTableRowData = ({ product, index }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const [\n    deleteSingleProduct,\n    { isLoading: deleteLoading, isSuccess: deleteSuccess, isError: deleteError },\n  ] = useDeleteSingleProductMutation();\n\n  const handleDeleteProduct = (id) => {\n    deleteSingleProduct(id);\n  };\n\n  useEffect(() => {\n    deleteSuccess && toast.success(\"Product deleted successfully\");\n    deleteError && toast.error(\"Product deleted failed\");\n  }, [deleteSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableDataCell>\n        <img\n          src={product?.images?.[0]}\n          alt={product?.model}\n          style={{\n            height: \"2.5rem\",\n            width: \"2.5rem\",\n            borderRadius: \"0.25rem\",\n            objectFit: \"cover\",\n          }}\n          className=\"border\"\n        />\n      </CTableDataCell>\n      <CTableDataCell>{product?.name}</CTableDataCell>\n      <CTableDataCell>{product?.model}</CTableDataCell>\n      <CTableDataCell>{product?.discountPercentage}%</CTableDataCell>\n      <CTableDataCell>{product.status}</CTableDataCell>\n      <CTableDataCell className={`${product.quantity <= 15 && \"text-danger\"}`}>\n        {product.quantity}\n      </CTableDataCell>\n      <CTableDataCell>৳{product.price}</CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/flashSale-product/edit/${product?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteProduct}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={product._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default FlashSaleProductTableRowData;\n","/* eslint-disable prettier/prettier */\n\nimport {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport Loading from \"src/ui/Loading\";\nimport PaginationButton from \"src/ui/pagination/Pagination\";\nimport SearchFieldForm from \"src/ui/SearchFieldForm\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\nimport FlashSaleProductTableRowData from \"./FlashSaleProductTableRowData\";\nimport { useGetAllFlashProductQuery, useGetAllProductQuery } from \"src/redux/products/productsApi\";\n\nconst MangeFlashSaleProducts = () => {\n  const location = useLocation();\n  // location.search+\"flashProduct=true\"\n  const { data: products, isLoading, isError } = useGetAllFlashProductQuery(location.search);\n  const { data: allTypes, isLoading: typeLoading, isError: typeError } = useGetAllTypesQuery();\n  const navigate = useNavigate();\n\n  let content = null;\n  let loadingContent = null;\n  if (isLoading) {\n    loadingContent = <Loading />;\n  }\n  if (!isLoading && isError) {\n    loadingContent = <p className=\"text-danger\">Something was wrong!</p>;\n  }\n  if (!isLoading && !isError && products?.result?.data?.length === 0) {\n    content = <p className=\"text-danger\">No user here</p>;\n  }\n  if (!isLoading && !isError) {\n    content = allTypes?.data?.map((type, index) => (\n      <Tab key={index} eventKey={type?.name} title={type?.name}>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  paddingLeft: 0,\n                  paddingRight: 0,\n                }}\n              >\n                Sl. No.\n              </CTableHeaderCell>\n\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3rem\" }}>\n                Photo\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ width: \"30rem\" }}>\n                Name\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Model</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Discount</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Stock Status</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Quantity</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Price</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          {products?.result?.data?.length > 0 ? (\n            products?.result?.data\n              ?.filter((pro) => {\n                return pro?.flashSaleOfferType?.toLowerCase() === type?.name?.toLowerCase();\n              })\n              ?.map((product, index) => (\n                <CTableBody key={index}>\n                  <FlashSaleProductTableRowData index={index} product={product} />\n                </CTableBody>\n              ))\n          ) : (\n            <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n              No products found\n            </CTableDataCell>\n          )}\n        </CTable>\n        <PaginationButton\n          searchUrl={location.search}\n          totalPageNumber={products?.result?.totalPageNumber}\n        />\n      </Tab>\n    ));\n  }\n  // table data for search input fields\n  const tableData = [\n    { name: \"Product Name\", register: \"name\", type: \"text\" },\n    { name: \"Price\", register: \"price\", type: \"text\" },\n    { name: \"Status\", register: \"status\", type: \"text\" },\n    { name: \"Model\", register: \"model\", type: \"text\" },\n    { name: \"Quantity\", register: \"quantity\", type: \"text\" },\n    { name: \"Date Added\", register: \"date\", type: \"date\" },\n  ];\n\n  // handle search\n  const handleSearch = (data) => {\n    let query = \"?\";\n    if (data.name) query += `search=${data.name.trim()}`;\n    if (data.price) query += `&price=${data.price.trim()}`;\n    if (data.status) query += `&status=${data.status.trim()}`;\n    if (data.model) query += `&model=${data.model.trim()}`;\n    if (data.quantity) query += `&quantity=${data.quantity.trim()}`;\n    if (data.date) query += `&date=${data.date.trim()}`;\n\n    navigate(query);\n  };\n\n  const handleTabSelect = (tabName) => {\n    const url = setUrlParams(\"?\", \"page\", 1);\n    // status means tab name value variable\n    navigate(setUrlParams(url, \"flashStatus\", tabName));\n  };\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            {/* Header start*/}\n            <CardHeaderButton to={\"/flashSale-product/add\"} title={\"All FlashSale Product\"} />\n            {/* Header start*/}\n\n            {/* search field start*/}\n            <SearchFieldForm onSubmit={handleSearch} tableData={tableData} isNavigate={true} />\n            {/* search field end*/}\n\n            {/* Card main body*/}\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">\n                Here is the list of all flash sale products\n              </p>\n              {loadingContent ? (\n                loadingContent\n              ) : (\n                <Tabs\n                  defaultActiveKey={allTypes?.data?.[0]?.groupName}\n                  id=\"uncontrolled-tab-example\"\n                  className=\"mb-3\"\n                  onSelect={(e) => handleTabSelect(e)}\n                >\n                  {content}\n                </Tabs>\n              )}\n            </CCardBody>\n            {/* Card main end*/}\n            {/* <PaginationButton\n              search={location?.search}\n              totalPageNumber={products?.result?.totalPageNumber}\n            /> */}\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default MangeFlashSaleProducts;\n"],"names":["flashSaleTypesApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllTypes","query","url","method","providesTags","getSingleTypes","id","concat","deleteSingleTypes","mutation","invalidatesTags","updateSingleTypes","_ref","data","body","addSingleTypes","useGetAllTypesQuery","useGetSingleTypesQuery","useDeleteSingleTypesMutation","useAddSingleTypesMutation","useUpdateSingleTypesMutation","onSubmit","tableData","isNavigate","navigate","useNavigate","copiedTableData","register","handleSubmit","reset","useForm","_jsx","className","style","backgroundColor","children","_jsxs","CForm","CRow","map","index","CCol","xs","CFormInput","type","label","name","placeholder","disabled","CButton","color","onClick","CIcon","icon","cilSearch","width","height","totalPageNumber","searchUrl","currentPage","setCurrentPage","useState","handlePage","page","setUrlParams","toString","pageNumber","Array","from","length","v","k","items","number","push","Pagination","Item","active","size","Prev","Next","Last","paramName","valueOfParam","queryParams","split","paramUpdated","i","param","join","Set","_product$images","product","showModal","setShowModal","deleteSingleProduct","isLoading","deleteLoading","isSuccess","deleteSuccess","isError","deleteError","useDeleteSingleProductMutation","useEffect","toast","success","error","CTableRow","CTableHeaderCell","scope","CTableDataCell","src","images","alt","model","borderRadius","objectFit","discountPercentage","status","quantity","price","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","MangeFlashSaleProducts","_products$result","_products$result$data","_allTypes$data2","_allTypes$data2$","location","useLocation","products","useGetAllFlashProductQuery","search","allTypes","typeLoading","typeError","content","loadingContent","_allTypes$data","Loading","result","_products$result2","_products$result2$dat","_products$result3","_products$result3$dat","_products$result3$dat2","_products$result4","Tab","eventKey","title","CTable","align","bordered","hover","responsive","CTableHead","paddingLeft","paddingRight","minWidth","filter","pro","_pro$flashSaleOfferTy","_type$name","flashSaleOfferType","toLowerCase","CTableBody","FlashSaleProductTableRowData","colSpan","PaginationButton","_Fragment","CCard","CardHeaderButton","SearchFieldForm","trim","date","CCardBody","Tabs","defaultActiveKey","groupName","onSelect","e","tabName","handleTabSelect"],"sourceRoot":""}