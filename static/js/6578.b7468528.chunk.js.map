{"version":3,"file":"static/js/6578.b7468528.chunk.js","mappings":"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","sources":["redux/newUserDiscount/newUserDiscountApi.js","ui/CreateOfferModal.jsx","views/offer/create-offer/NewCustomerButton.jsx","views/offer/create-offer/index.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const newUserDiscountApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllNewUserDiscount\", \"singleDiscount\"],\n  endpoints: (builder) => ({\n    // get all discount for new user\n    getAllNewUserDiscount: builder.query({\n      query: () => ({\n        url: `/newUserDiscount`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllNewUserDiscount\"],\n    }),\n\n    // get single order by id\n    getSingleNewUserDiscountById: builder.query({\n      query: (id) => ({\n        url: `/newUserDiscount/${id}`,\n        method: \"GET\",\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      providesTags: [\"singleDiscount\"],\n    }),\n\n    //add new discount\n    addNewCustomerDiscount: builder.mutation({\n      query: (data) => ({\n        url: `/newUserDiscount`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllNewUserDiscount\"],\n    }),\n\n    // update new user discount by id\n    updateSingleNewUserDiscountById: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/newUserDiscount/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllNewUserDiscount\"],\n    }),\n\n    // delete new user discount by id\n    deleteSingleNewUserDiscountById: builder.mutation({\n      query: (id) => ({\n        url: `/newUserDiscount/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"AllNewUserDiscount\", \"singleDiscount\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllNewUserDiscountQuery,\n  useGetSingleNewUserDiscountByIdQuery,\n  useAddNewCustomerDiscountMutation,\n  useUpdateSingleNewUserDiscountByIdMutation,\n  useDeleteSingleNewUserDiscountByIdMutation,\n} = newUserDiscountApi;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CRow,\n} from \"@coreui/react\";\nimport { memo } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport \"./OfferModal.scss\";\nimport { useState } from \"react\";\n\nconst CreateOfferModal = ({\n  showModal,\n  setShowModal,\n  offerPropsData,\n  title,\n  handlePostOrderFunction,\n  isLoading,\n  isUpdate,\n  defaultOfferData,\n  handleUpdateFunction,\n}) => {\n  const { reset, register, handleSubmit, control } = useForm();\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  // ::::::::: handle submit to create  offer ::::::::://\n  const handleSubmitForm = (data) => {\n    const sDate = new Date(startDate).getTime();\n    const eDate = new Date(endDate).getTime();\n    let timeStamps = null;\n    if (sDate && eDate) timeStamps = eDate - sDate + (sDate - Date.now()) + Date.now();\n\n    const modifyData = {\n      ...data,\n      discount: parseInt(data.discount),\n      startDate: startDate || defaultOfferData.startDate,\n      endDate: endDate || defaultOfferData.endDate,\n      timeStamps: timeStamps || defaultOfferData?.timeStamps,\n      status: \"active\",\n    };\n    if (isUpdate) {\n      // this hook for update offer\n\n      const id = defaultOfferData?._id;\n\n      handleUpdateFunction({ data: modifyData, id });\n    } else {\n      // this hook for crate a new offer\n      handlePostOrderFunction(modifyData);\n      reset();\n    }\n  };\n  return (\n    <CModal\n      visible={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      className=\"offerModal\"\n    >\n      <CModalHeader closeButton>{title} </CModalHeader>\n      <CModalBody>\n        <CForm id=\"handleSubmitForm\" onSubmit={handleSubmit(handleSubmitForm)}>\n          <CRow className=\"g-3\">\n            <CCol xs={12}>\n              <CFormInput\n                type=\"text\"\n                id=\"discountInputField\"\n                label=\"Offer Name\"\n                defaultValue={defaultOfferData?.name}\n                placeholder={\"Enter offer name\"}\n                aria-describedby=\"discountInputField\"\n                min={\"0\"}\n                {...register(\"name\", { required: true, min: 0, max: 100 })}\n              />\n            </CCol>\n\n            <CCol xs={12}>\n              <label className=\"mb-2\">Discount Type</label>\n              <br />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"discountTypeOptions\"\n                id=\"discountTypePercentage\"\n                label=\"Percentage\"\n                defaultChecked={defaultOfferData?.discountType === \"percentage\"}\n                value=\"percentage\"\n                {...register(\"discountType\", { required: true })}\n              />\n              <CFormCheck\n                inline\n                type=\"radio\"\n                name=\"discountTypeOptions\"\n                id=\"discountTypeFixedAmount\"\n                defaultChecked={defaultOfferData?.discountType === \"fixedAmount\"}\n                label=\"Fixed Amount\"\n                value=\"fixedAmount\"\n                {...register(\"discountType\", { required: true })}\n              />\n            </CCol>\n            <CCol xs={12}>\n              <CFormInput\n                type=\"number\"\n                id=\"discountInputField\"\n                label=\"Discount\"\n                placeholder=\"Enter Discount\"\n                defaultValue={defaultOfferData?.discount}\n                aria-describedby=\"discountInputField\"\n                min={\"0\"}\n                {...register(\"discount\", { required: true, min: 0, max: 100 })}\n              />\n            </CCol>\n\n            <CCol xs={6}>\n              <label className=\"text-primary\">Start Date</label>\n              {defaultOfferData && (\n                <label htmlFor=\"\" className=\" d-flex justify-content-between mb-1\">\n                  <span>{new Date(startDate).toLocaleDateString()}</span>\n                  <span>{new Date(startDate).toLocaleTimeString()}</span>\n                </label>\n              )}\n              <CFormInput\n                placeholder=\"Enter Start Date\"\n                aria-describedby=\"startDate\"\n                defaultValue={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                required={defaultOfferData ? false : true}\n                onFocus={(e) => (e.target.type = \"datetime-local\")}\n                onBlur={(e) => (e.target.type = \"text\")}\n              />\n            </CCol>\n\n            <CCol xs={6}>\n              <label className=\"text-primary\">End Date</label>\n              {defaultOfferData && (\n                <label htmlFor=\"\" className=\" d-flex justify-content-between mb-1\">\n                  <span>{new Date(endDate).toLocaleDateString()}</span>\n                  <span>{new Date(endDate).toLocaleTimeString()}</span>\n                </label>\n              )}\n\n              <CFormInput\n                placeholder=\"Enter End Date\"\n                aria-describedby=\"endDate\"\n                defaultValue={endDate}\n                required={defaultOfferData ? false : true}\n                onChange={(e) => setEndDate(e.target.value)}\n                onFocus={(e) => (e.target.type = \"datetime-local\")}\n                onBlur={(e) => (e.target.type = \"text\")}\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n\n      <CModalFooter>\n        <CButton\n          color=\"secondary\"\n          onClick={() => {\n            setShowModal(false);\n          }}\n        >\n          Cancel\n        </CButton>\n\n        <CButton\n          disabled={isLoading}\n          form=\"handleSubmitForm\"\n          type=\"submit\"\n          color=\"success\"\n          className=\"text-white\"\n        >\n          <CIcon icon={cilSave} className=\"me-2\" />{\" \"}\n          {isUpdate ? <>Update</> : <>{isLoading ? \"Loading..\" : \"Save\"}</>}\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default memo(CreateOfferModal);\n","/* eslint-disable no-lone-blocks */\n/* eslint-disable prettier/prettier */\nimport { CButton } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useAddNewCustomerDiscountMutation } from \"src/redux/newUserDiscount/newUserDiscountApi\";\nimport CreateOfferModal from \"src/ui/CreateOfferModal\";\n\nconst NewCustomerButton = () => {\n  const [showModal, setShowModal] = useState(false);\n  const navigate = useNavigate();\n\n  // ::::::::: add new customer discount offer hook  ::::::::://\n  const [\n    addNewCustomerDiscount,\n    {\n      isLoading: newUserDiscountLoading,\n      isError: newUserDiscountError,\n      isSuccess: newUserDiscountSuccess,\n      error: addErrorMsg,\n    },\n  ] = useAddNewCustomerDiscountMutation();\n\n  // ::::::::: handle click to open new customer offer form and props pass ::::::::://\n  const handleNewCustomer = () => {\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    {\n      newUserDiscountSuccess && toast.success(\"Offer created successfully\");\n    }\n    {\n      newUserDiscountError &&\n        toast.error(addErrorMsg?.data?.message || \"could not create the offer\");\n    }\n  }, [newUserDiscountSuccess, newUserDiscountError]);\n\n  useEffect(() => {\n    newUserDiscountSuccess && navigate(-1);\n  }, [newUserDiscountSuccess]);\n\n  return (\n    <>\n      <CButton onClick={handleNewCustomer}>New Customer Offer</CButton>\n      <CreateOfferModal\n        setShowModal={setShowModal}\n        showModal={showModal}\n        offerPropsData={[]}\n        title={\"New customer offer\"}\n        handlePostOrderFunction={addNewCustomerDiscount}\n        isLoading={newUserDiscountLoading}\n      />\n\n      {/* error and success message */}\n    </>\n  );\n};\n\nexport default NewCustomerButton;\n","import { CCol, CRow } from \"@coreui/react\";\n\nimport NewCustomerButton from \"./NewCustomerButton\";\n\nconst CreateOffer = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <div className=\"mb-4 d-flex gap-2 justify-content-center align-items-center mt-4 flex-wrap\">\n          <NewCustomerButton />\n        </div>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default CreateOffer;\n"],"names":["newUserDiscountApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllNewUserDiscount","query","url","method","providesTags","getSingleNewUserDiscountById","id","concat","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","addNewCustomerDiscount","mutation","data","body","invalidatesTags","updateSingleNewUserDiscountById","_ref","deleteSingleNewUserDiscountById","useGetAllNewUserDiscountQuery","useGetSingleNewUserDiscountByIdQuery","useAddNewCustomerDiscountMutation","useUpdateSingleNewUserDiscountByIdMutation","useDeleteSingleNewUserDiscountByIdMutation","CreateOfferModal","showModal","setShowModal","offerPropsData","title","handlePostOrderFunction","isLoading","isUpdate","defaultOfferData","handleUpdateFunction","reset","register","handleSubmit","control","useForm","startDate","setStartDate","useState","endDate","setEndDate","_jsxs","CModal","visible","onClose","className","children","CModalHeader","closeButton","_jsx","CModalBody","CForm","onSubmit","sDate","Date","getTime","eDate","timeStamps","now","modifyData","discount","parseInt","status","_id","CRow","CCol","xs","CFormInput","type","label","defaultValue","name","placeholder","min","required","max","CFormCheck","inline","defaultChecked","discountType","value","htmlFor","toLocaleDateString","toLocaleTimeString","onChange","e","target","onFocus","onBlur","CModalFooter","CButton","color","onClick","disabled","form","CIcon","icon","cilSave","_Fragment","memo","NewCustomerButton","navigate","useNavigate","newUserDiscountLoading","isError","newUserDiscountError","isSuccess","newUserDiscountSuccess","error","addErrorMsg","useEffect","_addErrorMsg$data","toast","success","message","handleNewCustomer","CreateOffer"],"sourceRoot":""}