{"version":3,"file":"static/js/2292.c008a2c5.chunk.js","mappings":"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","sources":["redux/flashSaleType/flashSaleTypeApi.js","views/flashSale/flash-sale-types/manage-types/FlashTableRowData.jsx","views/flashSale/flash-sale-types/manage-types/ManageFlashSaleTypes.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const flashSaleTypesApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllTypes\", \"SingleTypes\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllTypes: builder.query({\n      query: () => ({\n        url: `/flashSale-types`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllTypes\"],\n    }),\n\n    //get single  users\n    getSingleTypes: builder.query({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleTypes\"],\n    }),\n\n    // delete users by id\n    deleteSingleTypes: builder.mutation({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n\n    // delete users by id\n    updateSingleTypes: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\", \"SingleTypes\"],\n    }),\n    // delete users by id\n    addSingleTypes: builder.mutation({\n      query: (data) => ({\n        url: `/flashSale-types`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTypesQuery,\n  useGetSingleTypesQuery,\n  useDeleteSingleTypesMutation,\n  useAddSingleTypesMutation,\n  useUpdateSingleTypesMutation,\n} = flashSaleTypesApi;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleTypesMutation } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst FlashTableRowData = ({ index, type }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleTypes,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleTypesMutation();\n\n  // delete size\n  const handleDeleteSize = () => {\n    deleteSingleTypes(type?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{type?.name}</p>\n      </CTableHeaderCell>\n\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/flashSale-types/edit/${type?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteSize}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={type?._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default FlashTableRowData;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport Error from \"src/ui/error/Error\";\nimport FlashTableRowData from \"./FlashTableRowData\";\n\nconst ManageFlashSaleType = () => {\n  const { data, isLoading, isError } = useGetAllTypesQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <Error>There is something wrong!</Error>;\n  }\n  if (!isLoading && !isError && data?.data?.length === 0) {\n    content = <Error>There is now types added!</Error>;\n  }\n  if (!isLoading && !isError && data?.data?.length > 0) {\n    content = data?.data.map((type, index) => (\n      <FlashTableRowData key={type?._id} type={type} index={index} />\n    ));\n  }\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Types\"} to=\"/flashSale-types/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n\n              <CTableHeaderCell scope=\"col\">Types Name</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageFlashSaleType;\n"],"names":["flashSaleTypesApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllTypes","query","url","method","providesTags","getSingleTypes","id","concat","deleteSingleTypes","mutation","invalidatesTags","updateSingleTypes","_ref","data","body","addSingleTypes","useGetAllTypesQuery","useGetSingleTypesQuery","useDeleteSingleTypesMutation","useAddSingleTypesMutation","useUpdateSingleTypesMutation","index","type","showModal","setShowModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","children","_jsx","CTableHeaderCell","scope","name","CTableDataCell","className","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteSize","ManageFlashSaleType","_data$data","_data$data2","content","Error","length","map","FlashTableRowData","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","style","width","minWidth","CTableBody"],"sourceRoot":""}