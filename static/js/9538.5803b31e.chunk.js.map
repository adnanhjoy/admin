{"version":3,"file":"static/js/9538.5803b31e.chunk.js","mappings":"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","sources":["redux/flashSaleOffer/flashSaleOfferApi.js","redux/flashSaleType/flashSaleTypeApi.js","utils/defaultOfferTypeValue.js","views/flashSale/showAll-flashSale-offer/add-flashSale-offer/FlashSaleOfferForm.jsx","views/flashSale/showAll-flashSale-offer/add-flashSale-offer/CreateFlashSaleOffer.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const FlashSaleOfferApi = apiSlice.injectEndpoints({\n  tagTypes: [\"FlashSaleOffer\", \"SingleFlashSaleOffer\"],\n  endpoints: (builder) => ({\n    // get all clearance sale discount for new user\n    getFlashSaleOffer: builder.query({\n      query: () => ({\n        url: `/flashSale-offer`,\n        method: \"GET\",\n      }),\n      providesTags: [\"FlashSaleOffer\"],\n    }),\n\n    // get single clearance discount  by id\n    getSingleFlashSaleOffer: builder.query({\n      query: (id) => ({\n        url: `/flashSale-offer/${id}`,\n        method: \"GET\",\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      providesTags: [\"SingleFlashSaleOffer\"],\n    }),\n\n    //add new  clearance sale discount\n    addFlashSaleOffer: builder.mutation({\n      query: (data) => ({\n        url: `/flashSale-offer`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"FlashSaleOffer\"],\n    }),\n\n    // update clearance sale discount by id\n    updateSingleFlashSaleOffer: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/flashSale-offer/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"FlashSaleOffer\"],\n    }),\n\n    // delete  clearance sale discount by id\n    deleteSingleFlashSaleOfferById: builder.mutation({\n      query: (id) => ({\n        url: `/flashSale-offer/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"FlashSaleOffer\", \"SingleFlashSaleOffer\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetFlashSaleOfferQuery,\n  useGetSingleFlashSaleOfferQuery,\n  useAddFlashSaleOfferMutation,\n  useUpdateSingleFlashSaleOfferMutation,\n  useDeleteSingleFlashSaleOfferByIdMutation,\n} = FlashSaleOfferApi;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const flashSaleTypesApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllTypes\", \"SingleTypes\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllTypes: builder.query({\n      query: () => ({\n        url: `/flashSale-types`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllTypes\"],\n    }),\n\n    //get single  users\n    getSingleTypes: builder.query({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleTypes\"],\n    }),\n\n    // delete users by id\n    deleteSingleTypes: builder.mutation({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n\n    // delete users by id\n    updateSingleTypes: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\", \"SingleTypes\"],\n    }),\n    // delete users by id\n    addSingleTypes: builder.mutation({\n      query: (data) => ({\n        url: `/flashSale-types`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTypesQuery,\n  useGetSingleTypesQuery,\n  useDeleteSingleTypesMutation,\n  useAddSingleTypesMutation,\n  useUpdateSingleTypesMutation,\n} = flashSaleTypesApi;\n","export const defaultTypesValue = (offers) => {\n  const defaultValue = [];\n  offers?.forEach((o) => {\n    defaultValue.push({ value: o, label: o });\n  });\n  return defaultValue;\n};\n","import { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport { defaultTypesValue } from \"src/utils/defaultOfferTypeValue\";\n\nconst FlashSaleOfferForm = ({\n  onSubmit,\n  loading,\n  data,\n  startDate,\n  setStartDate,\n  endDate,\n  color,\n  setColor,\n  setEndDate,\n}) => {\n  const { id } = useParams();\n  const { handleSubmit, control, register, errors, setValue } = useForm();\n  const { data: allTypes, isLoading: typeLoading, isError: typeError } = useGetAllTypesQuery();\n\n  const typesOptions = allTypes?.data?.map((type) => {\n    return { value: type?.name, label: type?.name };\n  });\n\n  useEffect(() => {\n    if (data) {\n      for (const key in data) {\n        setValue(key, data[key]);\n      }\n      setStartDate(data.startDate);\n      setEndDate(data.endDate);\n    }\n  }, [data, setValue]);\n\n\n  const handleChangeComplete = (newColor) => {\n    setColor(newColor.hex);\n  };\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCol xs={12}>\n        <label className=\"w-100\">Offer name</label>\n        <CFormInput\n          type=\"text\"\n          id=\"titleInputField\"\n          placeholder=\"Enter types name\"\n          aria-describedby=\"titleInputField\"\n          {...register(\"name\", { required: true })}\n        />\n\n        {errors?.name?.type === \"required\" && <p className=\"text-danger\">{\"Name is required\"}</p>}\n      </CCol>\n\n      <CCol xs={12}>\n        <label className=\"mb-0\">Select types for make offer</label>\n        <Controller\n          control={control}\n          name={\"offerType\"}\n          rules={{\n            required: true,\n          }}\n          render={({ field: { onChange, value, name, ref } }) => (\n            <Select\n              className=\"mt-2\"\n              defaultValue={defaultTypesValue(data?.offerType)}\n              inputRef={ref}\n              options={typesOptions}\n              value={typesOptions?.find((option) => option?.value === value)}\n              onChange={(val) => onChange(val?.map((opt) => opt?.value))}\n              isMulti\n            />\n          )}\n        />\n\n        {errors?.offerType?.type === \"required\" && (\n          <p className=\"text-danger\">{\"OfferType is required\"}</p>\n        )}\n      </CCol>\n      <CRow>\n        <CCol xs={6}>\n          <label className=\"text-primary\">Start Date</label>\n          {data && (\n            <label htmlFor=\"\" className=\" d-flex justify-content-between mb-1\">\n              <span>{new Date(startDate).toLocaleDateString()}</span>\n              <span>{new Date(startDate).toLocaleTimeString()}</span>\n            </label>\n          )}\n\n          <CFormInput\n            placeholder=\"Enter Start Date\"\n            aria-describedby=\"startDate\"\n            defaultValue={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            required={data ? false : true}\n            onFocus={(e) => (e.target.type = \"datetime-local\")}\n            onBlur={(e) => (e.target.type = \"text\")}\n          />\n          {errors?.startDate?.type === \"required\" && (\n            <p className=\"text-danger\">{\"Start date is required\"}</p>\n          )}\n        </CCol>\n\n        <CCol xs={6}>\n          <label className=\"text-primary\">End Date</label>\n          {data && (\n            <label htmlFor=\"\" className=\" d-flex justify-content-between mb-1\">\n              <span>{new Date(endDate).toLocaleDateString()}</span>\n              <span>{new Date(endDate).toLocaleTimeString()}</span>\n            </label>\n          )}\n\n          <CFormInput\n            placeholder=\"Enter End Date\"\n            aria-describedby=\"endDate\"\n            defaultValue={endDate}\n            required={data ? false : true}\n            onChange={(e) => setEndDate(e.target.value)}\n            onFocus={(e) => (e.target.type = \"datetime-local\")}\n            onBlur={(e) => (e.target.type = \"text\")}\n          />\n          {errors?.endDate?.type === \"required\" && (\n            <p className=\"text-danger\">{\"End date is required\"}</p>\n          )}\n        </CCol>\n        <CCol className=\"mt-2\" xs={12}>\n          <label className=\"mb-2\">\n            Background Color <span className=\"text-danger\">*</span>\n          </label>\n          <SketchPicker\n            width=\"350px\"\n            color={color}\n            onChangeComplete={handleChangeComplete}\n\n          />\n          <p className=\"mt-2\" style={{ color: `${color}` }}>\n            Selected color: {color}\n          </p>\n        </CCol>\n\n      </CRow>\n\n      <div className=\"text-end  \">\n        <CancelButton />\n        <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n          <CIcon icon={cilSave} className=\"me-2\" />\n          {loading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n        </CButton>\n      </div>\n    </CForm>\n  );\n};\n\nexport default FlashSaleOfferForm;\n","/* eslint-disable prettier/prettier */\n\nimport { CCard, CCardBody, CCardHeader } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport Loading from \"src/ui/Loading\";\nimport {\n  useAddFlashSaleOfferMutation,\n  useGetSingleFlashSaleOfferQuery,\n  useUpdateSingleFlashSaleOfferMutation,\n} from \"src/redux/flashSaleOffer/flashSaleOfferApi\";\nimport FlashSaleOfferForm from \"./FlashSaleOfferForm\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\n\nconst CreateFlashSaleOffer = () => {\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const navigate = useNavigate();\n  const [color, setColor] = useState(\"#FFFFFF\");\n\n\n  const {\n    data: offer,\n    isLoading: getLoading,\n    isError: offerError,\n    error: offerErrorMsg,\n  } = useGetSingleFlashSaleOfferQuery(id, { skip: haveId });\n\n  // flash sale offer types\n\n  const [\n    addFlashSaleOffer,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddFlashSaleOfferMutation();\n\n  const [\n    updateSingleFlashSaleOffer,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleFlashSaleOfferMutation();\n\n  // update or add new term conditions\n  const onSubmit = (data) => {\n    const startingDate = new Date(startDate).getTime();\n    const endingDate = new Date(endDate).getTime();\n    const timeStamps = endingDate - startingDate + (startingDate - Date.now()) + Date.now();\n    const defaultData = offer?.result;\n\n    const modifyData = {\n      ...defaultData,\n      name: data.name || defaultData?.name,\n      startDate: startDate || defaultData?.startDate,\n      endDate: endDate || defaultData?.startDate,\n      timeStamps: timeStamps || defaultData?.timeStamps,\n      offerType: data.offerType || defaultData?.offerType,\n      status: \"active\",\n      color: color\n    };\n\n\n    if (id) {\n      updateSingleFlashSaleOffer({ id, data: modifyData });\n    } else {\n      addFlashSaleOffer(modifyData);\n    }\n\n    \n  };\n\n  useEffect(() => {\n    addError && toast.error(addMsg?.data?.message || \"Added Failed\");\n    updateError && toast.error(updateMsg?.data?.message || \"Updated Failed\");\n  }, [addError, updateError]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n  return (\n    <CCard>\n      <HeaderBackButton title={id ? \"Customize flashSale offer\" : \"Add flashSale offer\"} />\n\n      {getLoading ? (\n        <Loading />\n      ) : (\n        <CCardBody>\n          <FlashSaleOfferForm\n            loading={updateLoading || addLoading}\n            data={offer?.result}\n            onSubmit={onSubmit}\n            startDate={startDate}\n            setStartDate={setStartDate}\n            endDate={endDate}\n            setEndDate={setEndDate}\n            color={color}\n            setColor={setColor}\n          />\n        </CCardBody>\n      )}\n    </CCard>\n  );\n};\n\nexport default CreateFlashSaleOffer;\n"],"names":["FlashSaleOfferApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getFlashSaleOffer","query","url","method","providesTags","getSingleFlashSaleOffer","id","concat","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","addFlashSaleOffer","mutation","data","body","invalidatesTags","updateSingleFlashSaleOffer","_ref","deleteSingleFlashSaleOfferById","useGetFlashSaleOfferQuery","useGetSingleFlashSaleOfferQuery","useAddFlashSaleOfferMutation","useUpdateSingleFlashSaleOfferMutation","useDeleteSingleFlashSaleOfferByIdMutation","flashSaleTypesApi","getAllTypes","getSingleTypes","deleteSingleTypes","updateSingleTypes","addSingleTypes","useGetAllTypesQuery","useGetSingleTypesQuery","useDeleteSingleTypesMutation","useAddSingleTypesMutation","useUpdateSingleTypesMutation","defaultTypesValue","offers","defaultValue","forEach","o","push","value","label","_allTypes$data","_errors$name","_errors$offerType","_errors$startDate","_errors$endDate","onSubmit","loading","startDate","setStartDate","endDate","color","setColor","setEndDate","useParams","handleSubmit","control","register","errors","setValue","useForm","allTypes","isLoading","typeLoading","isError","typeError","typesOptions","map","type","name","useEffect","key","_jsxs","CForm","children","CCol","xs","_jsx","className","CFormInput","placeholder","required","Controller","rules","render","_ref2","field","onChange","ref","Select","offerType","inputRef","options","find","option","val","opt","isMulti","CRow","htmlFor","Date","toLocaleDateString","toLocaleTimeString","e","target","onFocus","onBlur","SketchPicker","width","onChangeComplete","newColor","hex","style","CancelButton","CButton","CIcon","icon","cilSave","CreateFlashSaleOffer","haveId","setHaveId","useState","navigate","useNavigate","offer","getLoading","offerError","error","offerErrorMsg","skip","addLoading","addError","isSuccess","addSuccess","addMsg","updateLoading","updateError","updateSuccess","updateMsg","_addMsg$data","_updateMsg$data","toast","message","CCard","HeaderBackButton","title","Loading","CCardBody","FlashSaleOfferForm","result","startingDate","getTime","timeStamps","now","defaultData","modifyData","status"],"sourceRoot":""}