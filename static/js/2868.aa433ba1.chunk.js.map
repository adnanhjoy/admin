{"version":3,"file":"static/js/2868.aa433ba1.chunk.js","mappings":"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","sources":["redux/storeLocation/storeLocationApi.js","redux/variants/variantsApi.js","views/size/SizeTableRowData.jsx","views/size/ManageSize.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const storeLocationApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllStoreLocation\", \"singleStore\"],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllStoreLocation: builder.query({\n      query: () => ({\n        url: `/storeLocation`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllStoreLocation\"],\n    }),\n    // get blog offer discount for new user\n    getSingleStore: builder.query({\n      query: (id) => ({\n        url: `/storeLocation/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"singleStore\"],\n    }),\n    // get blog offer discount for new user\n    addNewStore: builder.mutation({\n      query: (blog) => ({\n        url: `/storeLocation`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AllStoreLocation\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleStore: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/storeLocation/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllStoreLocation\", \"singleStore\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleStore: builder.mutation({\n      query: (id) => ({\n        url: `/storeLocation/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllStoreLocation\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllStoreLocationQuery,\n  useGetSingleStoreQuery,\n  useAddNewStoreMutation,\n  useUpdateSingleStoreMutation,\n  useDeleteSingleStoreMutation,\n} = storeLocationApi;\n","import { apiSlice } from \"../api/apiSlice\";\n\nexport const variantApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllColor\", \"SingleColor\", \"AllColor\", \"SingleSize\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllColor: builder.query({\n      query: () => ({\n        url: `/color`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllColor\"],\n    }),\n\n    //get single  users\n    getSingleColor: builder.query({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleColor\"],\n    }),\n\n    // delete users by id\n    deleteSingleColor: builder.mutation({\n      query: (id) => ({\n        url: `/color/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    // delete users by id\n    updateSingleColor: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/color/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\", \"SingleColor\"],\n    }),\n    // delete users by id\n    addSingleColor: builder.mutation({\n      query: (data) => ({\n        url: `/color`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllColor\"],\n    }),\n\n    //:::::::::::::::::::::::: size api :::::::::::::::::::::::::://\n    getAllSize: builder.query({\n      query: () => ({\n        url: `/size`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllSize\"],\n    }),\n\n    //get single  users\n    getSingleSize: builder.query({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleSize\"],\n    }),\n\n    // delete users by id\n    deleteSingleSize: builder.mutation({\n      query: (id) => ({\n        url: `/size/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n\n    // delete users by id\n    updateSingleSize: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/size/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\", \"SingleSize\"],\n    }),\n    // delete users by id\n    addSingleSize: builder.mutation({\n      query: (data) => ({\n        url: `/size`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllSize\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllColorQuery,\n  useGetSingleColorQuery,\n  useDeleteSingleColorMutation,\n  useAddSingleColorMutation,\n  useUpdateSingleColorMutation,\n\n  useGetAllSizeQuery,\n  useGetSingleSizeQuery,\n  useDeleteSingleSizeMutation,\n  useAddSingleSizeMutation,\n  useUpdateSingleSizeMutation,\n} = variantApi;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleStoreMutation } from \"src/redux/storeLocation/storeLocationApi\";\nimport { useDeleteSingleSizeMutation } from \"src/redux/variants/variantsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst SizeTableRowData = ({ index, size }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleSize,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleSizeMutation();\n\n  // delete size\n  const handleDeleteSize = () => {\n    deleteSingleSize(size?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{size?.name}</p>\n      </CTableHeaderCell>\n\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/size/edit/${size?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteSize}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={size?._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default SizeTableRowData;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllSizeQuery } from \"src/redux/variants/variantsApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport SizeTableRowData from \"./SizeTableRowData\";\n\nconst ManageSize = () => {\n  const { data, isLoading, isError } = useGetAllSizeQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && data?.data?.length === 0) {\n    content = <p>There is no Size added</p>;\n  }\n  if (!isLoading && !isError && data?.data?.length > 0) {\n    content = data?.data.map((size, index) => (\n      <SizeTableRowData key={size?._id} size={size} index={index} />\n    ));\n  }\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Size\"} to=\"/size/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n\n              <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageSize;\n"],"names":["storeLocationApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllStoreLocation","query","url","method","providesTags","getSingleStore","id","concat","addNewStore","mutation","blog","body","invalidatesTags","updateSingleStore","_ref","data","deleteSingleStore","useGetAllStoreLocationQuery","useGetSingleStoreQuery","useAddNewStoreMutation","useUpdateSingleStoreMutation","useDeleteSingleStoreMutation","variantApi","getAllColor","getSingleColor","deleteSingleColor","updateSingleColor","addSingleColor","getAllSize","getSingleSize","deleteSingleSize","updateSingleSize","_ref2","addSingleSize","useGetAllColorQuery","useGetSingleColorQuery","useDeleteSingleColorMutation","useAddSingleColorMutation","useUpdateSingleColorMutation","useGetAllSizeQuery","useGetSingleSizeQuery","useDeleteSingleSizeMutation","useAddSingleSizeMutation","useUpdateSingleSizeMutation","index","size","showModal","setShowModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","children","_jsx","CTableHeaderCell","scope","name","CTableDataCell","className","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteSize","ManageSize","_data$data","_data$data2","content","length","map","SizeTableRowData","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","style","width","minWidth","CTableBody"],"sourceRoot":""}