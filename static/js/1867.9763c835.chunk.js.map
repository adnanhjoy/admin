{"version":3,"file":"static/js/1867.9763c835.chunk.js","mappings":"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","sources":["views/categories/manage-categories/CategoryTableRow.jsx","views/categories/manage-categories/ManageCategories.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteCategoryMutation } from \"src/redux/category/categoryApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst CategoryTableRow = ({ category, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteCategory, { isLoading: deleteLoading, isError, isSuccess }] =\n    useDeleteCategoryMutation();\n\n  const handleDeleteCategory = (id) => {\n    deleteCategory(id);\n  };\n  useEffect(() => {\n    isSuccess && toast.success(`This category is deleted successFully`, { id: \"dSuccess\" });\n    isError && toast.error(`There are something wrong`);\n  }, [isSuccess, isError]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      {/* <CTableHeaderCell scope=\"row\">\n                <Image width={50} src={category?.image} alt={category?.title} />\n            </CTableHeaderCell> */}\n      <CTableDataCell>{category?.title}</CTableDataCell>\n      <CTableDataCell>{category?.sortOrder}</CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/category/edit/${category?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteCategory}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={category._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default CategoryTableRow;\n","/* eslint-disable prettier/prettier */\nimport { cilPencil, cilPlus, cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { Link } from \"react-router-dom\";\nimport { useGetAllCategoryQuery } from \"../../../redux/category/categoryApi\";\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport { Form } from \"react-bootstrap\";\nimport CategoryTableRow from \"./CategoryTableRow\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\n\nconst ManageCategories = () => {\n  const {\n    data: categories,\n    isLoading: getCategoryLoading,\n    isError: getCategoryError,\n  } = useGetAllCategoryQuery();\n\n  let content = null;\n  if (getCategoryLoading) {\n    content = <p className=\"px-2  my-2 fs-5 text-primary\">Loading..</p>;\n  }\n  if (!getCategoryLoading && getCategoryError) {\n    content = <p className=\"text-danger\">There was an error</p>;\n  }\n  if (!getCategoryLoading && !getCategoryError && categories?.result?.length === 0) {\n    content = <p>There is no category</p>;\n  }\n\n  if (!getCategoryLoading && !getCategoryError && categories?.result?.length > 0) {\n    content = categories?.result?.map((category, index) => (\n      <CategoryTableRow key={category?._id} category={category} index={index} />\n    ));\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CardHeaderButton title={\"All Categories\"} to={\"/category/add\"} />\n            <CCardBody>\n              <p className=\"text-medium-emphasis small\">Here is the list of all categories.</p>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-start\">\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                      Sl. No.\n                    </CTableHeaderCell>\n                    {/* <CTableHeaderCell scope=\"col\" style={{ width: \"5rem\" }}>\n                                            Icon\n                                        </CTableHeaderCell> */}\n                    <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\" style={{ width: \"8rem\" }}>\n                      Sort Order\n                    </CTableHeaderCell>\n                    <CTableHeaderCell\n                      scope=\"col\"\n                      style={{\n                        width: \"100px\",\n                        minWidth: \"100px\",\n                      }}\n                    >\n                      Actions\n                    </CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>{content}</CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default ManageCategories;\n"],"names":["_ref","category","index","showModal","setShowModal","useState","deleteCategory","isLoading","deleteLoading","isError","isSuccess","useDeleteCategoryMutation","useEffect","toast","success","id","error","_jsxs","CTableRow","children","_jsx","CTableHeaderCell","scope","CTableDataCell","title","sortOrder","className","Link","to","concat","_id","EditButton","DeleteButton","DeleteModal","deleteThis","ManageCategories","_categories$result","_categories$result2","data","categories","getCategoryLoading","getCategoryError","useGetAllCategoryQuery","content","_categories$result3","result","length","map","CategoryTableRow","_Fragment","CRow","CCol","xs","CCard","CardHeaderButton","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","style","width","minWidth","CTableBody"],"sourceRoot":""}