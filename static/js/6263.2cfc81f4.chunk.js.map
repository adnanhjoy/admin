{"version":3,"file":"static/js/6263.2cfc81f4.chunk.js","mappings":"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","sources":["redux/terms&condition/termsConditionApi.js","views/terms&condition/Term&ConditionTableRow.jsx","views/terms&condition/ManageTerms&Conditions.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const termConditionApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AlltermsCondition\"],\n  endpoints: (builder) => ({\n    // get termsCondition offer discount for new user\n    getAllTermsCondition: builder.query({\n      query: () => ({\n        url: `/termsCondition`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AlltermsCondition\"],\n    }),\n    // get blog offer discount for new user\n    getSingleTermsCondition: builder.query({\n      query: (id) => ({\n        url: `/termsCondition/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n    // get blog offer discount for new user\n    addNewTermCondition: builder.mutation({\n      query: (blog) => ({\n        url: `/termsCondition`,\n        method: \"POST\",\n        body: blog,\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleTermCondition: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/termsCondition/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleTermCondition: builder.mutation({\n      query: (id) => ({\n        url: `/termsCondition/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AlltermsCondition\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTermsConditionQuery,\n  useGetSingleTermsConditionQuery,\n  useAddNewTermConditionMutation,\n  useUpdateSingleTermConditionMutation,\n  useDeleteSingleTermConditionMutation,\n} = termConditionApi;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\n\nimport { CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleTermConditionMutation } from \"src/redux/terms&condition/termsConditionApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst TermsConditionsTableRow = ({ index, blog }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleTermCondition,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleTermConditionMutation();\n\n  // delete blog\n  const handleDeleteBlog = () => {\n    deleteSingleTermCondition(blog?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete blog successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete blog failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{new Date(blog?.createdAt).toDateString()}</p>\n      </CTableHeaderCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog?.description }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog?.banglaDescription }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/pages/terms/edit/${blog?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteBlog}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={blog._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default TermsConditionsTableRow;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllTermsConditionQuery } from \"src/redux/terms&condition/termsConditionApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport TermsConditionsTableRow from \"./Term&ConditionTableRow\";\n\nconst ManageTermsConditions = () => {\n  const { data: allBlogs, isLoading, isError } = useGetAllTermsConditionQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && allBlogs?.data?.length === 0) {\n    content = <p>There is no Terms & condition!</p>;\n  }\n  if (!isLoading && !isError && allBlogs?.data?.length > 0) {\n    content = allBlogs?.data.map((blog, index) => (\n      <TermsConditionsTableRow key={blog?._id} blog={blog} index={index} />\n    ));\n  }\n\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Blogs\"} to=\"/pages/terms/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ width: \"10rem\" }}>\n                Added Dated\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Bangla description</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageTermsConditions;\n"],"names":["termConditionApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllTermsCondition","query","url","method","providesTags","getSingleTermsCondition","id","concat","invalidatesTags","addNewTermCondition","mutation","blog","body","updateSingleTermCondition","_ref","data","deleteSingleTermCondition","useGetAllTermsConditionQuery","useGetSingleTermsConditionQuery","useAddNewTermConditionMutation","useUpdateSingleTermConditionMutation","useDeleteSingleTermConditionMutation","index","showModal","setShowModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","children","_jsx","CTableHeaderCell","scope","Date","createdAt","toDateString","CTableDataCell","dangerouslySetInnerHTML","__html","description","banglaDescription","className","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteBlog","ManageTermsConditions","_allBlogs$data","_allBlogs$data2","allBlogs","content","length","map","TermsConditionsTableRow","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","color","style","width","minWidth","CTableBody"],"sourceRoot":""}