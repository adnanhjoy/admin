{"version":3,"file":"static/js/4591.d358f24c.chunk.js","mappings":"2JAGO,MAAMA,E,SAAWC,SAASC,gBAAgB,CAC/CC,SAAU,CAAC,WAAY,cACvBC,UAAYC,IAAO,CAEjBC,YAAaD,EAAQE,MAAM,CACzBA,MAAOA,KAAA,CACLC,IAAI,SACJC,OAAQ,QAEVC,aAAc,CAAC,cAGjBC,eAAgBN,EAAQE,MAAM,CAC5BA,MAAQK,IAAE,CACRJ,IAAI,UAADK,OAAYD,GACfH,OAAQ,QAEVC,aAAc,CAAC,gBAGjBI,WAAYT,EAAQU,SAAS,CAC3BR,MAAQS,IAAQ,CACdR,IAAI,SACJC,OAAQ,OACRQ,KAAMD,IAERE,gBAAiB,CAAC,cAIpBC,iBAAkBd,EAAQU,SAAS,CACjCR,MAAOa,IAAA,IAAC,GAAER,EAAE,SAAEI,GAAUI,EAAA,MAAM,CAC5BZ,IAAI,UAADK,OAAYD,GACfH,OAAQ,MACRQ,KAAMD,EACP,EACDE,gBAAiB,CAAC,WAAY,gBAIhCG,iBAAkBhB,EAAQU,SAAS,CACjCR,MAAQK,IAAE,CACRJ,IAAI,UAADK,OAAYD,GACfH,OAAQ,WAEVS,gBAAiB,CAAC,mBAKX,oBACXI,EAAmB,uBACnBC,EAAsB,sBACtBC,EAAqB,4BACrBC,EAA2B,4BAC3BC,GACE1B,C,iFCvDJ,MAgBA,EAhBqBoB,IAAuB,IAAtB,aAAEO,GAAcP,EACpC,OACEQ,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,QAAQ,SAAQC,UACxBH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CACNC,MAAM,SACNC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,SAAU,YAClDC,UAAU,YACVC,QAASA,IAAMb,GAAa,GAAMI,UAElCH,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAAUR,MAAO,CAAEG,SAAU,WAAYM,IAAK,MAAOC,KAAM,YAEjE,C,4KCHf,MA8CA,EA9CsBzB,IAAsB,IAArB,MAAE0B,EAAK,KAAEC,GAAM3B,EACpC,MAAO4B,EAAWrB,IAAgBsB,EAAAA,EAAAA,WAAS,IAEzC5B,GACE6B,UAAWC,EAAeC,QAASC,EAAaC,MAAOC,EAAQ,UAAEC,KACjE9B,EAAAA,EAAAA,MAYJ,OALA+B,EAAAA,EAAAA,YAAU,KACRC,EAAAA,GAAMC,UACNH,GAAaE,EAAAA,GAAME,QAAQ,2BAA4B,CAAEhD,GAAI,aAC7DyC,GAAeK,EAAAA,GAAMJ,MAAM,qBAAsB,CAAE1C,GAAI,WAAY,GAClE,CAAC4C,EAAWH,KAEbQ,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAA/B,SAAA,EACRH,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAACC,MAAM,MAAKjC,SAAEe,EAAQ,KACvClB,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAACC,MAAM,MAAKjC,UAC3BH,EAAAA,EAAAA,KAAA,KAAAG,SAAI,IAAIkC,KAAS,OAAJlB,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,WAAWC,oBAEhCN,EAAAA,EAAAA,MAACO,EAAAA,GAAc,CAAArC,SAAA,EACZH,EAAAA,EAAAA,KAAA,OAAKyC,wBAAyB,CAAEC,OAAQvB,EAAKwB,cAC7C3C,EAAAA,EAAAA,KAAA,OAAKyC,wBAAyB,CAAEC,OAAQvB,EAAKyB,mBAEhD5C,EAAAA,EAAAA,KAACwC,EAAAA,GAAc,CAAArC,UACb8B,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,GAAER,SAAA,EACfH,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAE,oBAAA7D,OAA0B,OAAJkC,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,KAAM5C,UACxCH,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,OAEbhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAY,CAAClD,aAAcA,UAGhCC,EAAAA,EAAAA,KAACkD,EAAAA,EAAW,CACVC,WA5BmBC,KACvB3D,EAAqB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,IAAI,EA4BvB3B,UAAWA,EACXrB,aAAcA,EACdf,GAAImC,EAAK4B,IACTxB,cAAeA,MAEP,ECShB,EAlDoB8B,KAAO,IAADC,EAAAC,EACxB,MAAQC,KAAMC,EAAQ,UAAEnC,EAAS,QAAEE,IAAY9B,EAAAA,EAAAA,MAE/C,IAAIQ,EAAU,KAed,OAdIoB,IACFpB,GAAUF,EAAAA,EAAAA,KAAA,KAAAG,SAAG,gBAEVmB,GAAaE,IAChBtB,GAAUF,EAAAA,EAAAA,KAAA,KAAAG,SAAG,+BAEVmB,GAAcE,GAAsC,KAAnB,OAARiC,QAAQ,IAARA,GAAc,QAANH,EAARG,EAAUD,YAAI,IAAAF,OAAN,EAARA,EAAgBI,UAC5CxD,GAAUF,EAAAA,EAAAA,KAAA,KAAAG,SAAG,yBAEVmB,IAAcE,IAAmB,OAARiC,QAAQ,IAARA,GAAc,QAANF,EAARE,EAAUD,YAAI,IAAAD,OAAN,EAARA,EAAgBG,QAAS,IACrDxD,EAAkB,OAARuD,QAAQ,IAARA,OAAQ,EAARA,EAAUD,KAAKG,KAAI,CAACxC,EAAMD,KAClClB,EAAAA,EAAAA,KAAC4D,EAAa,CAAiBzC,KAAMA,EAAMD,MAAOA,GAA1B,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,SAI5Bd,EAAAA,EAAAA,MAAC4B,EAAAA,GAAK,CAAA1D,SAAA,EACJH,EAAAA,EAAAA,KAAC8D,EAAAA,EAAgB,CAACC,MAAO,YAAajB,GAAG,qBACzC9C,EAAAA,EAAAA,KAACgE,EAAAA,GAAS,CAAA7D,UACR8B,EAAAA,EAAAA,MAACgC,EAAAA,GAAM,CAACC,MAAM,SAASvD,UAAU,cAAcwD,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAAlE,SAAA,EACtEH,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CAACjE,MAAM,QAAOF,UACvB8B,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAACvB,UAAU,aAAYR,SAAA,EAC/BH,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAACC,MAAM,MAAM7B,MAAO,CAAEE,MAAO,WAAYN,SAAC,aAG3DH,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAACC,MAAM,MAAM7B,MAAO,CAAEE,MAAO,SAAUN,SAAC,iBAGzDH,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAACC,MAAM,MAAKjC,SAAC,iBAC9BH,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CACfC,MAAM,MACN7B,MAAO,CACLE,MAAO,QACP8D,SAAU,SACVpE,SACH,kBAKLH,EAAAA,EAAAA,KAACwE,EAAAA,GAAU,CAAArE,SAAED,WAGX,C","sources":["redux/blog/blogsApi.js","ui/button/DeleteButton.jsx","views/blogs/BlogsTableRow.jsx","views/blogs/ManageBlogs.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const blogsApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllBlogs\", \"singleBlog\"],\n  endpoints: (builder) => ({\n    // get blogs offer discount for new user\n    getAllBlogs: builder.query({\n      query: () => ({\n        url: `/blogs`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllBlogs\"],\n    }),\n    // get blog offer discount for new user\n    getSingleBlogs: builder.query({\n      query: (id) => ({\n        url: `/blogs/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"singleBlog\"],\n    }),\n    // get blog offer discount for new user\n    addNewBlog: builder.mutation({\n      query: (formData) => ({\n        url: `/blogs`,\n        method: \"POST\",\n        body: formData,\n      }),\n      invalidatesTags: [\"AllBlogs\"],\n    }),\n\n    // get blog offer discount for new user\n    updateSingleBlog: builder.mutation({\n      query: ({ id, formData }) => ({\n        url: `/blogs/${id}`,\n        method: \"PUT\",\n        body: formData,\n      }),\n      invalidatesTags: [\"AllBlogs\", \"singleBlog\"],\n    }),\n\n    // get blog offer discount for new user\n    deleteSingleBlog: builder.mutation({\n      query: (id) => ({\n        url: `/blogs/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllBlogs\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllBlogsQuery,\n  useGetSingleBlogsQuery,\n  useAddNewBlogMutation,\n  useUpdateSingleBlogMutation,\n  useDeleteSingleBlogMutation,\n} = blogsApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTooltip } from \"@coreui/react\";\n\nconst DeleteButton = ({ setShowModal }) => {\n  return (\n    <CTooltip content=\"Delete\">\n      <CButton\n        color=\"danger\"\n        variant=\"outline\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        className=\"ms-2 mb-1\"\n        onClick={() => setShowModal(true)}\n      >\n        <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default DeleteButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { cilPencil, cilPlus, cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDeleteSingleBlogMutation } from \"src/redux/blog/blogsApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\nconst BlogsTableRow = ({ index, blog }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [\n    deleteSingleBlog,\n    { isLoading: deleteLoading, isError: deleteError, error: errorMsg, isSuccess },\n  ] = useDeleteSingleBlogMutation();\n\n  // delete blog\n  const handleDeleteBlog = () => {\n    deleteSingleBlog(blog?._id);\n  };\n\n  useEffect(() => {\n    toast.dismiss();\n    isSuccess && toast.success(\"Delete blog successfully\", { id: \"dSuccess\" });\n    deleteError && toast.error(\"Delete blog failed\", { id: \"dFailed\" });\n  }, [isSuccess, deleteError]);\n  return (\n    <CTableRow>\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableHeaderCell scope=\"row\">\n        <p>{new Date(blog?.createdAt).toDateString()}</p>\n      </CTableHeaderCell>\n      <CTableDataCell>\n        {<div dangerouslySetInnerHTML={{ __html: blog.blogTitle }} />}\n        {<div dangerouslySetInnerHTML={{ __html: blog.description }} />}\n      </CTableDataCell>\n      <CTableDataCell>\n        <div className=\"\">\n          <Link to={`/pages/blog/edit/${blog?._id}`}>\n            <EditButton />\n          </Link>\n          <DeleteButton setShowModal={setShowModal} />\n        </div>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={handleDeleteBlog}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={blog._id}\n        deleteLoading={deleteLoading}\n      />\n    </CTableRow>\n  );\n};\n\nexport default BlogsTableRow;\n","/* eslint-disable prettier/prettier */\nimport {\n  CCard,\n  CCardBody,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useGetAllBlogsQuery } from \"src/redux/blog/blogsApi\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport BlogsTableRow from \"./BlogsTableRow\";\n\nconst ManageBlogs = () => {\n  const { data: allBlogs, isLoading, isError } = useGetAllBlogsQuery();\n\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading..</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p>There is something wrong!</p>;\n  }\n  if (!isLoading && !isError && allBlogs?.data?.length === 0) {\n    content = <p>There is no blogs!</p>;\n  }\n  if (!isLoading && !isError && allBlogs?.data?.length > 0) {\n    content = allBlogs?.data.map((blog, index) => (\n      <BlogsTableRow key={blog?._id} blog={blog} index={index} />\n    ));\n  }\n  return (\n    <CCard>\n      <CardHeaderButton title={\"All Blogs\"} to=\"/pages/blog/add\" />\n      <CCardBody>\n        <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n          <CTableHead color=\"light\">\n            <CTableRow className=\"text-start\">\n              <CTableHeaderCell scope=\"col\" style={{ width: \"3.75rem\" }}>\n                Sl. No.\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ width: \"10rem\" }}>\n                Added Dated\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n              <CTableHeaderCell\n                scope=\"col\"\n                style={{\n                  width: \"100px\",\n                  minWidth: \"100px\",\n                }}\n              >\n                Actions\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>{content}</CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  );\n};\n\nexport default ManageBlogs;\n"],"names":["blogsApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllBlogs","query","url","method","providesTags","getSingleBlogs","id","concat","addNewBlog","mutation","formData","body","invalidatesTags","updateSingleBlog","_ref","deleteSingleBlog","useGetAllBlogsQuery","useGetSingleBlogsQuery","useAddNewBlogMutation","useUpdateSingleBlogMutation","useDeleteSingleBlogMutation","setShowModal","_jsx","CTooltip","content","children","CButton","color","variant","style","height","width","position","className","onClick","CIcon","icon","cilTrash","top","left","index","blog","showModal","useState","isLoading","deleteLoading","isError","deleteError","error","errorMsg","isSuccess","useEffect","toast","dismiss","success","_jsxs","CTableRow","CTableHeaderCell","scope","Date","createdAt","toDateString","CTableDataCell","dangerouslySetInnerHTML","__html","blogTitle","description","Link","to","_id","EditButton","DeleteButton","DeleteModal","deleteThis","handleDeleteBlog","ManageBlogs","_allBlogs$data","_allBlogs$data2","data","allBlogs","length","map","BlogsTableRow","CCard","CardHeaderButton","title","CCardBody","CTable","align","bordered","hover","responsive","CTableHead","minWidth","CTableBody"],"sourceRoot":""}