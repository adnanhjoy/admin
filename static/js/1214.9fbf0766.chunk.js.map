{"version":3,"file":"static/js/1214.9fbf0766.chunk.js","mappings":"6PAGO,MAAMA,E,SAAWC,SAASC,gBAAgB,CAC/CC,SAAU,CAAC,WAAY,cAAe,cAAe,kBACrDC,UAAYC,IAAO,CAEjBC,aAAcD,EAAQE,MAAM,CAC1BA,MAAQA,IAAK,CACXC,IAAI,SAADC,OAAWF,GACdG,OAAQ,QAEVC,aAAc,CAAC,cAIjBC,qBAAsBP,EAAQE,MAAM,CAClCA,MAAQA,IAAK,CACXC,IAAI,sBAADC,OAAwBF,GAC3BG,OAAQ,QAEVC,aAAc,CAAC,oBAIjBE,eAAgBR,EAAQE,MAAM,CAC5BA,MAAOA,KAAA,CACLC,IAAI,qBACJE,OAAQ,QAEVC,aAAc,CAAC,iBAIjBG,mBAAoBT,EAAQE,MAAM,CAChCA,MAAOA,KAAA,CACLC,IAAI,yBACJE,OAAQ,UAKZK,qBAAsBV,EAAQE,MAAM,CAClCA,MAAOA,KAAA,CACLC,IAAI,2BACJE,OAAQ,UAKZM,oBAAqBX,EAAQE,MAAM,CACjCA,MAAOA,KAAA,CACLC,IAAI,0BACJE,OAAQ,UAKZO,qBAAsBZ,EAAQE,MAAM,CAClCA,MAAOA,KAAA,CACLC,IAAI,4BACJE,OAAQ,UAKZQ,kBAAmBb,EAAQE,MAAM,CAC/BA,MAAOA,KAAA,CACLC,IAAI,wBACJE,OAAQ,UAKZS,mBAAoBd,EAAQE,MAAM,CAChCA,MAAOA,KAAA,CACLC,IAAI,0BACJE,OAAQ,UAKZU,cAAef,EAAQE,MAAM,CAC3BA,MAAOA,KAAA,CACLC,IAAI,oBACJE,OAAQ,UAKZW,oBAAqBhB,EAAQiB,SAAS,CACpCf,MAAOgB,IAAA,IAAC,KAAEC,GAAMD,EAAA,MAAM,CACpBf,IAAI,2BACJE,OAAQ,OACRe,KAAMD,EACP,IAIHE,eAAgBrB,EAAQE,MAAM,CAC5BA,MAAOA,KAAA,CACLC,IAAI,qBACJE,OAAQ,UAKZiB,mBAAoBtB,EAAQE,MAAM,CAChCA,MAAQqB,IAAE,CACRpB,IAAI,UAADC,OAAYmB,GACflB,OAAQ,QAGVC,aAAc,CAAC,iBAIjBkB,sBAAuBxB,EAAQiB,SAAS,CACtCf,MAAOuB,IAAA,IAAC,GAAEF,EAAE,KAAEJ,GAAMM,EAAA,MAAM,CACxBtB,IAAI,UAADC,OAAYmB,GACflB,OAAQ,MACRe,KAAMD,EACP,EACDO,gBAAiB,CAAC,WAAY,cAAe,cAAe,iBAAkB,cAIhFC,gBAAiB3B,EAAQiB,SAAS,CAChCf,MAAQqB,IAAE,CACRpB,IAAI,UAADC,OAAYmB,GACflB,OAAQ,SACRe,KAAMG,IAERG,gBAAiB,CAAC,WAAY,oBAKhCE,mBAAoB5B,EAAQiB,SAAS,CACnCf,MAAO2B,IAAA,IAAC,QAAEC,EAAO,UAAEC,EAAS,KAAEZ,GAAMU,EAAA,MAAM,CACxC1B,IAAI,UAADC,OAAY0B,EAAO,cAAA1B,OAAa2B,EAAS,gBAC5C1B,OAAQ,MACRe,KAAMD,EACP,EACDO,gBAAiB,CAAC,WAAY,yBAKvB,qBACXM,EAAoB,6BACpBC,EAA4B,uBAC5BC,EAAsB,2BACtBC,EAA0B,iCAC1BC,EAAgC,2BAChCC,EAA0B,2BAC1BC,EAA0B,4BAC1BC,EAA2B,6BAC3BC,EAA4B,0BAC5BC,EAAyB,2BACzBC,EAA0B,sBAC1BC,EAAqB,+BACrBC,EAA8B,uBAC9BC,EAAsB,6BACtBC,EAA4B,8BAC5BC,GACEpD,C,+HCnJJ,MAAMqD,EAAgB9B,IAAwC,IAAvC,UAAE+B,EAAS,aAAEC,EAAY,KAAEC,GAAMjC,EACtD,MAAM,KAAEkC,EAAI,MAAEC,EAAK,UAAEC,EAAS,MAAEC,GAAUJ,GAAQ,CAAC,EACnD,OACEK,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,QAAST,EACTU,QAASA,KACPT,GAAa,EAAM,EACnBU,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACC,aAAW,EAAAH,SAAC,uBAC1BC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAAAJ,UACTC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,GAAGN,UACXJ,EAAAA,EAAAA,MAACW,EAAAA,GAAK,CAACC,UAAU,GAAER,SAAA,EACjBC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAACD,UAAU,oDAAmDR,UACxEJ,EAAAA,EAAAA,MAAA,UAAQY,UAAU,kCAAiCR,SAAA,CAChD,KACDC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAASJ,UAAU,aAAa,yBAIjDP,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAACL,UAAU,YAAWR,UAC9BJ,EAAAA,EAAAA,MAACkB,EAAAA,GAAU,CAACC,OAAK,EAAAf,SAAA,EACfJ,EAAAA,EAAAA,MAACoB,EAAAA,GAAc,CAACR,UAAU,4BAA2BR,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACEgB,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,UACjBC,aAAc,OACdC,OAAQ,sBAEVd,UAAU,wEAAuER,UAEjFC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,KAAMC,EAAAA,EACNJ,UAAU,kBACVS,MAAO,CAAEE,MAAO,eAAgBI,WAAY,cAG/C/B,MAEHI,EAAAA,EAAAA,MAACoB,EAAAA,GAAc,CAACR,UAAU,4BAA2BR,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACEgB,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,UACjBC,aAAc,OACdC,OAAQ,sBAEVd,UAAU,wEAAuER,UAEjFC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,KAAMa,EAAAA,EACNhB,UAAU,kBACVS,MAAO,CAAEE,MAAO,eAAgBI,WAAY,cAG/C7B,MAEHE,EAAAA,EAAAA,MAACoB,EAAAA,GAAc,CAACR,UAAU,4BAA2BR,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACEgB,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,UACjBC,aAAc,OACdC,OAAQ,sBAEVd,UAAU,wEAAuER,UAEjFC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,KAAMc,EAAAA,EACNjB,UAAU,kBACVS,MAAO,CAAEE,MAAO,eAAgBI,WAAY,cAI/C9B,MAEHG,EAAAA,EAAAA,MAACoB,EAAAA,GAAc,CAACR,UAAU,4BAA2BR,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACEgB,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,UACjBC,aAAc,OACdC,OAAQ,sBAEVd,UAAU,wEAAuER,UAEjFC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CACJC,KAAMe,EAAAA,EACNlB,UAAU,kBACVS,MAAO,CAAEE,MAAO,eAAgBI,WAAY,cAG/C5B,kBAObM,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAAA3B,UACXC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CAACC,MAAM,YAAYC,QAASA,IAAMxC,GAAa,GAAOU,SAAC,eAI1D,EAIb,GAAe+B,EAAAA,EAAAA,MAAK3C,E,wECjIpB,MAgBA,EAhBkB9B,IAAsB,IAArB,YAAE0E,GAAa1E,EAChC,OACE2C,EAAAA,EAAAA,KAACgC,EAAAA,GAAQ,CAACC,QAAQ,OAAMlC,UACtBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CACNE,QAASE,EACTxB,UAAU,aACVS,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQgB,SAAU,YAClDN,MAAM,OACNO,QAAQ,UAASpC,UAEjBC,EAAAA,EAAAA,KAACoC,EAAAA,IAAK,CAACpB,MAAO,CAAEkB,SAAU,WAAYG,IAAK,MAAOC,KAAM,YAEjD,C,mHCbf,MA+BA,EA/BiBjF,IAAqB,IAADkF,EAAA,IAAnB,WAAEC,GAAYnF,EAC1BoF,EAAoBC,GACd,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGC,WAAWC,QAAQ,wBAAyB,KAExD,MAAM,YAAEC,EAAW,WAAEC,EAAU,cAAEC,IAA4B,OAAVP,QAAU,IAAVA,GAAgB,QAAND,EAAVC,EAAYlF,YAAI,IAAAiF,OAAN,EAAVA,EAAmB,KAAM,CAAC,GACvE,KAAEhD,EAAI,MAAEC,EAAK,MAAEE,IAAoB,OAAV8C,QAAU,IAAVA,OAAU,EAAVA,EAAYlD,OAAQ,CAAC,EACpD,OACEU,EAAAA,EAAAA,KAAA,OAAAD,UACEJ,EAAAA,EAAAA,MAAA,OAAKY,UAAU,sCAAqCR,SAAA,EAClDJ,EAAAA,EAAAA,MAAA,OAAKY,UAAU,qBAAoBR,SAAA,EACjCJ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,SAAOR,MACVI,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,UAAQP,MACXG,EAAAA,EAAAA,MAAA,KAAAI,SAAA,CAAG,UAAQL,SAEbC,EAAAA,EAAAA,MAAA,OAAKY,UAAU,kBAAiBR,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,eAAcR,SAAE0C,EAAiBK,IAAe,KAC7D9C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAELJ,EAAAA,EAAAA,MAAA,OAAKY,UAAU,qBAAoBR,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,eAAcR,SAAE0C,EAAiBM,IAAkB,KAChE/C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBAELJ,EAAAA,EAAAA,MAAA,OAAKY,UAAU,mBAAkBR,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,eAAcR,SAAE0C,EAAiBI,IAAgB,KAC9D7C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAGH,EC2GV,EAjHyB1C,IAAuD,IAADkF,EAAAS,EAAA,IAArD,UAAE5D,EAAS,aAAEC,EAAY,MAAEhD,EAAK,aAAE4G,GAAc5F,EACxE,MAAO6F,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAGrC9F,KAAMkF,EACNa,UAAWC,EACXC,QAASC,IACPpF,EAAAA,EAAAA,IAA6B/B,EAAO,CAAEoH,KAAMP,KAG9CpF,GACEuF,UAAWK,EAAeC,UAAWC,EAAeL,QAASM,KAC7DvF,EAAAA,EAAAA,OAEJwF,EAAAA,EAAAA,YAAU,MACC,OAALzH,QAAK,IAALA,OAAK,EAALA,EAAO0H,QAAS,GAClBZ,GAAW,EACb,GACC,CAAC9G,IAEJ,MAAM2H,EAAqBtG,IACzBI,EAAgBJ,EAAG,EAGrB,IAAIuE,EAAU,KAkBiD,IAADgC,GAjB1DX,IACFrB,GAAUjC,EAAAA,EAAAA,KAACkE,EAAAA,EAAO,MAEfZ,GAAcE,IACjBvB,GACEjC,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAC5D,UAAU,wCAAwC6D,QAAS,OAAOrE,SAAC,oCAKlFuD,GAAeE,GAAyC,KAAnB,OAAVhB,QAAU,IAAVA,GAAgB,QAAND,EAAVC,EAAYlF,YAAI,IAAAiF,OAAN,EAAVA,EAAkBwB,UAChD9B,GACEjC,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAC5D,UAAU,wCAAwC6D,QAAS,OAAOrE,SAAC,oBAKlFuD,IAAeE,IAAsB,OAAVhB,QAAU,IAAVA,GAAgB,QAANQ,EAAVR,EAAYlF,YAAI,IAAA0F,OAAN,EAAVA,EAAkBe,QAAS,KACzD9B,EAAoB,OAAVO,QAAU,IAAVA,GAAgB,QAANyB,EAAVzB,EAAYlF,YAAI,IAAA2G,OAAN,EAAVA,EAAkBI,KAAI,CAACC,EAAOC,KACtCvE,EAAAA,EAAAA,KAACwE,EAAAA,GAAU,CAAAzE,UACTC,EAAAA,EAAAA,KAACyE,EAAAA,EAAY,CACXT,kBAAmBA,EACnBN,cAAeA,EACfa,MAAOA,EACPD,MAAOA,KALW,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOI,QAW5B,OACE/E,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CACLC,QAAST,EACTU,QAASA,KACPT,GAAa,EAAM,EAErBkB,UAAU,aACVS,MAAO,CAAE2D,UAAW,QAAS5E,SAAA,EAE7BC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACC,aAAW,EAACK,UAAU,eAAcR,SAAC,4BAGnDC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAAAJ,UACTJ,EAAAA,EAAAA,MAAAiF,EAAAA,SAAA,CAAA7E,SAAA,CAEGkD,IAAgBjD,EAAAA,EAAAA,KAAC6E,EAAQ,CAACrC,WAAsB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYsC,aACnDnF,EAAAA,EAAAA,MAACoF,EAAAA,GAAM,CAACC,MAAM,SAASzE,UAAU,cAAc0E,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAApF,SAAA,EACtEC,EAAAA,EAAAA,KAACoF,EAAAA,EAAU,CAACxD,MAAM,QAAO7B,UACvBJ,EAAAA,EAAAA,MAAC0F,EAAAA,GAAS,CAAC9E,UAAU,aAAYR,SAAA,EAC/BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAMvE,MAAO,CAAEE,MAAO,QAASnB,SAAC,aAGxDC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CACfC,MAAM,MACNvE,MAAO,CACLE,MAAO,SACPnB,SACH,cAGDC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,cAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,WAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,WAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,oBAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,gBAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,iBAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,kBAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CACfC,MAAM,MACNvE,MAAO,CACLE,MAAO,QACPsE,SAAU,SACVzF,SACH,iBAKJkC,WAKPjC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,MACN,C,6FC7Hb,MAsCA,EAtCyBrE,IAAqC,IAApC,gBAAEoI,EAAe,UAAEC,GAAWrI,EACtD,MAAOsI,EAAaC,IAAkBxC,EAAAA,EAAAA,UAAS,GACzCyC,GAAWC,EAAAA,EAAAA,MAEXC,EAAcC,IAClBJ,EAAeI,GACfH,GAASI,EAAAA,EAAAA,GAAaP,GAAa,IAAK,OAAQM,EAAKrD,YAAY,EAGnE,IAAIuD,EAAcT,EAAuBU,MAAMC,KAAK,CAAErC,OAAQ0B,IAAmB,CAACY,EAAGC,IAAMA,EAAI,IAA3D,GAEhCC,EAAQ,GAEZ,IAAK,IAAIC,EAAS,EAAGA,GAAUN,EAAWnC,OAAQyC,IAChDD,EAAME,MACJzG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAWC,KAAI,CAEdC,OAAQJ,IAAWb,EACnB9D,QAASA,IAAMkE,EAAWS,GAAQzG,SAEjCyG,GAJIA,IAQX,OACExG,EAAAA,EAAAA,KAAA,OAAKO,UAAU,kCAAiCR,UAC9CJ,EAAAA,EAAAA,MAAC+G,EAAAA,EAAU,CAACG,KAAK,KAAI9G,SAAA,CAClB4F,EAAc,IAAK3F,EAAAA,EAAAA,KAAC0G,EAAAA,EAAWI,KAAI,CAACjF,QAASA,IAAMkE,EAAWJ,EAAc,KAC5EY,EACAZ,EAAcF,IACbzF,EAAAA,EAAAA,KAAC0G,EAAAA,EAAWK,KAAI,CAAClF,QAASA,IAAMkE,EAAWJ,EAAc,KAE1DF,EAAkB,IAAKzF,EAAAA,EAAAA,KAAC0G,EAAAA,EAAWM,KAAI,CAACnF,QAASA,IAAMkE,EAAWN,SAEjE,C,mCCzCH,MAAMQ,EAAeA,CAACP,EAAWuB,EAAWC,KACjD,MAAMC,EAAczB,EAAU0B,MAAM,KACpC,IAAIC,GAAe,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAYpD,OAAQuD,IAAK,CAC3C,MAAMC,EAAQJ,EAAYG,GAAGF,MAAM,KACnC,GAAIG,EAAM,KAAON,EAAW,CAC1BM,EAAM,GAAKL,EACXC,EAAYG,GAAKC,EAAMC,KAAK,KAC5BH,GAAe,EACf,KACF,CACF,CACKA,GACHF,EAAYV,KAAK,GAADlK,OAAI0K,EAAS,KAAA1K,OAAI2K,IAKnC,MAHY,IAAI,IAAIO,IAAIN,IAEHK,KAAK,IACX,C,gGCfV,MAAME,E,SAAqB,SAAA1L,gBAAgB,CAChDC,SAAU,CAAC,YAAa,gBAExBC,UAAYC,IAAO,CAEjBwL,cAAexL,EAAQE,MAAM,CAC3BA,MAAQA,IAAK,CACXC,IAAI,UAADC,OAAYF,GACfG,OAAQ,QAEVC,aAAc,CAAC,eAIjBmL,gBAAiBzL,EAAQE,MAAM,CAC7BA,MAAQqB,IAAE,CACRpB,IAAI,WAADC,OAAamB,GAChBlB,OAAQ,QAEVC,aAAc,CAAC,kBAIjBoL,mBAAoB1L,EAAQiB,SAAS,CACnCf,MAAOgB,IAAA,IAAC,GAAEK,EAAE,KAAEJ,GAAMD,EAAA,MAAM,CACxBf,IAAI,WAADC,OAAamB,GAChBlB,OAAQ,MACRe,KAAMD,EACP,EACDO,gBAAiB,CAAC,YAAa,kBAIjCiK,mBAAoB3L,EAAQiB,SAAS,CACnCf,MAAQqB,IAAE,CACRpB,IAAI,WAADC,OAAamB,GAChBlB,OAAQ,WAEVqB,gBAAiB,CAAC,YAAa,uBAKxB,sBACXkK,EAAqB,wBACrBC,EAAuB,8BACvBC,EAA6B,8BAC7BC,GACER,E,iHC3BJ,MAAMS,EAAgB,CACpB,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,aAoG9B,EAjGuBhL,IAAwB,IAAvB,OAAEiL,EAAM,MAAE/D,GAAOlH,EACvC,MAAO+B,EAAWC,IAAgB+D,EAAAA,EAAAA,WAAS,IACpCmF,EAAeC,IAAoBpF,EAAAA,EAAAA,aACnCqF,EAAmBC,IAAuBtF,EAAAA,EAAAA,WAAS,IACnDuF,EAAiBC,IAAsBxF,EAAAA,EAAAA,WAAS,IAChDyF,EAAaC,IAAkB1F,EAAAA,EAAAA,UAAS,KAExC0E,GAAoB,UAAEzE,EAAS,QAAEE,EAAO,UAAEI,IAAeuE,KACzDL,GAAsBxE,UAAW0F,EAAepF,UAAWqF,IAChEf,KAEFnE,EAAAA,EAAAA,YAAU,KACRH,GAAasF,EAAAA,GAAMC,QAAQ,yBAC3B3F,GAAW0F,EAAAA,GAAME,MAAM,wBACvBH,GAAiBC,EAAAA,GAAMC,QAAQ,yBAAyB,GACvD,CAACvF,EAAWJ,EAASyF,KAExBlF,EAAAA,EAAAA,YAAU,KACR0E,EAAuB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQc,OAAO,GAC/B,CAACd,IAYJ,OACE3I,EAAAA,EAAAA,MAAC0F,EAAAA,GAAS,CAAAtF,SAAA,EACRC,EAAAA,EAAAA,KAACqJ,EAAAA,EAAgB,CACfhN,MAAOwM,EACPzJ,UAAWuJ,EACXtJ,aAAcuJ,KAEhB5I,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAEwE,EAAQ,KACvCvE,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAQ,OAANuI,QAAM,IAANA,OAAM,EAANA,EAAQrK,WACzB+B,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAQ,OAANuI,QAAM,IAANA,OAAM,EAANA,EAAQgB,UACzB3J,EAAAA,EAAAA,MAACwE,EAAAA,GAAc,CAAApE,SAAA,CAAC,SAAa,OAANuI,QAAM,IAANA,OAAM,EAANA,EAAQiB,iBAC/BvJ,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,UACbC,EAAAA,EAAAA,KAACwJ,EAAAA,GAAW,CACV,aAAW,eACXjJ,UAAS,iBAAAhE,OAAsC,cAAb,OAAN+L,QAAM,IAANA,OAAM,EAANA,EAAQc,SAAyB,cAAa,KAAA7M,OACrD,cAAb,OAAN+L,QAAM,IAANA,OAAM,EAANA,EAAQc,SAAyB,gBAEnCpI,MAAO,CAAEG,gBAAiB,WAC1BsI,QAAStB,EACTC,MAAOG,EACPmB,SAAWC,IAAMC,OA9BHxB,EA8BgBuB,EAAEE,OAAOzB,MA9BlB1K,EA8B+B,OAAN4K,QAAM,IAANA,OAAM,EAANA,EAAQ5D,IA7B5D8D,EAAiBJ,QAGjBP,EAAmB,CAAEnK,KAAIJ,KAFZ,CAAE8L,OAAQhB,KAFJwB,IAACxB,EAAO1K,CA+BrB,OAGJsC,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE,IAAI+J,KAAW,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQyB,WAAWC,wBAC7ChK,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAQ,OAANuI,QAAM,IAANA,OAAM,EAANA,EAAQ2B,eACzBtK,EAAAA,EAAAA,MAACwE,EAAAA,GAAc,CAAApE,SAAA,EACbC,EAAAA,EAAAA,KAACgC,EAAAA,GAAQ,CAACC,QAAQ,OAAMlC,UACtBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CACNE,QAASA,KAAMqI,OAjCAjM,EAiCsB,OAANqK,QAAM,IAANA,OAAM,EAANA,EAAQrK,QAhC/C2K,GAAmB,QACnBE,EAAe,WAADvM,OAAY0B,IAFHA,KAiCiC,EAChDsC,UAAU,aACVS,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQgB,SAAU,YAClDN,MAAM,OACNO,QAAQ,UAASpC,UAEjBC,EAAAA,EAAAA,KAACoC,EAAAA,IAAK,CAACpB,MAAO,CAAEkB,SAAU,WAAYG,IAAK,MAAOC,KAAM,cAG5DtC,EAAAA,EAAAA,KAACgC,EAAAA,GAAQ,CAACC,QAAQ,SAAQlC,UACxBC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CACNC,MAAM,SACNO,QAAQ,UACRnB,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQgB,SAAU,YAClD3B,UAAU,OACVsB,QAASA,IAAMxC,GAAa,GAAMU,UAElCC,EAAAA,EAAAA,KAACS,EAAAA,EAAK,CAACC,KAAMyJ,EAAAA,EAAUnJ,MAAO,CAAEkB,SAAU,WAAYG,IAAK,MAAOC,KAAM,iBAI9EtC,EAAAA,EAAAA,KAACoK,EAAAA,EAAW,CACVC,WAAYvC,EACZ1I,UAAWA,EACXC,aAAcA,EACd3B,GAAU,OAAN4K,QAAM,IAANA,OAAM,EAANA,EAAQ5D,IACZhB,cAAeL,KAEjBrD,EAAAA,EAAAA,KAACb,EAAAA,EAAa,CACZC,UAAWqJ,EACXpJ,aAAcqJ,EACdpJ,KAAY,OAANgJ,QAAM,IAANA,OAAM,EAANA,EAAQhJ,SA3DI,OAANgJ,QAAM,IAANA,OAAM,EAANA,EAAQ5D,IA6DZ,EC5ChB,EA9D2B4F,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAE/B,MAAMC,GAAWC,EAAAA,EAAAA,OACTvN,KAAMwN,EAAU,UAAEzH,EAAS,QAAEE,GAAYwE,EAAsB6C,EAASG,QAEhF,IAAI9I,EAAU,KAUuD,IAAD+I,EAAAC,GAThE5H,IACFpB,GAAUjC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAEVsD,GAAaE,IAChBtB,GAAUjC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,cAAaR,SAAC,8BAElCsD,GAAcE,GAAgD,KAA3B,OAAVuH,QAAU,IAAVA,GAAkB,QAARP,EAAVO,EAAYI,cAAM,IAAAX,GAAM,QAANC,EAAlBD,EAAoBjN,YAAI,IAAAkN,OAAd,EAAVA,EAA0BzG,UACtD9B,GAAUjC,EAAAA,EAAAA,KAAA,KAAGO,UAAU,OAAMR,SAAC,0BAE3BsD,IAAcE,IAAqB,OAAVuH,QAAU,IAAVA,GAAkB,QAARL,EAAVK,EAAYI,cAAM,IAAAT,GAAM,QAANC,EAAlBD,EAAoBnN,YAAI,IAAAoN,OAAd,EAAVA,EAA0B3G,QAAS,KAC/D9B,EAAoB,OAAV6I,QAAU,IAAVA,GAAkB,QAARE,EAAVF,EAAYI,cAAM,IAAAF,GAAM,QAANC,EAAlBD,EAAoB1N,YAAI,IAAA2N,OAAd,EAAVA,EAA0B5G,KAAI,CAACiE,EAAQ/D,KAC/CvE,EAAAA,EAAAA,KAACmL,EAAc,CAAmB7C,OAAQA,EAAQ/D,MAAOA,GAA9B,OAAN+D,QAAM,IAANA,OAAM,EAANA,EAAQ5D,QAIjC,OACE1E,EAAAA,EAAAA,KAACoL,EAAAA,GAAI,CAAArL,UACHC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,GAAGN,UACXJ,EAAAA,EAAAA,MAACW,EAAAA,GAAK,CAACC,UAAU,OAAMR,SAAA,EACrBC,EAAAA,EAAAA,KAACqL,EAAAA,EAAgB,CAACC,MAAO,cAAeC,GAAI,aAC5C5L,EAAAA,EAAAA,MAACiB,EAAAA,GAAS,CAAAb,SAAA,EACRC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,yBACNJ,EAAAA,EAAAA,MAACoF,EAAAA,GAAM,CAACC,MAAM,SAASzE,UAAU,cAAc0E,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAApF,SAAA,EACtEC,EAAAA,EAAAA,KAACoF,EAAAA,EAAU,CAACxD,MAAM,QAAO7B,UACvBJ,EAAAA,EAAAA,MAAC0F,EAAAA,GAAS,CAAC9E,UAAU,aAAYR,SAAA,EAC/BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,aAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,cAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,YAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,oBAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,aAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,UAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAAC,iBAC9BC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CACfC,MAAM,MACNvE,MAAO,CACLE,MAAO,OACPsE,SAAU,SACVzF,SACH,kBAKLC,EAAAA,EAAAA,KAACwE,EAAAA,GAAU,CAAAzE,SAAEkC,QAEfjC,EAAAA,EAAAA,KAACwL,EAAAA,EAAgB,CACf9F,UAAWkF,EAASG,OACpBtF,gBAA2B,OAAVqF,QAAU,IAAVA,GAAkB,QAARH,EAAVG,EAAYI,cAAM,IAAAP,OAAR,EAAVA,EAAoBlF,2BAKxC,C,yIC/DX,MAkFA,EAlFqBpI,IAAyD,IAAxD,MAAEkH,EAAK,MAAED,EAAK,kBAAEN,EAAiB,cAAEN,GAAerG,EACtE,MAAO+B,EAAWC,IAAgB+D,EAAAA,EAAAA,WAAS,IAErC,YAAEqI,EAAW,UAAE1B,EAAS,UAAE2B,EAAS,YAAEC,EAAW,OAAEvC,EAAM,SAAEwC,EAAQ,UAAEC,EAAS,QAAE5N,EAAO,OAAEqK,GAC5FhE,GAAS,CAAC,GACLwH,EAAgBC,IAAqB3I,EAAAA,EAAAA,UAASgG,IAE9CzL,GAAyB0F,UAAW0F,EAAa,YAAEiD,KACxDzN,EAAAA,EAAAA,MAkBF,OACEoB,EAAAA,EAAAA,MAAAiF,EAAAA,SAAA,CAAA7E,SAAA,EACEC,EAAAA,EAAAA,KAACoK,EAAAA,EAAW,CACVC,WAAYrG,EACZ5E,UAAWA,EACXC,aAAcA,EACd3B,GAAS,OAAL4G,QAAK,IAALA,OAAK,EAALA,EAAOI,IACXhB,cAAeA,KAEjB/D,EAAAA,EAAAA,MAAC0F,EAAAA,GAAS,CAAAtF,SAAA,EACRC,EAAAA,EAAAA,KAACsF,EAAAA,GAAgB,CAACC,MAAM,MAAKxF,SAC1BwE,EAAQ,KAGXvE,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE6L,KACjB5L,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE9B,KACjB+B,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE8L,KACjB7L,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE0L,KACjB9L,EAAAA,EAAAA,MAACwE,EAAAA,GAAc,CAAApE,SAAA,CAAE4L,EAAY,IAAErD,IAAU3I,EAAAA,EAAAA,MAAA,QAAMY,UAAU,6BAA4BR,SAAA,CAAC,QAAY,OAANuI,QAAM,IAANA,OAAM,EAANA,EAAQiB,oBACpGvJ,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE,IAAI+J,KAAKC,GAAWC,wBACrChK,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,SAAE,IAAI+J,KAAK4B,GAAW1B,wBACrCrK,EAAAA,EAAAA,MAACwE,EAAAA,GAAc,CAAApE,SAAA,CACZgJ,IAAiB/I,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACxBiM,IAAehM,EAAAA,EAAAA,KAAA,SAAOO,UAAU,cAAaR,SAAC,mBAC/CC,EAAAA,EAAAA,KAACwJ,EAAAA,GAAW,CACVxI,MAAO,CAAEE,MAAO,SAChB,aAAW,iCACXuI,QA3CU,CAClB,CAAErB,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,UAAWC,MAAO,YAqCnBD,MAAO0D,EACPG,SAAUlD,EACVW,SAAWC,IArCAC,EAACD,EAAGjM,KACvB,MAAM0K,EAAQuB,EAAEE,OAAOzB,MACvB2D,EAAkB3D,GAGlBzK,EAAsB,CAAED,KAAIJ,KAFf,CAAE8L,OAAQhB,IAEY,EAkCzBwB,CAAaD,EAAQ,OAALrF,QAAK,IAALA,OAAK,EAALA,EAAOI,IAAI,QAKjC1E,EAAAA,EAAAA,KAACmE,EAAAA,GAAc,CAAApE,UACbJ,EAAAA,EAAAA,MAAA,OAAKY,UAAU,GAAER,SAAA,EACfC,EAAAA,EAAAA,KAACkM,EAAAA,GAAI,CAACX,GAAE,kBAAAhP,OAAyB,OAAL+H,QAAK,IAALA,OAAK,EAALA,EAAOI,KAAM3E,UACvCC,EAAAA,EAAAA,KAACmM,EAAAA,EAAS,OAEZnM,EAAAA,EAAAA,KAACkM,EAAAA,GAAI,CAACX,GAAE,kBAAAhP,OAAyB,OAAL+H,QAAK,IAALA,OAAK,EAALA,EAAOI,KAAM3E,UACvCC,EAAAA,EAAAA,KAACoM,EAAAA,EAAU,OAKbpM,EAAAA,EAAAA,KAACqM,EAAAA,EAAY,CAAChN,aAAcA,cAIjC,C,mCC1FA,MAAMmC,EAAkB,CAAC,UAAU,6V,mCCAnC,MAAMD,EAAW,CAAC,UAAU,6+B,mCCA5B,MAAME,EAAW,CAAC,UAAU,oiB,kDCkBnC,QAPA,SAAyB2G,GACvB,MAAMkE,GAAMC,EAAAA,EAAAA,QAAOnE,GAInB,OAHAtE,EAAAA,EAAAA,YAAU,KACRwI,EAAIE,QAAUpE,CAAK,GAClB,CAACA,IACGkE,CACT,C,6DCfe,SAASG,EAAiBC,GACvC,MAAMJ,GAAMK,EAAAA,EAAAA,GAAgBD,GAC5B,OAAOE,EAAAA,EAAAA,cAAY,WACjB,OAAON,EAAIE,SAAWF,EAAIE,WAAQK,UACpC,GAAG,CAACP,GACN,C,0ECNwC,qBAAXQ,EAAAA,GAE7BA,EAAAA,EAAOC,WAEPD,EAAAA,EAAOC,UAAUC,QCHC,IAAIC,Q,0BCFtB,MAAMC,EAAY,CAAC,aAgBnB,MAAMC,EAAsBC,EAAAA,YAAiB,CAAC/P,EAAMiP,KAClD,IAAI,UACAe,GACEhQ,EACJiQ,EAnBJ,SAAuCC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAAG,IAA2DE,EAAKnG,EAA5DuC,EAAS,CAAC,EAAO6D,EAAaC,OAAOC,KAAKL,GAAqB,IAAKjG,EAAI,EAAGA,EAAIoG,EAAW3J,OAAQuD,IAAOmG,EAAMC,EAAWpG,GAAQkG,EAASK,QAAQJ,IAAQ,IAAa5D,EAAO4D,GAAOF,EAAOE,IAAQ,OAAO5D,CAAQ,CAmBtSiE,CAA8BzQ,EAAM6P,GAC9C,MAAOa,IAAeC,EAAAA,EAAAA,IAAeL,OAAOM,OAAO,CACjDC,QAAS,KACRZ,IACGa,GAAgB1B,EAAAA,EAAAA,IAAiB9C,IACrCoE,EAAYV,UAAU1D,GACT,MAAb0D,GAA6BA,EAAU1D,EAAE,IAE3C,OAnB4ByE,EAmBVd,EAAMc,OAlBQ,MAAhBA,EAAKC,QAkB2B,WAAff,EAAMgB,MAOnBtO,EAAAA,EAAAA,KAAK,IAAK2N,OAAOM,OAAO,CAC1C3B,IAAKA,GACJgB,EAAO,CACRD,UAAWA,MATSrN,EAAAA,EAAAA,KAAK,IAAK2N,OAAOM,OAAO,CAC1C3B,IAAKA,GACJgB,EAAOS,EAAa,CACrBV,UAAWc,KAvBV,IAAuBC,CA8BzB,IAELjB,EAAOoB,YAAc,SACrB,S,sGCpCA,MAAMC,EAAwBpB,EAAAA,YAAiB,CAAA/P,EAW5CiP,KAAQ,IAXqC,OAC9C1F,GAAS,EAAK,SACdqF,GAAW,EAAK,UAChB1L,EAAS,MACTS,EAAK,YACLyN,EAAc,YAAW,SACzB1O,EAAQ,UACR2O,EAAS,cACTC,EAAa,GACbC,EAAKzB,EAAAA,KACFG,GACJjQ,EACC,MAAMwR,EAAYjI,GAAUqF,EAAW,OAAS2C,EAChD,OAAoB5O,EAAAA,EAAAA,KAAK,KAAM,CAC7BsM,IAAKA,EACLtL,MAAOA,EACPT,UAAWuO,IAAWvO,EAAW,YAAa,CAC5CqG,SACAqF,aAEFlM,UAAuBJ,EAAAA,EAAAA,MAAMkP,EAAW,CACtCtO,UAAWuO,IAAW,YAAaH,GACnC3N,MAAO0N,KACJpB,EACHvN,SAAU,CAACA,EAAU6G,GAAU6H,IAA4BzO,EAAAA,EAAAA,KAAK,OAAQ,CACtEO,UAAW,kBACXR,SAAU0O,QAGd,IAEJD,EAASD,YAAc,WACvB,UACA,SAASQ,EAAaxP,EAAMyP,GAA4B,IAAd3G,EAAKwE,UAAA9I,OAAA,QAAAkL,IAAApC,UAAA,GAAAA,UAAA,GAAGtN,EAChD,MAAM2P,EAAsB9B,EAAAA,YAAiB,CAAAxP,EAG1C0O,KAAG,IAHwC,SAC5CvM,KACGuN,GACJ1P,EAAA,OAAuB+B,EAAAA,EAAAA,MAAM6O,EAAU,IACnClB,EACHhB,IAAKA,EACLvM,SAAU,EAAcC,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfD,SAAUA,GAAYiP,KACPhP,EAAAA,EAAAA,KAAK,OAAQ,CAC5BO,UAAW,kBACXR,SAAUsI,MAEZ,IAEF,OADA6G,EAAOX,YAAchP,EACd2P,CACT,CACO,MAAMC,EAAQJ,EAAa,QAAS,QAC9BjI,EAAOiI,EAAa,OAAQ,SAAK,YACjCK,EAAWL,EAAa,WAAY,SAAK,QACzChI,EAAOgI,EAAa,OAAQ,UAC5B/H,EAAO+H,EAAa,OAAQ,QCtDnCrI,EAA0B0G,EAAAA,YAAiB,CAAA/P,EAK9CiP,KAAQ,IALuC,SAChD+C,EAAQ,UACR9O,EAAS,KACTsG,KACGyG,GACJjQ,EACC,MAAMiS,GAAoBC,EAAAA,EAAAA,IAAmBF,EAAU,cACvD,OAAoBrP,EAAAA,EAAAA,KAAK,KAAM,CAC7BsM,IAAKA,KACFgB,EACH/M,UAAWuO,IAAWvO,EAAW+O,EAAmBzI,GAAQ,GAAJtK,OAAO+S,EAAiB,KAAA/S,OAAIsK,KACpF,IAEJH,EAAW6H,YAAc,aACzB,QAAeZ,OAAOM,OAAOvH,EAAY,CACvCyI,MAAK,EACLrI,KAAI,EACJsI,SAAQ,EACRzI,KAAM6H,EACNzH,KAAI,EACJC,KAAIA,G","sources":["redux/order/orderApi.js","ui/UserInfoModal.jsx","ui/button/EyeButton.jsx","ui/orderFilterModal/UserInfo.jsx","ui/orderFilterModal/OrderFilterModal.jsx","ui/pagination/Pagination.js","utils/setUrlParam.js","redux/report/orderReportApi.js","views/orderReports/ReportTableRow.jsx","views/orderReports/ManageOrderReports.jsx","views/orders/manage-orders/TableRowData.jsx","../node_modules/@coreui/icons/js/free/cil-envelope-open.js","../node_modules/@coreui/icons/js/free/cil-group.js","../node_modules/@coreui/icons/js/free/cil-phone.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const orderApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\"],\n  endpoints: (builder) => ({\n    //get all orders\n    getAllOrders: builder.query({\n      query: (query) => ({\n        url: `/order${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllOrder\"],\n    }),\n\n    //get all orders\n    getAllOrdersByFilter: builder.query({\n      query: (query) => ({\n        url: `/order/filterOrder?${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllFilterOrder\"],\n    }),\n\n    //get recent orders\n    getRecentOrder: builder.query({\n      query: () => ({\n        url: `/order/recentOrder`,\n        method: \"GET\",\n      }),\n      providesTags: [\"RecentOrder\"],\n    }),\n\n    //get all sale by year\n    getTotalSaleByYear: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all orders by year\n    getTotalOrdersByYear: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByYear`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by month\n    getTotalSaleByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get orders by day\n    getTotalOrderByMonth: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByMonth`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all sale by day\n    getTotalSaleByDay: builder.query({\n      query: () => ({\n        url: `/order/totalSaleByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get all order by day\n    getTotalOrderByDay: builder.query({\n      query: () => ({\n        url: `/order/totalOrdersByDay`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSales: builder.query({\n      query: () => ({\n        url: `/order/totalSales`,\n        method: \"GET\",\n      }),\n    }),\n\n    //get total sales\n    getTotalSalesByDate: builder.mutation({\n      query: ({ data }) => ({\n        url: `/order/totalSales/byDate`,\n        method: \"POST\",\n        body: data,\n      }),\n    }),\n\n    //get all sale by day\n    getTotalOrders: builder.query({\n      query: () => ({\n        url: `/order/totalOrders`,\n        method: \"GET\",\n      }),\n    }),\n\n    // get single order by id\n    getSingleOrderById: builder.query({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"GET\",\n      }),\n      // invalidatesTags: [\"AllOrder\"],\n      providesTags: [\"SingleOrder\"],\n    }),\n\n    // update order by id\n    updateSingleOrderById: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/order/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"SingleOrder\", \"RecentOrder\", \"AllFilterOrder\", \"Products\"],\n    }),\n\n    // delete order by id\n    deleteOrderById: builder.mutation({\n      query: (id) => ({\n        url: `/order/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n\n\n    // delete order by id\n    updatePaymentOrder: builder.mutation({\n      query: ({ orderId, productId, data }) => ({\n        url: `/order/${orderId}/products/${productId}/transaction`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllOrder\", \"AllFilterOrder\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllOrdersQuery,\n  useGetAllOrdersByFilterQuery,\n  useGetRecentOrderQuery,\n  useDeleteOrderByIdMutation,\n  useUpdateSingleOrderByIdMutation,\n  useGetSingleOrderByIdQuery,\n  useGetTotalSaleByYearQuery,\n  useGetTotalSaleByMonthQuery,\n  useGetTotalOrderByMonthQuery,\n  useGetTotalSaleByDayQuery,\n  useGetTotalOrderByDayQuery,\n  useGetTotalSalesQuery,\n  useGetTotalSalesByDateMutation,\n  useGetTotalOrdersQuery,\n  useGetTotalOrdersByYearQuery,\n  useUpdatePaymentOrderMutation\n} = orderApi;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport { cilEnvelopeOpen, cilGroup, cilPhone, cilUser } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport { memo } from \"react\";\n\nconst UserInfoModal = ({ showModal, setShowModal, user }) => {\n  const { name, email, groupName, phone } = user || {};\n  return (\n    <CModal\n      visible={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n    >\n      <CModalHeader closeButton>Se this user info</CModalHeader>\n      <CModalBody>\n        <CCol xs={12}>\n          <CCard className=\"\">\n            <CCardHeader className=\"d-flex align-items-center justify-content-between\">\n              <strong className=\"d-flex align-items-center gap-2\">\n                {\" \"}\n                <CIcon icon={cilUser} className=\"nav-icon\" />\n                Customer Details\n              </strong>\n            </CCardHeader>\n            <CCardBody className=\"py-1 px-0\">\n              <CListGroup flush>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilUser}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  {name}\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilGroup}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  {groupName}\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilEnvelopeOpen}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n\n                  {email}\n                </CListGroupItem>\n                <CListGroupItem className=\"d-flex align-items-center\">\n                  <div\n                    style={{\n                      height: \"24px\",\n                      width: \"24px\",\n                      backgroundColor: \"#5bc0de\",\n                      borderRadius: \"2px \",\n                      border: \"1px solid  #39b3d7\",\n                    }}\n                    className=\" d-flex justify-content-center align-items-center  me-1 rounded-small\"\n                  >\n                    <CIcon\n                      icon={cilPhone}\n                      className=\"mx-1 text-white\"\n                      style={{ width: \"2.28571429em\", lineHeight: \"1.5rem\" }}\n                    />\n                  </div>\n                  {phone}\n                </CListGroupItem>\n              </CListGroup>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => setShowModal(false)}>\n          Cancel\n        </CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default memo(UserInfoModal);\n","import { CButton, CTooltip } from \"@coreui/react\";\nimport { BsEye } from \"react-icons/bs\";\n\nconst EyeButton = ({ handleClick }) => {\n  return (\n    <CTooltip content=\"View\">\n      <CButton\n        onClick={handleClick}\n        className=\"mb-1  ms-2\"\n        style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n        color=\"info\"\n        variant=\"outline\"\n      >\n        <BsEye style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n      </CButton>\n    </CTooltip>\n  );\n};\n\nexport default EyeButton;\n","import \"./modal.scss\";\n\nconst UserInfo = ({ filterData }) => {\n  let numberWithCommas = (x) => {\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  const { totalOrders, totalSales, totalShipping } = filterData?.data?.[0] || {};\n  const { name, email, phone } = filterData?.user || {};\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between my-4\">\n        <div className=\"salesCard userInfo\">\n          <p>Name: {name}</p>\n          <p>Email: {email}</p>\n          <p>Phone: {phone}</p>\n        </div>\n        <div className=\"salesCard sales\">\n          <p className=\"fs-5 fw-bold\">{numberWithCommas(totalSales) || 0}</p>\n          <p>Total sales</p>\n        </div>\n        <div className=\"salesCard shipping\">\n          <p className=\"fs-5 fw-bold\">{numberWithCommas(totalShipping) || 0}</p>\n          <p>Total shipping</p>\n        </div>\n        <div className=\"salesCard orders\">\n          <p className=\"fs-5 fw-bold\">{numberWithCommas(totalOrders) || 0}</p>\n          <p>Total orders</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable prettier/prettier */\nimport {\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport \"./modal.scss\";\nimport { useForm } from \"react-hook-form\";\nimport { useDeleteOrderByIdMutation, useGetAllOrdersByFilterQuery } from \"src/redux/order/orderApi\";\nimport PaginationButton from \"../pagination/Pagination\";\nimport Loading from \"../Loading\";\nimport TableRowData from \"src/views/orders/manage-orders/TableRowData\";\nimport UserInfo from \"./UserInfo\";\n\nconst OrderStatusModal = ({ showModal, setShowModal, query, showUserInfo }) => {\n  const [isQuery, setIsQuery] = useState(true);\n\n  const {\n    data: filterData,\n    isLoading: getLoading,\n    isError: getError,\n  } = useGetAllOrdersByFilterQuery(query, { skip: isQuery });\n\n  const [\n    deleteOrderById,\n    { isLoading: deleteLoading, isSuccess: deleteSuccess, isError: deleteError },\n  ] = useDeleteOrderByIdMutation();\n\n  useEffect(() => {\n    if (query?.length > 2) {\n      setIsQuery(false);\n    }\n  }, [query]);\n\n  const handleDeleteOrder = (id) => {\n    deleteOrderById(id);\n  };\n\n  let content = null;\n  if (getLoading) {\n    content = <Loading />;\n  }\n  if (!getLoading && getError) {\n    content = (\n      <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n        There was an error, try again.\n      </CTableDataCell>\n    );\n  }\n  if (!getLoading && !getError && filterData?.data?.length === 0) {\n    content = (\n      <CTableDataCell className=\"text-center py-4 fw-bold text-warning\" colSpan={\"100%\"}>\n        No data found\n      </CTableDataCell>\n    );\n  }\n  if (!getLoading && !getError && filterData?.data?.length > 0) {\n    content = filterData?.data?.map((order, index) => (\n      <CTableBody key={order?._id}>\n        <TableRowData\n          handleDeleteOrder={handleDeleteOrder}\n          deleteLoading={deleteLoading}\n          index={index}\n          order={order}\n        />\n      </CTableBody>\n    ));\n  }\n\n  return (\n    <CModal\n      visible={showModal}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      className=\"orderModal\"\n      style={{ minHeight: \"50vh\" }}\n    >\n      <CModalHeader closeButton className=\"fw-bold fs-5\">\n        Your searching results\n      </CModalHeader>\n      <CModalBody>\n        <>\n          {/* user info */}\n          {showUserInfo && <UserInfo filterData={filterData?.orderInfo} />}\n          <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow className=\"text-start\">\n                <CTableHeaderCell scope=\"col\" style={{ width: \"60px\" }}>\n                  Sl. No.\n                </CTableHeaderCell>\n                <CTableHeaderCell\n                  scope=\"col\"\n                  style={{\n                    width: \"200px\",\n                  }}\n                >\n                  Customer\n                </CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Order Id</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Phone</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Total</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Payment Method</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Order Date</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Modify Date</CTableHeaderCell>\n                <CTableHeaderCell scope=\"col\">Order Status</CTableHeaderCell>\n                <CTableHeaderCell\n                  scope=\"col\"\n                  style={{\n                    width: \"150px\",\n                    minWidth: \"150px\",\n                  }}\n                >\n                  Actions\n                </CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            {content}\n          </CTable>\n          {/* <PaginationButton searchUrl={location.search} totalPageNumber={pages} /> */}\n        </>\n      </CModalBody>\n      <CModalFooter></CModalFooter>\n    </CModal>\n  );\n};\n\nexport default OrderStatusModal;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable no-loop-func */\nimport { useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setUrlParams } from \"src/utils/setUrlParam\";\n\nconst PaginationButton = ({ totalPageNumber, searchUrl }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n\n  const handlePage = (page) => {\n    setCurrentPage(page);\n    navigate(setUrlParams(searchUrl || \"?\", \"page\", page.toString()));\n  };\n  // calculate page number\n  let pageNumber = !totalPageNumber ? [] : Array.from({ length: totalPageNumber }, (v, k) => k + 1);\n\n  let items = [];\n\n  for (let number = 1; number <= pageNumber.length; number++) {\n    items.push(\n      <Pagination.Item\n        key={number}\n        active={number === currentPage}\n        onClick={() => handlePage(number)}\n      >\n        {number}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <div className=\"d-flex justify-content-end mt-4\">\n      <Pagination size=\"sm\">\n        {currentPage > 1 && <Pagination.Prev onClick={() => handlePage(currentPage - 1)} />}\n        {items}\n        {currentPage < totalPageNumber && (\n          <Pagination.Next onClick={() => handlePage(currentPage + 1)} />\n        )}\n        {totalPageNumber > 1 && <Pagination.Last onClick={() => handlePage(totalPageNumber)} />}\n      </Pagination>\n    </div>\n  );\n};\n\nexport default PaginationButton;\n","export const setUrlParams = (searchUrl, paramName, valueOfParam) => {\n  const queryParams = searchUrl.split(\"&\");\n  let paramUpdated = false;\n  for (let i = 0; i < queryParams.length; i++) {\n    const param = queryParams[i].split(\"=\");\n    if (param[0] === paramName) {\n      param[1] = valueOfParam;\n      queryParams[i] = param.join(\"=\");\n      paramUpdated = true;\n      break;\n    }\n  }\n  if (!paramUpdated) {\n    queryParams.push(`${paramName}=${valueOfParam}`); // replace\n  }\n  const abc = [...new Set(queryParams)];\n\n  const finalUrl = abc.join(\"&\");\n  return finalUrl;\n};\n","/* eslint-disable prettier/prettier */\nimport { apiSlice } from \"../api/apiSlice\";\n\nexport const reportApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllReport\", \"SingleReport\"],\n\n  endpoints: (builder) => ({\n    //get all reports\n    getAllReports: builder.query({\n      query: (query) => ({\n        url: `/report${query}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllReport\"],\n    }),\n\n    //get single reports\n    getSingleReport: builder.query({\n      query: (id) => ({\n        url: `/report/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleReport\"],\n    }),\n\n    //get single reports\n    updateSingleReport: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/report/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllReport\", \"SingleReport\"],\n    }),\n\n    //get single reports\n    deleteSingleReport: builder.mutation({\n      query: (id) => ({\n        url: `/report/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllReport\", \"SingleReport\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllReportsQuery,\n  useGetSingleReportQuery,\n  useUpdateSingleReportMutation,\n  useDeleteSingleReportMutation,\n} = reportApi;\n","import { cilTrash } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CFormSelect,\n  CTableDataCell,\n  CTableHeaderCell,\n  CTableRow,\n  CTooltip,\n} from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { BsEye } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  useDeleteSingleReportMutation,\n  useUpdateSingleReportMutation,\n} from \"src/redux/report/orderReportApi\";\nimport DeleteModal from \"src/ui/DeleteModal\";\nimport UserInfoModal from \"src/ui/UserInfoModal\";\nimport EyeButton from \"src/ui/button/EyeButton\";\nimport OrderFilterModal from \"src/ui/orderFilterModal/OrderFilterModal\";\n\nconst reportOptions = [\n  { value: \"pending\", label: \"Pending\" },\n  { value: \"accepted\", label: \"Accepted\" },\n  { value: \"rejected\", label: \"Rejected\" },\n];\n\nconst ReportTableRow = ({ report, index }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedValue, setSelectedValue] = useState();\n  const [showUserInfoModal, setShowUsrInfoModal] = useState(false);\n  const [showFilterModal, setShowFilterModal] = useState(false);\n  const [filterQuery, setFilterQuery] = useState(\"\");\n\n  const [deleteSingleReport, { isLoading, isError, isSuccess }] = useDeleteSingleReportMutation();\n  const [updateSingleReport, { isLoading: updateLoading, isSuccess: updateSuccess }] =\n    useUpdateSingleReportMutation();\n\n  useEffect(() => {\n    isSuccess && toast.success(\"Delete report Success\");\n    isError && toast.error(\"Delete report Failed\");\n    updateSuccess && toast.success(\"Report Updated Success\");\n  }, [isSuccess, isError, updateSuccess]);\n\n  useEffect(() => {\n    setSelectedValue(report?.status);\n  }, [report]);\n\n  const handleUpdate = (value, id) => {\n    setSelectedValue(value);\n    const data = { status: value };\n\n    updateSingleReport({ id, data });\n  };\n  const handleViewOrder = (orderId) => {\n    setShowFilterModal(true);\n    setFilterQuery(`orderId=${orderId}`);\n  };\n  return (\n    <CTableRow key={report?._id}>\n      <OrderFilterModal\n        query={filterQuery}\n        showModal={showFilterModal}\n        setShowModal={setShowFilterModal}\n      />\n      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\n      <CTableDataCell>{report?.orderId}</CTableDataCell>\n      <CTableDataCell>{report?.reason}</CTableDataCell>\n      <CTableDataCell>Order {report?.requestedFor}</CTableDataCell>\n      <CTableDataCell>\n        <CFormSelect\n          aria-label=\"Order Status\"\n          className={`form-control  ${report?.status === \"rejected\" && \"text-danger\"} ${\n            report?.status === \"accepted\" && \"text-success\"\n          }`}\n          style={{ backgroundColor: \"#f9f9f9\" }}\n          options={reportOptions}\n          value={selectedValue}\n          onChange={(e) => handleUpdate(e.target.value, report?._id)}\n          // {...register(\"orderStatus\", { required: true })}\n        />\n      </CTableDataCell>\n      <CTableDataCell>{new Date(report?.createdAt).toLocaleDateString()}</CTableDataCell>\n      <CTableDataCell>{report?.description}</CTableDataCell>\n      <CTableDataCell>\n        <CTooltip content=\"View\">\n          <CButton\n            onClick={() => handleViewOrder(report?.orderId)}\n            className=\"mb-1  ms-2\"\n            style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n            color=\"info\"\n            variant=\"outline\"\n          >\n            <BsEye style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n          </CButton>\n        </CTooltip>\n        <CTooltip content=\"Delete\">\n          <CButton\n            color=\"danger\"\n            variant=\"outline\"\n            style={{ height: \"30px\", width: \"32px\", position: \"relative\" }}\n            className=\"ms-2\"\n            onClick={() => setShowModal(true)}\n          >\n            <CIcon icon={cilTrash} style={{ position: \"absolute\", top: \"25%\", left: \"25%\" }} />\n          </CButton>\n        </CTooltip>\n      </CTableDataCell>\n      <DeleteModal\n        deleteThis={deleteSingleReport}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={report?._id}\n        deleteLoading={isLoading}\n      />\n      <UserInfoModal\n        showModal={showUserInfoModal}\n        setShowModal={setShowUsrInfoModal}\n        user={report?.user}\n      />\n    </CTableRow>\n  );\n};\n\nexport default ReportTableRow;\n","import {\n  CCard,\n  CCardBody,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from \"@coreui/react\";\nimport { useLocation } from \"react-router-dom\";\nimport CardHeaderButton from \"src/ui/CardHeaderButton\";\nimport PaginationButton from \"src/ui/pagination/Pagination\";\nimport { useGetAllReportsQuery } from \"src/redux/report/orderReportApi\";\nimport ReportTableRow from \"./ReportTableRow\";\n\nconst ManageOrderReports = () => {\n  // get all reviews hook -> admin\n  const location = useLocation();\n  const { data: allReports, isLoading, isError } = useGetAllReportsQuery(location.search);\n  // checking loading/error/data\n  let content = null;\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  if (!isLoading && isError) {\n    content = <p className=\"text-danger\">There is something wrong</p>;\n  }\n  if (!isLoading && !isError && allReports?.result?.data?.length === 0) {\n    content = <p className=\"fw-4\">There is no reports</p>;\n  }\n  if (!isLoading && !isError && allReports?.result?.data?.length > 0) {\n    content = allReports?.result?.data?.map((report, index) => (\n      <ReportTableRow key={report?._id} report={report} index={index} />\n    ));\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CardHeaderButton title={\"All reports\"} to={\"/report\"} />\n          <CCardBody>\n            <span>Here is all reports</span>\n            <CTable align=\"middle\" className=\"mb-0 border\" bordered hover responsive>\n              <CTableHead color=\"light\">\n                <CTableRow className=\"text-start\">\n                  <CTableHeaderCell scope=\"col\">Sl. No.</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Order ID</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Reason</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"> Requested For</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\"> Status</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                  <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n                  <CTableHeaderCell\n                    scope=\"col\"\n                    style={{\n                      width: \"50px\",\n                      minWidth: \"100px\",\n                    }}\n                  >\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>{content}</CTableBody>\n            </CTable>\n            <PaginationButton\n              searchUrl={location.search}\n              totalPageNumber={allReports?.result?.totalPageNumber}\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default ManageOrderReports;\n","/* eslint-disable no-lone-blocks */\n/* eslint-disable react/prop-types */\nimport { CFormSelect, CTableDataCell, CTableHeaderCell, CTableRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useUpdateSingleOrderByIdMutation } from \"src/redux/order/orderApi\";\nimport DeleteButton from \"src/ui/button/DeleteButton\";\nimport EditButton from \"src/ui/button/EditButton\";\nimport EyeButton from \"src/ui/button/EyeButton\";\nimport DeleteModal from \"src/ui/DeleteModal\";\n\n// eslint-disable-next-line react/prop-types\nconst TableRowData = ({ index, order, handleDeleteOrder, deleteLoading }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const { totalAmount, createdAt, updatedAt, paymentType, status, userName, userPhone, orderId, report } =\n    order || {};\n  const [selectedStatus, setSelectedStatus] = useState(status);\n\n  const [updateSingleOrderById, { isLoading: updateLoading, updateError }] =\n    useUpdateSingleOrderByIdMutation();\n\n  const orderStatus = [\n    { value: \"pending\", label: \"Pending\" },\n    { value: \"processing\", label: \"Processing\" },\n    { value: \"shipped\", label: \"shipped\" },\n    { value: \"cancelled\", label: \"Cancelled\" },\n    { value: \"returned\", label: \"Returned\" },\n    { value: \"delivered\", label: \"Delivered\" },\n    { value: \"expired\", label: \"Expired\" },\n  ];\n  const handleUpdate = (e, id) => {\n    const value = e.target.value;\n    setSelectedStatus(value);\n    const data = { status: value };\n\n    updateSingleOrderById({ id, data });\n  };\n  return (\n    <>\n      <DeleteModal\n        deleteThis={handleDeleteOrder}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        id={order?._id}\n        deleteLoading={deleteLoading}\n      />\n      <CTableRow>\n        <CTableHeaderCell scope=\"row\">\n          {index + 1}\n          {/* <Form.Check inline type=\"checkbox\" id={index + 1} /> */}\n        </CTableHeaderCell>\n        <CTableDataCell>{userName}</CTableDataCell>\n        <CTableDataCell>{orderId}</CTableDataCell>\n        <CTableDataCell>{userPhone}</CTableDataCell>\n        <CTableDataCell>{totalAmount}</CTableDataCell>\n        <CTableDataCell>{paymentType} {report && <span className=\"text-danger text-uppercase\">REQ: {report?.requestedFor}</span>}</CTableDataCell>\n        <CTableDataCell>{new Date(createdAt).toLocaleDateString()}</CTableDataCell>\n        <CTableDataCell>{new Date(updatedAt).toLocaleDateString()}</CTableDataCell>\n        <CTableDataCell>\n          {updateLoading && <small>Loading..</small>}\n          {updateError && <small className=\"text-danger\">Error occured</small>}\n          <CFormSelect\n            style={{ width: \"150px\" }}\n            aria-label=\"Product Select Selection Field\"\n            options={orderStatus}\n            value={selectedStatus}\n            disabled={updateLoading}\n            onChange={(e) => {\n              // setSelectedStatus(e.target.value);\n              handleUpdate(e, order?._id);\n              // eslint-disable-next-line prettier/prettier\n            }}\n          />\n        </CTableDataCell>\n        <CTableDataCell>\n          <div className=\"\">\n            <Link to={`/order/details/${order?._id}`}>\n              <EyeButton />\n            </Link>\n            <Link to={`/order/details/${order?._id}`}>\n              <EditButton />\n            </Link>\n            {/* <Link to={`/order/edit/${order?._id}`}>\n              <EditButton />\n            </Link> */}\n            <DeleteButton setShowModal={setShowModal} />\n          </div>\n        </CTableDataCell>\n      </CTableRow>\n    </>\n  );\n};\n\nexport default TableRowData;\n","export const cilEnvelopeOpen = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M274.6,25.623a32.006,32.006,0,0,0-37.2,0L16,183.766V496H496V183.766ZM464,402.693,339.97,322.96,464,226.492ZM256,51.662,454.429,193.4,311.434,304.615,256,268.979l-55.434,35.636L57.571,193.4ZM48,226.492,172.03,322.96,48,402.693ZM464,464H48V440.735L256,307.021,464,440.735Z' class='ci-primary'/>\"]","export const cilGroup = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"]","export const cilPhone = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M449.366,89.648l-.685-.428L362.088,46.559,268.625,171.176l43,57.337a88.529,88.529,0,0,1-83.115,83.114l-57.336-43L46.558,362.088l42.306,85.869.356.725.429.684a25.085,25.085,0,0,0,21.393,11.857h22.344A327.836,327.836,0,0,0,461.222,133.386V111.041A25.084,25.084,0,0,0,449.366,89.648Zm-20.144,43.738c0,163.125-132.712,295.837-295.836,295.837h-18.08L87,371.76l84.18-63.135,46.867,35.149h5.333a120.535,120.535,0,0,0,120.4-120.4v-5.333l-35.149-46.866L371.759,87l57.463,28.311Z' class='ci-primary'/>\"]","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["orderApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllOrders","query","url","concat","method","providesTags","getAllOrdersByFilter","getRecentOrder","getTotalSaleByYear","getTotalOrdersByYear","getTotalSaleByMonth","getTotalOrderByMonth","getTotalSaleByDay","getTotalOrderByDay","getTotalSales","getTotalSalesByDate","mutation","_ref","data","body","getTotalOrders","getSingleOrderById","id","updateSingleOrderById","_ref2","invalidatesTags","deleteOrderById","updatePaymentOrder","_ref3","orderId","productId","useGetAllOrdersQuery","useGetAllOrdersByFilterQuery","useGetRecentOrderQuery","useDeleteOrderByIdMutation","useUpdateSingleOrderByIdMutation","useGetSingleOrderByIdQuery","useGetTotalSaleByYearQuery","useGetTotalSaleByMonthQuery","useGetTotalOrderByMonthQuery","useGetTotalSaleByDayQuery","useGetTotalOrderByDayQuery","useGetTotalSalesQuery","useGetTotalSalesByDateMutation","useGetTotalOrdersQuery","useGetTotalOrdersByYearQuery","useUpdatePaymentOrderMutation","UserInfoModal","showModal","setShowModal","user","name","email","groupName","phone","_jsxs","CModal","visible","onClose","children","_jsx","CModalHeader","closeButton","CModalBody","CCol","xs","CCard","className","CCardHeader","CIcon","icon","cilUser","CCardBody","CListGroup","flush","CListGroupItem","style","height","width","backgroundColor","borderRadius","border","lineHeight","cilGroup","cilEnvelopeOpen","cilPhone","CModalFooter","CButton","color","onClick","memo","handleClick","CTooltip","content","position","variant","BsEye","top","left","_filterData$data","filterData","numberWithCommas","x","toString","replace","totalOrders","totalSales","totalShipping","_filterData$data2","showUserInfo","isQuery","setIsQuery","useState","isLoading","getLoading","isError","getError","skip","deleteLoading","isSuccess","deleteSuccess","deleteError","useEffect","length","handleDeleteOrder","_filterData$data3","Loading","CTableDataCell","colSpan","map","order","index","CTableBody","TableRowData","_id","minHeight","_Fragment","UserInfo","orderInfo","CTable","align","bordered","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","minWidth","totalPageNumber","searchUrl","currentPage","setCurrentPage","navigate","useNavigate","handlePage","page","setUrlParams","pageNumber","Array","from","v","k","items","number","push","Pagination","Item","active","size","Prev","Next","Last","paramName","valueOfParam","queryParams","split","paramUpdated","i","param","join","Set","reportApi","getAllReports","getSingleReport","updateSingleReport","deleteSingleReport","useGetAllReportsQuery","useGetSingleReportQuery","useUpdateSingleReportMutation","useDeleteSingleReportMutation","reportOptions","value","label","report","selectedValue","setSelectedValue","showUserInfoModal","setShowUsrInfoModal","showFilterModal","setShowFilterModal","filterQuery","setFilterQuery","updateLoading","updateSuccess","toast","success","error","status","OrderFilterModal","reason","requestedFor","CFormSelect","options","onChange","e","handleUpdate","target","Date","createdAt","toLocaleDateString","description","handleViewOrder","cilTrash","DeleteModal","deleteThis","ManageOrderReports","_allReports$result","_allReports$result$da","_allReports$result2","_allReports$result2$d","_allReports$result4","location","useLocation","allReports","search","_allReports$result3","_allReports$result3$d","result","ReportTableRow","CRow","CardHeaderButton","title","to","PaginationButton","totalAmount","updatedAt","paymentType","userName","userPhone","selectedStatus","setSelectedStatus","updateError","disabled","Link","EyeButton","EditButton","DeleteButton","ref","useRef","current","useEventCallback","fn","useCommittedRef","useCallback","arguments","global","navigator","product","WeakMap","_excluded","Anchor","React","onKeyDown","props","source","excluded","key","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","href","trim","role","displayName","PageItem","activeLabel","linkStyle","linkClassName","as","Component","classNames","createButton","defaultValue","undefined","Button","First","Ellipsis","bsPrefix","decoratedBsPrefix","useBootstrapPrefix"],"sourceRoot":""}