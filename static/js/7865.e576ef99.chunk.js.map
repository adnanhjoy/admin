{"version":3,"file":"static/js/7865.e576ef99.chunk.js","mappings":"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","sources":["redux/subCategory/subCategoryApi.js","components/subcategories/AddSubcategoryForm.jsx","views/subcategories/add-subcategory/AddSubcategory.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const subCategoryApi = apiSlice.injectEndpoints({\n  tagTypes: [\"SubCategory\", \"SingleSubCategory\"],\n  endpoints: (builder) => ({\n    // get all subcategory\n    getAllSubCategory: builder.query({\n      query: () => ({\n        url: `/subcategory`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n    // get all subcategory\n    getFilterSubCategory: builder.query({\n      query: (subCategory) => ({\n        url: `/subcategory/filter?${subCategory}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SubCategory\"],\n    }),\n\n    // get single subcategory by id\n    getSingleSubCategory: builder.query({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"GET\",\n      }),\n      invalidatesTags: [\"SubCategory\"],\n      providesTags: [\"SingleSubCategory\"],\n    }),\n\n    // add new subcategory\n    addSubCategory: builder.mutation({\n      query: (data) => ({\n        url: `/subcategory`,\n        method: \"POST\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n\n    // update subcategory by id\n    updateSubCategory: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/subcategory/${id}`,\n        method: \"PUT\",\n        body: data,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\", \"SingleSubCategory\"],\n    }),\n\n    // delete subcategory by id\n    deleteSubCategory: builder.mutation({\n      query: (id) => ({\n        url: `/subcategory/${id}`,\n        method: \"DELETE\",\n        body: id,\n        headers: {\n          Authorization: JSON.parse(localStorage.getItem(\"auth\")).accessToken,\n        },\n      }),\n      invalidatesTags: [\"SubCategory\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllSubCategoryQuery,\n  useGetFilterSubCategoryQuery,\n  useDeleteSubCategoryMutation,\n  useAddSubCategoryMutation,\n  useUpdateSubCategoryMutation,\n  useGetSingleSubCategoryQuery,\n} = subCategoryApi;\n","/* eslint-disable react/prop-types */\nimport { cilPlus, cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCol, CForm, CFormInput, CFormTextarea, CRow } from \"@coreui/react\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport { Form, Image } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useGetAllCategoryQuery } from \"src/redux/category/categoryApi\";\nimport CancelButton from \"src/ui/button/CancelButton\";\n\nconst AddSubcategoryForm = ({\n  data,\n  onSubmit,\n  addSubCategoryLoading,\n  updateSubCategoryLoading,\n}) => {\n  const { data: categories } = useGetAllCategoryQuery();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    formState: { errors },\n    control,\n  } = useForm();\n\n  useEffect(() => {\n    if (data) {\n      for (const key in data) {\n        setValue(key, data[key]);\n      }\n    }\n  }, [data]);\n\n  return (\n    <CForm encType=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\n      <CRow className=\"g-3\">\n        <CCol xs={12}>\n          <label>\n            Category <span className=\"text-danger\">*</span>\n          </label>\n          <select\n            className=\"form-select mt-2\"\n            aria-label=\"Default select example\"\n            {...register(\"parent\", { required: true })}\n          >\n            {categories?.result.map((category) => (\n              <option key={category._id} value={category._id}>\n                {category.title}\n              </option>\n            ))}\n          </select>\n        </CCol>\n        <CCol xs={12}>\n          <label>\n            Title <span className=\"text-danger\">*</span>\n          </label>\n          <CFormInput\n            type=\"text\"\n            id=\"subcategoryTitleInputField\"\n            placeholder=\"Enter Subcategory Title\"\n            aria-describedby=\"subcategoryTitleInputField\"\n            {...register(\"title\", { required: true })}\n          />\n        </CCol>\n        <CCol xs={12}>\n          <CFormTextarea\n            id=\"subcategoryDescriptionTextareaField\"\n            label=\"Description\"\n            placeholder=\"Enter Description\"\n            aria-describedby=\"subcategoryDescriptionTextareaField\"\n            rows=\"3\"\n            {...register(\"description\")}\n          ></CFormTextarea>\n        </CCol>\n      </CRow>\n      <div className=\"text-end\">\n        <CancelButton />\n        <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n          {addSubCategoryLoading || updateSubCategoryLoading ? (\n            \"Loading\"\n          ) : (\n            <>\n              {\" \"}\n              <CIcon icon={cilSave} className=\"me-2\" />\n              {data ? \"Update\" : \"Save\"}\n            </>\n          )}\n        </CButton>\n      </div>\n    </CForm>\n  );\n};\n\nexport default AddSubcategoryForm;\n\nAddSubcategoryForm.propTypes = {\n  data: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n","import { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport AddSubcategoryForm from \"src/components/subcategories/AddSubcategoryForm\";\nimport {\n  useAddSubCategoryMutation,\n  useGetSingleSubCategoryQuery,\n  useUpdateSubCategoryMutation,\n} from \"src/redux/subCategory/subCategoryApi\";\nimport Loading from \"src/ui/Loading\";\nimport HeaderBackButton from \"src/ui/button/HeaderBackButton\";\n\nconst AddSubcategory = () => {\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [\n    addSubcategory,\n    {\n      isLoading: addSubCategoryLoading,\n      isSuccess: addSubcategorySuccess,\n      isError: addSubcategoryError,\n    },\n  ] = useAddSubCategoryMutation();\n  const { data: subcategory, isLoading: getLoading } = useGetSingleSubCategoryQuery(id, {\n    skip: haveId,\n  });\n  const [\n    updateSubCategory,\n    {\n      isLoading: updateSubCategoryLoading,\n      isSuccess: updateSubCategorySuccess,\n      isError: updateSubCategoryError,\n    },\n  ] = useUpdateSubCategoryMutation();\n\n  const handleCreateSubcategory = (data) => {\n    if (id) {\n      updateSubCategory({ id, data });\n    } else {\n      addSubcategory(data);\n    }\n  };\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    toast.dismiss();\n    addSubcategoryError && toast.warning(\"Subcategory added failed!\", { id: \"aError\" });\n    updateSubCategoryError && toast.warning(\"Subcategory updated failed!\", { id: \"uError\" });\n  }, [addSubcategoryError, updateSubCategoryError]);\n\n  useEffect(() => {\n    addSubcategorySuccess && navigate(-1);\n    updateSubCategorySuccess && navigate(-1);\n  }, [updateSubCategorySuccess, addSubcategorySuccess]);\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <HeaderBackButton title={id ? \"Update sub category\" : \"Add sub category\"} />\n\n            <CCardBody>\n              {\n                getLoading ? <Loading /> : <AddSubcategoryForm\n                  addSubCategoryLoading={addSubCategoryLoading}\n                  updateSubCategoryLoading={updateSubCategoryLoading}\n                  data={subcategory?.result}\n                  onSubmit={handleCreateSubcategory}\n                />\n              }\n\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default AddSubcategory;\n"],"names":["subCategoryApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllSubCategory","query","url","method","providesTags","getFilterSubCategory","subCategory","concat","getSingleSubCategory","id","invalidatesTags","addSubCategory","mutation","data","body","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","updateSubCategory","_ref","deleteSubCategory","useGetAllSubCategoryQuery","useGetFilterSubCategoryQuery","useDeleteSubCategoryMutation","useAddSubCategoryMutation","useUpdateSubCategoryMutation","useGetSingleSubCategoryQuery","onSubmit","addSubCategoryLoading","updateSubCategoryLoading","categories","useGetAllCategoryQuery","register","handleSubmit","watch","setValue","formState","errors","control","useForm","useEffect","key","_jsxs","CForm","encType","children","CRow","className","CCol","xs","_jsx","required","result","map","category","value","_id","title","CFormInput","type","placeholder","CFormTextarea","label","rows","CancelButton","CButton","color","_Fragment","CIcon","icon","cilSave","AddSubcategory","haveId","setHaveId","useState","useParams","navigate","useNavigate","addSubcategory","isLoading","isSuccess","addSubcategorySuccess","isError","addSubcategoryError","subcategory","getLoading","skip","updateSubCategorySuccess","updateSubCategoryError","toast","dismiss","warning","CCard","HeaderBackButton","CCardBody","Loading","AddSubcategoryForm"],"sourceRoot":""}