{"version":3,"file":"static/js/827.3b5ea2e4.chunk.js","mappings":"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","sources":["views/admins/footer/AddFooter.jsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormTextarea,\n} from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport {\n  useAddNewFooterMutation,\n  useGetSingleFooterQuery,\n  useUpdateSingleFooterMutation,\n} from \"src/redux/footer/footerApi\";\n\nimport CancelButton from \"src/ui/button/CancelButton\";\nimport Loading from \"src/ui/Loading\";\n\nconst AddFooter = () => {\n  const [haveId, setHaveId] = useState(true);\n  const { id } = useParams();\n  const { handleSubmit, register, setValue } = useForm();\n  const navigate = useNavigate();\n\n  const {\n    data: footerData,\n    isLoading: getLoading,\n    isError: termError,\n    error: termErrorMsg,\n  } = useGetSingleFooterQuery(id, { skip: haveId });\n\n  const [\n    addNewFooter,\n    { isLoading: addLoading, isError: addError, isSuccess: addSuccess, error: addMsg },\n  ] = useAddNewFooterMutation();\n\n  const [\n    updateSingleFooter,\n    { isLoading: updateLoading, isError: updateError, isSuccess: updateSuccess, error: updateMsg },\n  ] = useUpdateSingleFooterMutation();\n\n  // update or add new term conditions\n  const onSubmit = (data) => {\n    const data2 = {\n      text: data.text,\n    };\n    if (id) {\n      updateSingleFooter({ id, data: data2 });\n    } else {\n      addNewFooter(data2);\n    }\n  };\n\n  useEffect(() => {\n    addSuccess && toast.success(\"Successfully Added\");\n    addError && toast.error(addMsg?.data?.message);\n    updateSuccess && toast.success(\"Successfully Updated\");\n    updateError && toast.error(updateMsg?.data?.message);\n  }, [addSuccess, addError, updateSuccess, updateError]);\n\n  useEffect(() => {\n    if (id) {\n      setHaveId(false);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [addSuccess, updateSuccess]);\n\n  useEffect(() => {\n    if (footerData?.data) {\n      for (const key in footerData?.data) {\n        setValue(key, footerData?.data[key]);\n      }\n    }\n  }, [footerData?.data, setValue]);\n\n  return (\n    <CForm onSubmit={handleSubmit(onSubmit)}>\n      <CCard>\n        <CCardHeader className=\"text-center fs-5   fw-bold\">\n          {id ? \"Customize your footer\" : \"Add your footer\"}\n        </CCardHeader>\n        {getLoading ? (\n          <Loading />\n        ) : (\n          <CCardBody>\n            <CCol xs={12}>\n              <label className=\"w-100\">Footer text</label>\n              <CFormTextarea\n                type=\"text\"\n                id=\"FooterText\"\n                placeholder=\"Enter text\"\n                defaultValue={footerData?.data?.text}\n                aria-describedby=\"FooterText\"\n                {...register(\"text\", { required: true })}\n              />\n            </CCol>\n            <div className=\"text-end  \">\n              <CancelButton />\n              <CButton type=\"submit\" color=\"success\" className=\"mt-3 text-white\">\n                <CIcon icon={cilSave} className=\"me-2\" />\n                {updateLoading || addLoading ? \"Loading...\" : id ? \"Update\" : \"Save\"}\n              </CButton>\n            </div>\n          </CCardBody>\n        )}\n      </CCard>\n    </CForm>\n  );\n};\n\nexport default AddFooter;\n"],"names":["AddFooter","_footerData$data","haveId","setHaveId","useState","id","useParams","handleSubmit","register","setValue","useForm","navigate","useNavigate","data","footerData","isLoading","getLoading","isError","termError","error","termErrorMsg","useGetSingleFooterQuery","skip","addNewFooter","addLoading","addError","isSuccess","addSuccess","addMsg","useAddNewFooterMutation","updateSingleFooter","updateLoading","updateError","updateSuccess","updateMsg","useUpdateSingleFooterMutation","useEffect","_addMsg$data","_updateMsg$data","toast","success","message","key","_jsx","CForm","onSubmit","data2","text","children","_jsxs","CCard","CCardHeader","className","Loading","CCardBody","CCol","xs","CFormTextarea","type","placeholder","defaultValue","required","CancelButton","CButton","color","CIcon","icon","cilSave"],"sourceRoot":""}