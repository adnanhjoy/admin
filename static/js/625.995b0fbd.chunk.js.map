{"version":3,"file":"static/js/625.995b0fbd.chunk.js","mappings":"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","sources":["redux/flashSaleType/flashSaleTypeApi.js","views/flashSale/all-flashSalse-products/add-flashSale-products/AddFlashSaleProducts.jsx"],"sourcesContent":["import { apiSlice } from \"../api/apiSlice\";\n\nexport const flashSaleTypesApi = apiSlice.injectEndpoints({\n  tagTypes: [\"AllTypes\", \"SingleTypes\"],\n  endpoints: (builder) => ({\n    //get all  users\n    getAllTypes: builder.query({\n      query: () => ({\n        url: `/flashSale-types`,\n        method: \"GET\",\n      }),\n      providesTags: [\"AllTypes\"],\n    }),\n\n    //get single  users\n    getSingleTypes: builder.query({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"SingleTypes\"],\n    }),\n\n    // delete users by id\n    deleteSingleTypes: builder.mutation({\n      query: (id) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n\n    // delete users by id\n    updateSingleTypes: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/flashSale-types/${id}`,\n        method: \"PUT\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\", \"SingleTypes\"],\n    }),\n    // delete users by id\n    addSingleTypes: builder.mutation({\n      query: (data) => ({\n        url: `/flashSale-types`,\n        method: \"POST\",\n        body: data,\n      }),\n      invalidatesTags: [\"AllTypes\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllTypesQuery,\n  useGetSingleTypesQuery,\n  useDeleteSingleTypesMutation,\n  useAddSingleTypesMutation,\n  useUpdateSingleTypesMutation,\n} = flashSaleTypesApi;\n","/* eslint-disable no-lone-blocks */\n/* eslint-disable prettier/prettier */\nimport { cilSave } from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CRow, CTooltip } from \"@coreui/react\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport AddProductForm from \"src/components/products/AddProductForm\";\nimport back from \"../../../../assets/brand/back.png\";\n\nimport { useGetAllTypesQuery } from \"src/redux/flashSaleType/flashSaleTypeApi\";\nimport {\n  useAddSingleProductMutation,\n  useGetSingleProductDetailsQuery,\n  useUpdateSingleProductMutation,\n} from \"src/redux/products/productsApi\";\n\nimport Loading from \"src/ui/Loading\";\n\nconst AddFlashSaleProducts = () => {\n  const { id } = useParams();\n  const [productId, setProductId] = useState(true);\n  const [description, setDescription] = useState(\"\");\n  const [shortDescription, setShortDescription] = useState(\"\");\n  const [specification, setSpecification] = useState(\"\");\n  const [productTags, setProductTags] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState();\n  const [flashSaleType, setFlashSaleType] = useState(\"\");\n  const [imgData, setImgData] = useState([]);\n  const [manufacturer, setManufacturer] = useState(\"\");\n  const [slugValue, setSlugValue] = useState();\n\n  //remaining images\n  const [remainingImages, setRemainingImages] = useState([]);\n\n  // rtk hooks\n  const [\n    updateSingleProduct,\n    {\n      isLoading: updateLoading,\n      isSuccess: updateSuccess,\n      isError: updateError,\n      error: updateErrorMsg,\n    },\n  ] = useUpdateSingleProductMutation();\n\n  const [\n    adSingleProduct,\n    { isLoading: addLoading, isSuccess: addSuccess, isError: addError, error: addErrorMsg },\n  ] = useAddSingleProductMutation();\n\n  const {\n    data: product,\n    isLoading,\n    isError,\n  } = useGetSingleProductDetailsQuery(id, { skip: productId });\n\n  const { data: allTypes, isLoading: typeLoading, isError: typeError } = useGetAllTypesQuery();\n\n  //rtk hooks end\n  useMemo(() => {\n    updateError && toast.error(updateErrorMsg?.data?.message || \"Product updated failed\");\n    addError && toast.error(addErrorMsg?.data?.message || \"Product added failed\");\n  }, [updateError, addError]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    addSuccess && navigate(-1);\n    updateSuccess && navigate(-1);\n  }, [updateSuccess, addSuccess]);\n\n  useMemo(() => {\n    if (id) {\n      setProductId(false);\n      setProductTags(product?.result?.tags);\n      setDescription(product?.result?.description);\n      setShortDescription(product?.result?.shortDescription);\n      setFlashSaleType(product?.result?.flashSaleOfferType);\n      setManufacturer(product?.result?.manufacturer?._id);\n      setSlugValue(product?.result?.slug);\n    }\n  }, [id, product?.result]);\n\n  // handle add a new product\n  const handleCreateProduct = (data) => {\n    const formData = new FormData();\n    for (const key of Object.keys(imgData)) {\n      formData.append(\"images\", data.images[key]);\n    }\n    // default value for flash Sale product this field is required\n    formData.append(\"flashSale\", true);\n\n    if (data.name) formData.append(\"name\", data.name);\n    if (data.altTag) formData.append(\"altTag\", data.altTag);\n    if (description) formData.append(\"description\", description);\n    if (shortDescription) formData.append(\"shortDescription\", shortDescription);\n    if (specification) formData.append(\"specification\", specification);\n    if (flashSaleType) formData.append(\"flashSaleOfferType\", flashSaleType);\n    formData.append(\"productType\", \"flash-sale\");\n\n    if (slugValue) formData.append(\"slug\", slugValue);\n\n    if (manufacturer && manufacturer !== \"Pick one\") formData.append(\"manufacturer\", manufacturer);\n    if (data.status) formData.append(\"status\", data.status);\n    if (data.expireDate) formData.append(\"expireDate\", data.expireDate);\n    if (data.model) formData.append(\"model\", data.model);\n\n    if (data.price) formData.append(\"price\", parseFloat(data.price));\n    if (data.offerPrice) formData.append(\"offerPrice\", parseFloat(data.offerPrice));\n\n    if (data.discountPercentage)\n      formData.append(\"discountPercentage\", parseFloat(data.discountPercentage) || 0);\n    if (data.quantity) formData.append(\"quantity\", parseInt(data.quantity));\n\n    // form data.append JSON.stringify(data)\n    if (productTags) formData.append(\"tags\", JSON.stringify(productTags));\n    if (data.color) formData.append(\"color\", JSON.stringify(data?.color));\n    if (data.size) formData.append(\"size\", JSON.stringify(data?.size));\n    if (data.categories?.value)\n      formData.append(\"categories\", JSON.stringify(data?.categories.value));\n    if (data.subcategories?.value)\n      formData.append(\"subcategories\", JSON.stringify(data?.subcategories.value));\n    if (data.subcategoryChildren?.value)\n      formData.append(\"subcategoryChildren\", JSON.stringify(data?.subcategoryChildren.value));\n\n    // if (data.rewardPoints) formData.append(\"rewardPoints\", parseFloat(data.rewardPoints) || 0);\n\n    if (id) {\n      remainingImages.forEach((img) => {\n        formData.append(\"prevImage\", img);\n      });\n\n      updateSingleProduct({ id, data: formData });\n    } else {\n      adSingleProduct(formData);\n    }\n  };\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <div className=\"d-flex justify-content-between\">\n              <strong>{id ? \"Edit\" : \"Add\"} Product</strong>\n              <div className=\"text-end\">\n              \n                <CButton\n                  // onClick={handleSubmit(handleCreateProduct)}\n                  disabled={addLoading || updateLoading}\n                  type=\"submit\"\n                  form=\"addProductForm1\"\n                  color=\"success\"\n                  className=\"\"\n                >\n                  <CIcon icon={cilSave} className=\"me-2\" />\n                  {addLoading || updateLoading ? \"Loading...\" : \" Save\"}\n                </CButton>\n\n                <CTooltip content=\"Back\">\n                  <CButton onClick={() => navigate(-1)} color=\"\" className=\"border ms-2\">\n                    <Image fluid src={back} style={{ width: \"20px\" }} />\n                  </CButton>\n                </CTooltip>\n              </div>\n            </div>\n          </CCardHeader>\n          <CCardBody>\n            {isLoading ? (\n              <Loading />\n            ) : !isError ? (\n              <AddProductForm\n                images={imgData}\n                setImages={setImgData}\n                data={product?.result}\n                description={description}\n                setDescription={setDescription}\n                shortDescription={shortDescription}\n                setShortDescription={setShortDescription}\n                specification={specification}\n                setSpecification={setSpecification}\n                productTags={productTags}\n                setProductTags={setProductTags}\n                selectedStatus={selectedStatus}\n                setSelectedStatus={setSelectedStatus}\n                // loading={addLoading | updateLoading}\n                onSubmit={handleCreateProduct}\n                remainingImages={remainingImages}\n                setRemainingImages={setRemainingImages}\n                setFlashSaleType={setFlashSaleType}\n                flashSaleType={flashSaleType}\n                flashSale={true}\n                allTypes={allTypes?.data}\n                manufacturer={manufacturer}\n                setManufacturer={setManufacturer}\n                slugValue={slugValue}\n                setSlugValue={setSlugValue}\n              />\n            ) : (\n              <p>There was an error</p>\n            )}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default AddFlashSaleProducts;\n"],"names":["flashSaleTypesApi","apiSlice","injectEndpoints","tagTypes","endpoints","builder","getAllTypes","query","url","method","providesTags","getSingleTypes","id","concat","deleteSingleTypes","mutation","invalidatesTags","updateSingleTypes","_ref","data","body","addSingleTypes","useGetAllTypesQuery","useGetSingleTypesQuery","useDeleteSingleTypesMutation","useAddSingleTypesMutation","useUpdateSingleTypesMutation","AddFlashSaleProducts","useParams","productId","setProductId","useState","description","setDescription","shortDescription","setShortDescription","specification","setSpecification","productTags","setProductTags","selectedStatus","setSelectedStatus","flashSaleType","setFlashSaleType","imgData","setImgData","manufacturer","setManufacturer","slugValue","setSlugValue","remainingImages","setRemainingImages","updateSingleProduct","isLoading","updateLoading","isSuccess","updateSuccess","isError","updateError","error","updateErrorMsg","useUpdateSingleProductMutation","adSingleProduct","addLoading","addSuccess","addError","addErrorMsg","useAddSingleProductMutation","product","useGetSingleProductDetailsQuery","skip","allTypes","typeLoading","typeError","useMemo","_updateErrorMsg$data","_addErrorMsg$data","toast","message","navigate","useNavigate","useEffect","_product$result","_product$result2","_product$result3","_product$result4","_product$result5","_product$result5$manu","_product$result6","result","tags","flashSaleOfferType","_id","slug","_jsx","CRow","children","CCol","xs","_jsxs","CCard","className","CCardHeader","CButton","disabled","type","form","color","CIcon","icon","cilSave","CTooltip","content","onClick","Image","fluid","src","back","style","width","CCardBody","Loading","AddProductForm","images","setImages","onSubmit","_data$categories","_data$subcategories","_data$subcategoryChil","formData","FormData","key","Object","keys","append","name","altTag","status","expireDate","model","price","parseFloat","offerPrice","discountPercentage","quantity","parseInt","JSON","stringify","size","categories","value","subcategories","subcategoryChildren","forEach","img","flashSale"],"sourceRoot":""}